const e=new class{constructor(){this.surgeryData=null}setSurgeryData(e){this.surgeryData=e?{...e}:null}getSurgeryData(){return this.surgeryData?{...this.surgeryData}:null}clearSurgeryData(){this.surgeryData=null}hasSurgeryData(){return null!==this.surgeryData&&"object"==typeof this.surgeryData}hasValidSurgeryData(){if(!this.hasSurgeryData())return!1;return 0===this.getValidationErrors().length}getValidationErrors(){const e=[];if(!this.hasSurgeryData())return e.push({field:"general",message:"Nessun dato di intervento presente"}),e;const t=this.surgeryData;if(t.data_evento&&""!==t.data_evento.toString().trim()||e.push({field:"data_evento",message:"Data intervento obbligatoria"}),t.tipo_intervento&&""!==t.tipo_intervento.toString().trim()||e.push({field:"tipo_intervento",message:"Tipo intervento obbligatorio"}),t.data_evento)try{const a=new Date(t.data_evento),n=new Date;n.setHours(23,59,59,999),isNaN(a.getTime())?e.push({field:"data_evento",message:"Formato data intervento non valido"}):a>n&&e.push({field:"data_evento",message:"La data dell'intervento non può essere nel futuro"})}catch(a){e.push({field:"data_evento",message:"Errore nella validazione della data intervento"})}if(t.has_infection)if(t.data_infezione&&""!==t.data_infezione.toString().trim())try{const a=new Date(t.data_infezione),n=new Date(t.data_evento);isNaN(a.getTime())?e.push({field:"data_infezione",message:"Formato data infezione non valido"}):a<n&&e.push({field:"data_infezione",message:"La data dell'infezione non può essere precedente all'intervento"})}catch(a){e.push({field:"data_infezione",message:"Errore nella validazione della data infezione"})}else e.push({field:"data_infezione",message:"Data infezione obbligatoria se si indica un'infezione"});return e}prepareSurgeryEventData(){if(!this.hasValidSurgeryData())return null;const e=this.getSurgeryData();return{tipo_evento:"intervento",data_evento:e.data_evento,tipo_intervento:e.tipo_intervento,descrizione:e.descrizione||null}}prepareInfectionEventData(){if(!this.hasValidSurgeryData()||!this.surgeryData.has_infection)return null;const e=this.getSurgeryData();return e.data_infezione?{tipo_evento:"infezione",data_evento:e.data_infezione,agente_patogeno:e.agente_patogeno||null,descrizione:e.descrizione_infezione||null}:null}hasAssociatedInfection(){return this.hasSurgeryData()&&!0===this.surgeryData.has_infection&&this.surgeryData.data_infezione}getDataSummary(){if(!this.hasSurgeryData())return{hasData:!1};const e=this.surgeryData,t=this.getValidationErrors();return{hasData:!0,isValid:0===t.length,errorCount:t.length,dataIntervento:e.data_evento||"Non specificata",tipoIntervento:e.tipo_intervento||"Non specificato",hasInfection:e.has_infection||!1,dataInfezione:e.data_infezione||"Non specificata",agentePatogeno:e.agente_patogeno||"Non specificato"}}};export{e as default};
