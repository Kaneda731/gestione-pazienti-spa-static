const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/ConfirmModal-o8jDwL5_.js","assets/index-Cguxbef0.js","assets/vendor-CQCqr9ER.js","assets/supabase-B8WzuNbi.js","assets/index-DaCO5Xrg.css"])))=>i.map(i=>d[i]);
import{_ as t}from"./supabase-B8WzuNbi.js";import{c as e,b as n,l as i,s as a,a as s,n as o,d as r}from"./index-Cguxbef0.js";import{P as l,p as c}from"./patientService-DJFQakDm.js";import{g as d}from"./post-operative-calculator-C3z7C_vm.js";import{f as p,d as u}from"./searchUtils-C0FWAVpe.js";import{i as m}from"./CustomSelect-DUfE6qP_.js";import{g as b,p as v}from"./helpers-D-YmcGcE.js";import"./vendor-CQCqr9ER.js";import"./infectionDataManager-Bb7OdohR.js";class g{constructor(t,e={}){this.patient=t,this.options={isMobile:!1,isTable:!1,...e}}render(){const t=this.patient.data_dimissione;return this.options.isTable?this.renderTableButtons(t):this.options.isMobile?this.renderMobileButtons(t):this.renderDesktopButtons(t)}renderTableButtons(t){return`\n            <button class="btn btn-sm btn-outline-primary action-btn-sm me-1" \n                    data-action="edit" \n                    data-id="${this.patient.id}" \n                    title="Modifica"\n                    aria-label="Modifica paziente ${this.patient.nome} ${this.patient.cognome}">\n                <span class="material-icons" aria-hidden="true">edit</span>\n            </button>\n            ${t?`<button class="btn btn-sm btn-outline-success action-btn-sm" \n                       data-action="riattiva" \n                       data-id="${this.patient.id}" \n                       title="Riattiva Paziente"\n                       aria-label="Riattiva paziente ${this.patient.nome} ${this.patient.cognome}">\n                 <span class="material-icons" aria-hidden="true">undo</span>\n               </button>`:`<button class="btn btn-sm btn-outline-warning action-btn-sm" \n                       data-action="dimetti" \n                       data-id="${this.patient.id}" \n                       title="Dimetti Paziente"\n                       aria-label="Dimetti paziente ${this.patient.nome} ${this.patient.cognome}">\n                 <span class="material-icons" aria-hidden="true">event_available</span>\n               </button>`}\n            <button class="btn btn-sm btn-outline-danger action-btn-sm ms-1" \n                    data-action="delete" \n                    data-id="${this.patient.id}" \n                    title="Elimina"\n                    aria-label="Elimina paziente ${this.patient.nome} ${this.patient.cognome}">\n                <span class="material-icons" aria-hidden="true">delete</span>\n            </button>\n        `}renderMobileButtons(t){return`\n            <button class="btn btn-outline-primary mobile-action-btn-standard" \n                    data-action="edit" \n                    data-id="${this.patient.id}" \n                    title="Modifica"\n                    aria-label="Modifica paziente ${this.patient.nome} ${this.patient.cognome}">\n                <span class="material-icons" aria-hidden="true">edit</span>\n                <span class="mobile-btn-text">Modifica</span>\n            </button>\n            ${t?`<button class="btn btn-outline-success mobile-action-btn-standard" \n                       data-action="riattiva" \n                       data-id="${this.patient.id}" \n                       title="Riattiva"\n                       aria-label="Riattiva paziente ${this.patient.nome} ${this.patient.cognome}">\n                 <span class="material-icons" aria-hidden="true">undo</span>\n                 <span class="mobile-btn-text">Riattiva</span>\n               </button>`:`<button class="btn btn-outline-warning mobile-action-btn-standard" \n                       data-action="dimetti" \n                       data-id="${this.patient.id}" \n                       title="Dimetti"\n                       aria-label="Dimetti paziente ${this.patient.nome} ${this.patient.cognome}">\n                 <span class="material-icons" aria-hidden="true">event_available</span>\n                 <span class="mobile-btn-text">Dimetti</span>\n               </button>`}\n            <button class="btn btn-outline-danger mobile-action-btn-standard" \n                    data-action="delete" \n                    data-id="${this.patient.id}" \n                    title="Elimina"\n                    aria-label="Elimina paziente ${this.patient.nome} ${this.patient.cognome}">\n                <span class="material-icons" aria-hidden="true">delete</span>\n                <span class="mobile-btn-text">Elimina</span>\n            </button>\n        `}renderDesktopButtons(t){return`\n            <button class="btn btn-outline-primary action-btn-standard" \n                    data-action="edit" \n                    data-id="${this.patient.id}"\n                    title="Modifica Paziente"\n                    aria-label="Modifica paziente ${this.patient.nome} ${this.patient.cognome}">\n                <span class="material-icons" aria-hidden="true">edit</span>Modifica\n            </button>\n            ${t?`<button class="btn btn-outline-success action-btn-standard" \n                       data-action="riattiva" \n                       data-id="${this.patient.id}" \n                       title="Riattiva Paziente"\n                       aria-label="Riattiva paziente ${this.patient.nome} ${this.patient.cognome}">\n                 <span class="material-icons" aria-hidden="true">undo</span>Riattiva\n               </button>`:`<button class="btn btn-outline-warning action-btn-standard" \n                       data-action="dimetti" \n                       data-id="${this.patient.id}" \n                       title="Dimetti Paziente"\n                       aria-label="Dimetti paziente ${this.patient.nome} ${this.patient.cognome}">\n                 <span class="material-icons" aria-hidden="true">event_available</span>Dimetti\n               </button>`}\n            <button class="btn btn-outline-danger action-btn-standard" \n                    data-action="delete" \n                    data-id="${this.patient.id}"\n                    title="Elimina Paziente"\n                    aria-label="Elimina paziente ${this.patient.nome} ${this.patient.cognome}">\n                <span class="material-icons" aria-hidden="true">delete</span>Elimina\n            </button>\n        `}}class h{constructor(t){this.patient=t}render(){return this.patient.data_dimissione?"decesso"===this.patient.tipo_dimissione?'<span class="badge bg-dark">Decesso</span>':'<span class="badge bg-secondary">Dimesso</span>':'<span class="badge bg-success">Attivo</span>'}renderForCard(){const t=this.patient.data_dimissione,e=t&&"decesso"===this.patient.tipo_dimissione;return`<span class="patient-status ${e?"decesso":t?"dimesso":"attivo"}">${e?"Decesso":t?"Dimesso":"Attivo"}</span>`}getStatusClass(){return this.patient.data_dimissione?"decesso"===this.patient.tipo_dimissione?"decesso":"dimesso":"attivo"}getStatusText(){return this.patient.data_dimissione?"decesso"===this.patient.tipo_dimissione?"Decesso":"Dimesso":"Attivo"}}class f{constructor(t,e={}){this.patient=t,this.options={isMobile:window.innerWidth<=767,showActions:!0,showClinicalEvents:!1,showPostOperativeDays:!0,...e}}render(){const t=this.patient.data_dimissione?"error":"success",n=e.profile?.role,i="admin"===n||"editor"===n;return this.options.isMobile?this.renderMobileCard(t,i):this.renderDesktopCard(t,i)}getLastInterventionDate(){if(!this.patient.eventi_clinici||0===this.patient.eventi_clinici.length)return null;const t=this.patient.eventi_clinici.filter(t=>"intervento"===t.tipo_evento).sort((t,e)=>new Date(e.data_evento)-new Date(t.data_evento));return t.length>0?new Date(t[0].data_evento).toLocaleDateString():null}isPatientInfected(){return!0===this.patient.infetto||"true"===this.patient.infetto}renderMobileCard(t,e){const n=this.options.showActions&&e?new g(this.patient,{isMobile:!0}).render():"",i=this.options.showPostOperativeDays&&this.patient.eventi_clinici?d(this.patient.eventi_clinici):null,a=i&&i.hasStatus?`<span class="badge bg-${i.statusClass} ms-1" style="font-size: 0.7em;">${i.badgeText}</span>`:"",s=this.getLastInterventionDate(),o=this.isPatientInfected(),r=o?'<span class="badge bg-warning text-dark ms-1" style="font-size: 0.7em;">\n                 <span class="material-icons" style="font-size: 0.6em;">warning</span> Infetto\n               </span>':"",l=[];i&&i.hasStatus&&l.push(i.statusText),s&&l.push(`Intervento: ${s}`);const c=this.options.showClinicalEvents&&e?this.renderMobileQuickActions():"";return`\n            <div class="card ${o?"card-list-compact status-infected":"card-list-compact"} status-${t}">\n                <div class="card-body">\n                    <div class="card-info">\n                        <div class="card-title d-flex align-items-center gap-2">\n                            <span class="material-icons text-primary" style="font-size:1.4em;">person</span>\n                            <span class="fw-bold">${this.patient.cognome} ${this.patient.nome}</span>\n                            ${a}${r}\n                        </div>\n                        <div class="card-meta mobile-text-sm">\n                            ${this.patient.diagnosi} • ${this.patient.reparto_appartenenza}\n                            ${l.length>0?` • ${l.join(" • ")}`:""}\n                        </div>\n                    </div>\n                    <div class="mobile-actions-container">\n                        ${n?`<div class="mobile-primary-actions">${n}</div>`:""}\n                        ${c}\n                    </div>\n                </div>\n            </div>\n        `}renderMobileQuickActions(){return`\n            <div class="mobile-quick-actions mt-2">\n                <div class="mobile-clinical-actions">\n                    <button type="button" class="btn btn-outline-primary mobile-clinical-btn btn-add-intervention" \n                            data-patient-id="${this.patient.id}" \n                            title="Aggiungi Intervento">\n                        <span class="material-icons">medical_services</span>\n                        <span class="mobile-clinical-text">Intervento</span>\n                    </button>\n                    <button type="button" class="btn btn-outline-warning mobile-clinical-btn btn-add-infection" \n                            data-patient-id="${this.patient.id}" \n                            title="Aggiungi Infezione">\n                        <span class="material-icons">warning</span>\n                        <span class="mobile-clinical-text">Infezione</span>\n                    </button>\n                    <button type="button" class="btn btn-outline-info mobile-clinical-btn btn-view-events" \n                            data-patient-id="${this.patient.id}" \n                            title="Timeline Eventi">\n                        <span class="material-icons">timeline</span>\n                        <span class="mobile-clinical-text">Timeline</span>\n                    </button>\n                </div>\n            </div>\n        `}renderDesktopCard(t,e){const n=new h(this.patient).renderForCard(),i=this.options.showActions&&e?new g(this.patient,{isMobile:!1}).render():"",a=this.options.showPostOperativeDays&&this.patient.eventi_clinici?d(this.patient.eventi_clinici):null,s=a&&a.hasStatus?`<span class="badge bg-${a.statusClass} ms-2" title="${a.statusText}">${a.badgeText}</span>`:"",o=this.isPatientInfected(),r=o?'<span class="badge bg-warning text-dark ms-2" title="Paziente infetto">\n                 <span class="material-icons" style="font-size: 0.8em;">warning</span> Infetto\n               </span>':"",l=this.options.showClinicalEvents&&this.patient.eventi_clinici?this.renderClinicalEventsTimeline():"",c=this.options.showClinicalEvents&&e?this.renderQuickActions():"";return`\n            <div class="${o?"patient-card patient-card-infected":"patient-card"}">\n                <div class="patient-card-header d-flex align-items-center gap-2">\n                    <span class="material-icons text-primary" style="font-size:1.7em;">person</span>\n                    <h6 class="patient-name fw-bold mb-0">${this.patient.cognome} ${this.patient.nome}</h6>\n                    ${s}${r}\n                    <span class="flex-grow-1"></span>\n                    ${n}\n                </div>\n                <div class="patient-details">\n                    <div class="patient-detail">\n                        <span class="patient-detail-label">Data Ricovero</span>\n                        <span class="patient-detail-value">${p(this.patient.data_ricovero)}</span>\n                    </div>\n                    <div class="patient-detail">\n                        <span class="patient-detail-label">Diagnosi</span>\n                        <span class="patient-detail-value">${this.patient.diagnosi}</span>\n                    </div>\n                    <div class="patient-detail">\n                        <span class="patient-detail-label">Reparto</span>\n                        <span class="patient-detail-value">${this.patient.reparto_appartenenza}</span>\n                    </div>\n                    <div class="patient-detail">\n                        <span class="patient-detail-label">Livello</span>\n                        <span class="patient-detail-value">${this.patient.livello_assistenza}</span>\n                    </div>\n                    ${o?'\n                    <div class="patient-detail">\n                        <span class="patient-detail-label">Stato Infezione</span>\n                        <span class="patient-detail-value text-warning fw-bold">\n                            <span class="material-icons" style="font-size: 1em; vertical-align: middle;">warning</span>\n                            Paziente Infetto\n                        </span>\n                    </div>\n                    ':""}\n                    ${a&&a.hasStatus?`\n                    <div class="patient-detail">\n                        <span class="patient-detail-label">Post-Operatorio</span>\n                        <span class="patient-detail-value">${a.statusText}</span>\n                    </div>\n                    `:""}\n                </div>\n                ${l}\n                ${c}\n                ${i?`<div class="patient-actions">${i}</div>`:""}\n            </div>\n        `}getTransferInfo(){if(!this.patient.data_dimissione||!this.patient.tipo_dimissione)return"-";switch(this.patient.tipo_dimissione){case"trasferimento_interno":return this.patient.reparto_destinazione?`<small class="text-info"><strong>→ ${this.patient.reparto_destinazione}</strong></small>`:'<small class="text-muted">Interno</small>';case"trasferimento_esterno":let t='<small class="text-warning"><strong>Esterno</strong>';if(this.patient.clinica_destinazione&&(t+=`<br>→ ${this.patient.clinica_destinazione}`),this.patient.codice_clinica){t+=`<br>(${"56"===this.patient.codice_clinica?"Riab. Motoria":"60"===this.patient.codice_clinica?"Lunga Degenza":`Cod. ${this.patient.codice_clinica}`})`}return t+="</small>",t;default:return'<small class="text-muted">-</small>'}}renderTableRow(){const t=new h(this.patient).render(),n=e.profile?.role,i=this.options.showActions&&("admin"===n||"editor"===n)?new g(this.patient,{isTable:!0}).render():"",a=this.options.showPostOperativeDays&&this.patient.eventi_clinici?d(this.patient.eventi_clinici):null,s=a&&a.hasStatus?`<span class="badge bg-${a.statusClass}" title="${a.statusText}">${a.badgeText}</span>`:"-",o=this.getTransferInfo(),r=this.isPatientInfected(),l=r?'<span class="badge bg-warning text-dark ms-1" title="Paziente infetto">\n                 <span class="material-icons" style="font-size: 0.8em;">warning</span> Infetto\n               </span>':"";return`\n            <tr class="${r?"table-warning":""}">\n                <td data-label="Cognome">${this.patient.cognome}</td>\n                <td data-label="Nome">${this.patient.nome}</td>\n                <td data-label="Data Nascita">${this.patient.data_nascita?p(this.patient.data_nascita):"-"}</td>\n                <td data-label="Data Ricovero">${p(this.patient.data_ricovero)}</td>\n                <td data-label="Diagnosi">${this.patient.diagnosi}</td>\n                <td data-label="Reparto">${this.patient.reparto_appartenenza}</td>\n                <td data-label="Post-Op">${s}</td>\n                <td data-label="Stato">${t}${l}</td>\n                <td data-label="Trasferimento">${o}</td>\n                <td class="text-nowrap">\n                    ${i}\n                </td>\n            </tr>\n        `}renderClinicalEventsTimeline(){if(!this.patient.eventi_clinici||0===this.patient.eventi_clinici.length)return'\n                <div class="clinical-events-section mt-3">\n                    <h6 class="clinical-events-title">Eventi Clinici</h6>\n                    <p class="text-muted small">Nessun evento clinico registrato</p>\n                </div>\n            ';const t=[...this.patient.eventi_clinici].sort((t,e)=>new Date(e.data_evento)-new Date(t.data_evento));return`\n            <div class="clinical-events-section mt-3">\n                <h6 class="clinical-events-title">Eventi Clinici Recenti</h6>\n                <div class="clinical-events-timeline">\n                    ${t.slice(0,3).map(t=>{const e=new Date(t.data_evento).toLocaleDateString();return`\n                <div class="clinical-event-item d-flex align-items-center mb-2">\n                    <span class="material-icons ${"intervento"===t.tipo_evento?"text-primary":"text-warning"} me-2" style="font-size: 16px;">${"intervento"===t.tipo_evento?"medical_services":"warning"}</span>\n                    <div class="flex-grow-1">\n                        <div class="event-type small fw-bold">${"intervento"===t.tipo_evento?"Intervento":"Infezione"}</div>\n                        <div class="event-details small text-muted">\n                            ${e} - ${t.tipo_intervento||t.agente_patogeno||"N/A"}\n                        </div>\n                    </div>\n                </div>\n            `}).join("")}\n                </div>\n                ${t.length>3?`<a href="#eventi-clinici?paziente=${this.patient.id}" class="small text-primary">Vedi tutti (${t.length})</a>`:""}\n            </div>\n        `}renderQuickActions(){return`\n            <div class="quick-actions-section mt-3">\n                <div class="btn-group btn-group-sm" role="group">\n                    <button type="button" class="btn btn-outline-primary btn-add-intervention" \n                            data-patient-id="${this.patient.id}" \n                            title="Aggiungi Intervento">\n                        <span class="material-icons" style="font-size: 14px;">medical_services</span>\n                        Intervento\n                    </button>\n                    <button type="button" class="btn btn-outline-warning btn-add-infection" \n                            data-patient-id="${this.patient.id}" \n                            title="Aggiungi Infezione">\n                        <span class="material-icons" style="font-size: 14px;">warning</span>\n                        Infezione\n                    </button>\n                    <button type="button" class="btn btn-outline-info btn-view-events" \n                            data-patient-id="${this.patient.id}" \n                            title="Vedi tutti gli eventi">\n                        <span class="material-icons" style="font-size: 14px;">timeline</span>\n                        Timeline\n                    </button>\n                </div>\n            </div>\n        `}}const $={};function z(){const t={reparto:$.repartoFilter?.value||"",diagnosi:$.diagnosiFilter?.value||"",stato:$.statoFilter?.value||"",infetto:$.infettoFilter?.value||"",trasferimento:$.trasferimentoFilter?.value||"",search:$.searchInput?.value||"",page:n.getFilters().page||0,sortColumn:n.getFilters().sortColumn||"data_ricovero",sortDirection:n.getFilters().sortDirection||"desc"};n.updateFilters(t)}function y(){n.resetFilters(),$.repartoFilter&&($.repartoFilter.value=""),$.diagnosiFilter&&($.diagnosiFilter.value=""),$.statoFilter&&($.statoFilter.value=""),$.infettoFilter&&($.infettoFilter.value=""),$.trasferimentoFilter&&($.trasferimentoFilter.value=""),$.searchInput&&($.searchInput.value=""),[$.repartoFilter,$.diagnosiFilter,$.statoFilter,$.infettoFilter,$.trasferimentoFilter].forEach(t=>{t?.customSelectInstance&&t.customSelectInstance.setValue("")})}function w(){return n.getFilters()}function B(t){!function(t,e){const i=n.getFilters();n.updateFilters({...i,[t]:e})}("page",t)}function E(t,e){n.updateFilters({...n.getFilters(),sortColumn:t,sortDirection:e})}function x(){const t=n.getFilters();return{column:t.sortColumn||"data_ricovero",direction:t.sortDirection||"desc"}}const M={get currentPage(){return n.getFilters().page||0},set currentPage(t){B(t)},get sortColumn(){return x().column},set sortColumn(t){E(t,x().direction)},get sortDirection(){return x().direction},set sortDirection(t){E(x().column,t)}};async function _(){i.log("📊 Iniziando fetchPazienti..."),i.log("📊 Stato corrente:",{currentPage:M.currentPage,sortColumn:M.sortColumn,sortDirection:M.sortDirection});const t=w(),e=M.currentPage||0;i.log("📊 Preparazione richiesta a patientService.getPatients",{page:e,limit:l,sortColumn:M.sortColumn,sortDirection:M.sortDirection,filters:t});const{patients:n,totalCount:s}=await c.getPatients(t,{page:e,limit:l,sortColumn:M.sortColumn,sortDirection:M.sortDirection});if(i.log("📊 Risposta da patientService.getPatients",{dataLength:n?.length,count:s}),n&&n.length>0){i.log("📊 Caricamento eventi clinici per i pazienti...");try{const t=n.map(t=>t.id),{data:e,error:s}=await a.from("eventi_clinici").select("*").in("paziente_id",t).order("data_evento",{ascending:!1});if(s)i.warn("⚠️ Errore nel caricamento eventi clinici:",s);else{const t={};e&&e.forEach(e=>{t[e.paziente_id]||(t[e.paziente_id]=[]),t[e.paziente_id].push(e)}),n.forEach(e=>{e.eventi_clinici=t[e.id]||[]}),i.log("✅ Eventi clinici caricati per",Object.keys(t).length,"pazienti")}}catch(o){i.warn("⚠️ Errore nel caricamento eventi clinici:",o),n.forEach(t=>{t.eventi_clinici=[]})}}return n&&n.length>0&&i.log("🔍 Data verification - First record:",{hasUserId:!!n[0].user_id,hasCreatedAt:!!n[0].created_at,hasEventiClinici:!!n[0].eventi_clinici,eventiCount:n[0].eventi_clinici?.length||0,tableName:"pazienti",sample:n[0]}),i.log("✅ fetchPazienti completato con successo"),{data:n,count:s}}async function C(){const t=$.exportCsvButton||$.exportCsvButtonMobile;if(!t)return;const e=t.innerHTML;t.disabled=!0,t.innerHTML=s('<span class="spinner-border spinner-border-sm"></span> Esportazione...');try{const t=w();await c.exportPatients(t)}catch(n){i.error("Errore catturato in list-api durante l'esportazione CSV:",n)}finally{t.disabled=!1,t.innerHTML=s(e)}}async function I(){const t=$.exportJsonButton||$.exportJsonButtonMobile;if(!t)return;const e=t.innerHTML;t.disabled=!0,t.innerHTML=s('<span class="spinner-border spinner-border-sm"></span> Esportazione...');try{const t=w();await c.exportPatientsJSON(t)}catch(n){i.error("Errore catturato in list-api durante l'esportazione JSON:",n)}finally{t.disabled=!1,t.innerHTML=s(e)}}async function F(t,e){try{e?await c.dischargePatient(t):await c.reactivatePatient(t)}catch(n){throw i.error(`❌ Errore durante l'aggiornamento dello stato del paziente ${t}:`,n),n}}function D(){$.tableHeaders&&0!==$.tableHeaders.length&&$.tableHeaders.forEach(t=>{if(!t)return;const e=t.querySelector(".sort-indicator");e&&(e.textContent=t.dataset.sort===M.sortColumn?"asc"===M.sortDirection?" ▲":" ▼":"")})}function P(t,e){!function(t){const e=document.getElementById("pazienti-table-body");if(!e)return;if(e.innerHTML="",0===t.length){const t=e.insertRow(),n=document.createElement("td");return n.colSpan=10,n.className="text-center text-muted",n.textContent="Nessun paziente trovato.",t.appendChild(n),void 0}const n=t.map(t=>new f(t,{showActions:!0,showPostOperativeDays:!0}).renderTableRow()).join("");e.innerHTML=n}(t),function(t){const e=document.getElementById("pazienti-cards-container");if(!e)return;if(0===t.length){e.innerHTML="";const t=document.createElement("div");return t.className="text-center text-muted p-4",t.textContent="Nessun paziente trovato.",e.appendChild(t),void 0}const n=t.map(t=>{const e=window.innerWidth<=767;return new f(t,{showActions:!0,showPostOperativeDays:!0,showClinicalEvents:!0,isMobile:e}).render()}).join("");e.innerHTML=s(n)}(t),function(t){const e=Math.ceil(t/l);$.pageInfo&&($.pageInfo.textContent=`Pagina ${M.currentPage+1} di ${e||1}`);$.prevButton&&($.prevButton.disabled=0===M.currentPage);$.nextButton&&($.nextButton.disabled=M.currentPage>=e-1);$.pageInfoMobile&&($.pageInfoMobile.textContent=`${M.currentPage+1} / ${e||1}`);$.prevButtonMobile&&($.prevButtonMobile.disabled=0===M.currentPage);$.nextButtonMobile&&($.nextButtonMobile.disabled=M.currentPage>=e-1)}(e),D(),k()}function L(t){i.error("Errore dettagliato durante il fetch dei pazienti:",t),$.tableBody&&($.tableBody.innerHTML=s('<tr><td colspan="10" class="text-center text-danger"><strong>Errore nel caricamento dei dati.</strong><br>Controlla la console per i dettagli.</td></tr>'));const e=document.getElementById("pazienti-cards-container");e&&(e.innerHTML=s('<div class="text-center text-danger p-4"><strong>Errore nel caricamento dei dati.</strong></div>'))}function k(){const t=document.querySelector(".table-responsive"),e=document.getElementById("pazienti-cards-container");t&&e&&(window.innerWidth>=1200?(t.style.display="block",e.style.display="none"):(t.style.display="none",e.style.display="block"))}let T=[],S=0;function A(t){M.currentPage=t,z(),O()}async function O(){!function(){$.tableBody&&($.tableBody.innerHTML=s('<tr><td colspan="10" class="text-center"><div class="spinner-border"></div></td></tr>'));const t=document.getElementById("pazienti-cards-container");t&&(t.innerHTML=s('<div class="text-center p-4"><div class="spinner-border"></div></div>'))}();try{const{data:t,count:e}=await _();T=t||[],S=e||0,P(T,e)}catch(t){i.error("❌ Errore in fetchAndRender:",t),o.error(`Errore nel caricamento pazienti: ${t.message}`),L(t)}}function R(){const e=()=>{M.currentPage=0,z(),O()};let n;$.searchInput&&(n=u(()=>e(),300),$.searchInput.addEventListener("input",n)),$.filterContainer&&$.filterContainer.addEventListener("change",t=>{t.target.matches('select, input[type="checkbox"], input[type="radio"]')&&e()}),$.resetButton.addEventListener("click",()=>{y(),o.info("Filtri resettati",{timeout:1500,position:"top-center"}),O()}),$.resetButtonMobile&&$.resetButtonMobile.addEventListener("click",()=>{y(),o.info("Filtri resettati",{timeout:1500,position:"top-center"}),O()}),$.exportCsvButton.addEventListener("click",C),$.exportJsonButton.addEventListener("click",I),$.exportCsvButtonMobile&&$.exportCsvButtonMobile.addEventListener("click",C),$.exportJsonButtonMobile&&$.exportJsonButtonMobile.addEventListener("click",I),$.prevButton&&$.prevButton.addEventListener("click",()=>{$.prevButton.disabled||M.currentPage<=0||A(M.currentPage-1)}),$.nextButton&&$.nextButton.addEventListener("click",()=>{const t=Math.ceil(S/l);$.nextButton.disabled||M.currentPage>=t-1||A(M.currentPage+1)}),$.prevButtonMobile&&$.prevButtonMobile.addEventListener("click",()=>{$.prevButtonMobile.disabled||M.currentPage<=0||A(M.currentPage-1)}),$.nextButtonMobile&&$.nextButtonMobile.addEventListener("click",()=>{const t=Math.ceil(S/l);$.nextButtonMobile.disabled||M.currentPage>=t-1||A(M.currentPage+1)}),$.tableHeaders.forEach(t=>{t.addEventListener("click",()=>{const e=t.dataset.sort;M.sortColumn===e?M.sortDirection="asc"===M.sortDirection?"desc":"asc":(M.sortColumn=e,M.sortDirection="asc"),M.currentPage=0,z(),O()})});const a=e=>{const n=e.target.closest("button[data-action]");if(n){const{action:e,id:a}=n.dataset;return!async function(e,n){try{switch(e){case"edit":sessionStorage.setItem("editPazienteId",n);const e=T.find(t=>t.id===n);o.info(`Modifica di ${e?`${e.nome} ${e.cognome}`:"il paziente"}`,{timeout:2e3,position:"top-center"}),r("inserimento");break;case"delete":const{ConfirmModal:a}=await t(async()=>{const{ConfirmModal:t}=await import("./ConfirmModal-o8jDwL5_.js");return{ConfirmModal:t}},__vite__mapDeps([0,1,2,3,4])),s=T.find(t=>t.id===n),l=s?`${s.nome} ${s.cognome}`:"questo paziente",d=a.forDeletion(l);await d.show()&&(await async function(t){try{await c.deletePatient(t),i.log("✅ Chiamata a patientService.deletePatient completata per ID:",t)}catch(e){throw i.error("❌ Errore eliminazione paziente:",e),i.error("Errore catturato in list-api durante la cancellazione del paziente:",e.message),e}}(n),o.success(`${l} eliminato con successo`),O());break;case"dimetti":const{ConfirmModal:p}=await t(async()=>{const{ConfirmModal:t}=await import("./ConfirmModal-o8jDwL5_.js");return{ConfirmModal:t}},__vite__mapDeps([0,1,2,3,4])),u=T.find(t=>t.id===n),m=u?`${u.nome} ${u.cognome}`:"il paziente",b=p.forDismissal(m);await b.show()&&(await F(n,!0),o.success(`${m} dimesso con successo`),await O());break;case"riattiva":const{ConfirmModal:v}=await t(async()=>{const{ConfirmModal:t}=await import("./ConfirmModal-o8jDwL5_.js");return{ConfirmModal:t}},__vite__mapDeps([0,1,2,3,4])),g=T.find(t=>t.id===n),h=g?`${g.nome} ${g.cognome}`:"il paziente",f=v.forReactivation(h);await f.show()&&(await F(n,!1),o.success(`${h} riattivato con successo`),await O())}}catch(a){i.error("❌ Errore in handlePatientAction:",a),o.error(`Errore nell'operazione: ${a.message}`)}}(e,a),void 0}const a=e.target.closest('button[class*="btn-add-"], button[class*="btn-view-"]');if(a){const t=a.dataset.patientId;a.classList.contains("btn-add-intervention")?H("add-intervention",t):a.classList.contains("btn-add-infection")?H("add-infection",t):a.classList.contains("btn-view-events")&&H("view-events",t)}};return document.getElementById("pazienti-table-body")?.addEventListener("click",a),document.getElementById("pazienti-cards-container")?.addEventListener("click",a),$.backButton.addEventListener("click",()=>{r("home")}),window.removeEventListener("resize",k),window.addEventListener("resize",k),()=>{$.searchInput&&n&&$.searchInput.removeEventListener("input",n)}}async function H(t,e){try{const n=T.find(t=>t.id===e),i=n?`${n.nome} ${n.cognome}`:"Paziente";switch(t){case"add-intervention":o.info(`Creazione intervento per ${i}`,{timeout:2e3,position:"top-center"}),r(`eventi-clinici?action=add&type=intervento&paziente=${e}`);break;case"add-infection":o.info(`Creazione infezione per ${i}`,{timeout:2e3,position:"top-center"}),r(`eventi-clinici?action=add&type=infezione&paziente=${e}`);break;case"view-events":o.info(`Visualizzazione eventi clinici di ${i}`,{timeout:2e3,position:"top-center"}),r(`eventi-clinici?paziente=${e}`)}}catch(n){i.error("❌ Errore in handleClinicalEventAction:",n),o.error(`Errore nell'operazione clinica: ${n.message}`)}}async function j(){i.log("📡 Inizio caricamento dati per la vista lista...");try{!function(){const t=n.getFilters();$.repartoFilter&&t.reparto&&($.repartoFilter.value=t.reparto),$.diagnosiFilter&&t.diagnosi&&($.diagnosiFilter.value=t.diagnosi),$.statoFilter&&t.stato&&($.statoFilter.value=t.stato),$.infettoFilter&&t.infetto&&($.infettoFilter.value=t.infetto),$.trasferimentoFilter&&t.trasferimento&&($.trasferimentoFilter.value=t.trasferimento),$.searchInput&&t.search&&($.searchInput.value=t.search)}();const[t,e,a]=await Promise.all([_(),b("reparto_appartenenza"),b("diagnosi")]);return i.log("✅ Dati per la lista caricati con successo."),{pazienti:t.data,count:t.count,repartoOptions:e,diagnosiOptions:a}}catch(t){throw i.error("❌ Errore durante il caricamento dei dati per la lista:",t),t}}async function J(t){if(i.log("🏗️ Inizializzazione vista lista pazienti con dati pre-caricati..."),!e.session)return i.log("❌ Accesso a #list bloccato: utente non autenticato."),void 0;M.currentPage=0;const a=document.querySelector("#view-container .view");if(!a)return i.error("❌ View container non trovato"),void 0;try{!function(t){i.log("🗂️ Caching DOM elements...",{viewContainer:t}),$.repartoFilter=document.getElementById("list-filter-reparto"),$.diagnosiFilter=document.getElementById("list-filter-diagnosi"),$.statoFilter=document.getElementById("list-filter-stato"),$.infettoFilter=document.getElementById("list-filter-infetto"),$.trasferimentoFilter=document.getElementById("list-filter-trasferimento"),$.searchInput=document.getElementById("list-search"),$.filterContainer=t.querySelector(".filters-container"),$.tableBody=document.getElementById("pazienti-table-body"),$.cardsContainer=document.getElementById("pazienti-cards-container"),$.tableHeaders=t.querySelectorAll("th[data-sort]"),$.prevButton=document.getElementById("prev-page-btn"),$.nextButton=document.getElementById("next-page-btn"),$.pageInfo=document.getElementById("page-info"),$.prevButtonMobile=document.getElementById("prev-page-btn-mobile"),$.nextButtonMobile=document.getElementById("next-page-btn-mobile"),$.pageInfoMobile=document.getElementById("page-info-mobile"),$.backButton=t.querySelector('button[data-view="home"]'),$.resetButton=document.getElementById("pazienti-reset-filters-btn"),$.resetButtonMobile=document.getElementById("pazienti-reset-filters-btn-mobile"),$.exportCsvButton=document.getElementById("pazienti-export-csv-btn"),$.exportCsvButtonMobile=document.getElementById("pazienti-export-csv-btn-mobile"),$.exportJsonButton=document.getElementById("pazienti-export-json-btn"),$.exportJsonButtonMobile=document.getElementById("pazienti-export-json-btn-mobile"),i.log("🗂️ DOM elements cached:",{tableBody:!!$.tableBody,cardsContainer:!!$.cardsContainer,repartoFilter:!!$.repartoFilter,diagnosiFilter:!!$.diagnosiFilter,statoFilter:!!$.statoFilter,infettoFilter:!!$.infettoFilter,trasferimentoFilter:!!$.trasferimentoFilter,searchInput:!!$.searchInput,filterContainer:!!$.filterContainer,tableHeaders:$.tableHeaders?.length||0,prevButton:!!$.prevButton,nextButton:!!$.nextButton,pageInfo:!!$.pageInfo,prevButtonMobile:!!$.prevButtonMobile,nextButtonMobile:!!$.nextButtonMobile,pageInfoMobile:!!$.pageInfoMobile,backButton:!!$.backButton,resetButton:!!$.resetButton,resetButtonMobile:!!$.resetButtonMobile,exportCsvButton:!!$.exportCsvButton,exportCsvButtonMobile:!!$.exportCsvButtonMobile,exportJsonButton:!!$.exportJsonButton,exportJsonButtonMobile:!!$.exportJsonButtonMobile}),$.tableBody&&$.cardsContainer?i.log("✅ Elementi DOM critici trovati"):i.error("❌ Elementi DOM critici mancanti:",{tableBody:!!$.tableBody,cardsContainer:!!$.cardsContainer}),["tableBody","cardsContainer","repartoFilter","diagnosiFilter","statoFilter","infettoFilter"].forEach(t=>{$[t]||i.error(`Elemento DOM critico non trovato: ${t}`)}),["trasferimentoFilter"].forEach(t=>{$[t]||i.log(`Elemento DOM opzionale non trovato: ${t}`)})}(a);const{pazienti:e,count:s,repartoOptions:o,diagnosiOptions:r}=t;T=e||[],S=s||0,v($.repartoFilter,o),v($.diagnosiFilter,r);const l=n.getFilters();$.repartoFilter&&($.repartoFilter.value=l.reparto||""),$.diagnosiFilter&&($.diagnosiFilter.value=l.diagnosi||""),$.statoFilter&&($.statoFilter.value=l.stato||""),$.infettoFilter&&($.infettoFilter.value=l.infetto||""),$.trasferimentoFilter&&($.trasferimentoFilter.value=l.trasferimento||""),$.searchInput&&($.searchInput.value=l.search||""),m("#list-filter-reparto, #list-filter-diagnosi, #list-filter-stato, #list-filter-infetto, #list-filter-trasferimento");const c=R();return P(T,s),D(),window.removeEventListener("resize",k),window.addEventListener("resize",k),()=>{window.removeEventListener("resize",k),"function"==typeof c&&c()}}catch(s){i.error("Errore durante l'inizializzazione della vista lista:",s),L(s)}}export{j as fetchListData,J as initListView};
