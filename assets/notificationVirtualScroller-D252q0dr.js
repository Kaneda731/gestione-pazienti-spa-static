class t{constructor(t,i={}){this.container=t,this.options={itemHeight:72,visibleCount:5,bufferSize:2,...i},this.notifications=[],this.renderedItems=new Map,this.scrollTop=0,this.containerHeight=0,this.totalHeight=0,this.init()}init(){this.container&&(this.viewport=document.createElement("div"),this.viewport.className="notification-virtual-viewport",this.viewport.style.cssText="\n            height: 100%;\n            overflow-y: auto;\n            position: relative;\n        ",this.content=document.createElement("div"),this.content.className="notification-virtual-content",this.content.style.cssText="\n            position: relative;\n            width: 100%;\n        ",this.viewport.appendChild(this.content),this.container.appendChild(this.viewport),this.viewport.addEventListener("scroll",this.handleScroll.bind(this)),window.ResizeObserver&&(this.resizeObserver=new ResizeObserver(this.handleResize.bind(this)),this.resizeObserver.observe(this.container)),this.updateContainerHeight())}handleScroll(){this.scrollTop=this.viewport.scrollTop,this.render()}handleResize(){this.updateContainerHeight(),this.render()}updateContainerHeight(){this.containerHeight=this.container.clientHeight,this.options.visibleCount=Math.ceil(this.containerHeight/this.options.itemHeight)+1}setNotifications(t){this.notifications=t,this.totalHeight=t.length*this.options.itemHeight,this.content.style.height=`${this.totalHeight}px`,this.render()}render(){if(!this.notifications.length)return this.clearRendered(),void 0;const t=Math.floor(this.scrollTop/this.options.itemHeight),i=Math.min(t+this.options.visibleCount+this.options.bufferSize,this.notifications.length),e=Math.max(0,t-this.options.bufferSize),s=i;for(const[n,o]of this.renderedItems)(n<e||n>=s)&&(o.remove(),this.renderedItems.delete(n));for(let n=e;n<s;n++)if(!this.renderedItems.has(n)&&this.notifications[n]){const t=this.createNotificationElement(this.notifications[n],n);t&&(this.renderedItems.set(n,t),this.content.appendChild(t))}for(const[n,o]of this.renderedItems){const t=n*this.options.itemHeight;o.style.position="absolute",o.style.top=`${t}px`,o.style.width="100%",o.style.zIndex=this.notifications.length-n}}createNotificationElement(t,i){if(this.options.createElement)return this.options.createElement(t,i);const e=document.createElement("div");return e.className=`notification notification--${t.type}`,e.dataset.id=t.id,e.innerHTML=`\n            <div class="notification__content">\n                <span class="notification__icon">${this.getIconForType(t.type)}</span>\n                <div class="notification__message">${t.message}</div>\n            </div>\n        `,e}getIconForType(t){return{success:"✓",error:"✗",warning:"⚠",info:"ℹ"}[t]||"ℹ"}clearRendered(){for(const t of this.renderedItems.values())t.remove();this.renderedItems.clear()}scrollToNotification(t){const i=this.notifications.findIndex(i=>i.id===t);if(-1!==i){this.viewport.scrollTo({top:i*this.options.itemHeight,behavior:"smooth"})}}updateNotification(t,i){const e=this.notifications.findIndex(i=>i.id===t);if(-1!==e&&(this.notifications[e]={...this.notifications[e],...i},this.renderedItems.has(e))){const t=this.renderedItems.get(e),i=this.createNotificationElement(this.notifications[e],e);if(i){t.replaceWith(i),this.renderedItems.set(e,i);const s=e*this.options.itemHeight;i.style.position="absolute",i.style.top=`${s}px`,i.style.width="100%"}}}removeNotification(t){const i=this.notifications.findIndex(i=>i.id===t);if(-1!==i){this.notifications.splice(i,1),this.renderedItems.has(i)&&(this.renderedItems.get(i).remove(),this.renderedItems.delete(i));const t=new Map;for(const[e,s]of this.renderedItems){t.set(e>i?e-1:e,s)}this.renderedItems=t,this.totalHeight=this.notifications.length*this.options.itemHeight,this.content.style.height=`${this.totalHeight}px`,this.render()}}destroy(){this.resizeObserver&&this.resizeObserver.disconnect(),this.clearRendered(),this.viewport&&this.viewport.parentNode&&this.viewport.parentNode.removeChild(this.viewport)}getStats(){return{totalNotifications:this.notifications.length,renderedElements:this.renderedItems.size,memoryUsage:this.renderedItems.size*this.options.itemHeight,scrollPosition:this.scrollTop,containerHeight:this.containerHeight}}}export{t as NotificationVirtualScroller};
