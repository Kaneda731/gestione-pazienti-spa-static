const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/infectionDataManager-BUcTDAl8.js","assets/index-Ch1Y3veH.js","assets/vendor-CQCqr9ER.js","assets/supabase-86D3GPeZ.js","assets/index-CMiMZzvZ.css","assets/ConfirmModal-De4MEDkl.js","assets/index-DN_HOoYj.js","assets/lookupService-u-NrDFn2.js","assets/patientService-EGfMwTHQ.js"])))=>i.map(i=>d[i]);
import{_ as e}from"./supabase-86D3GPeZ.js";import{v as t,m as n,e as a,f as i,i as o}from"./infectionDataManager-BUcTDAl8.js";import{s as r,l as s,n as c,a as l,d}from"./index-Ch1Y3veH.js";import m from"./CustomDatepicker-6By5cdaM.js";import{i as u,C as p,u as v}from"./CustomSelect-CVIgPX66.js";import{p as g}from"./post-operative-calculator-C3z7C_vm.js";import{ResolveInfectionModal as f}from"./ResolveInfectionModal-DZaI0uGW.js";import{Modal as h}from"./vendor-CQCqr9ER.js";import y from"./surgeryDataManager-CbtGeuzn.js";import{c as _}from"./date-CcL_Wp-e.js";import{l as E}from"./lookupService-u-NrDFn2.js";import"./utils-BtSsRyB2.js";const b="paziente-id",I="nome",w="cognome",z="data_nascita",D="data_ricovero",S="data_dimissione",C="diagnosi",k="reparto_appartenenza",T="reparto_provenienza",B="livello_assistenza",x="codice_rad",$="infetto",P="tipo_dimissione",L="clinica_destinazione",F="reparto_destinazione",M="codice_clinica",V="codice_dimissione",N="inserimento-title",O="save-patient-btn",A="reparto-destinazione-container",j="clinica-destinazione-container",q="codice-clinica-container",H={reparto_destinazione_id:"reparto_destinazione",codice_dimissione_id:"codice_dimissione",clinica_destinazione_id:"codice_clinica"};async function R(){const{data:e,error:t}=await r.from("diagnosi").select("nome").order("nome",{ascending:!0});if(t)throw s.error("Error loading diagnosi options:",t),new Error("Impossibile caricare le opzioni di diagnosi.");return e||[]}async function W(e){if(!e)return null;const{data:t,error:n}=await r.from("pazienti").select("*").eq("id",e).single();if(n)throw s.error("Error loading patient for editing:",n),new Error("Impossibile caricare i dati del paziente.");if(t)try{Object.entries(H).forEach(([e,n])=>{t[e]&&(t[n]=t[e].toString())})}catch(a){s.error("Errore nella conversione campi lookup per edit:",a)}return t}async function U(e,a){const i={};let o;if(Object.keys(e).forEach(t=>{""!==e[t]&&null!=e[t]&&(i[t]=e[t])}),i.infetto=Boolean(i.infetto),t(i),o=a?await r.from("pazienti").update(i).eq("id",a).select().single():await r.from("pazienti").insert(i).select().single(),o.error){s.error("Error saving patient:",o.error);const e=n(o.error,{entity:"paziente",operation:"salvataggio"});throw new Error(e)}return o.data}const Y=new class{convertDateToISO(e){if(!e)return null;if(e.match(/^\d{4}-\d{2}-\d{2}$/))return e;if(!e.includes("/"))throw new Error("Formato data non valido. Utilizzare il formato gg/mm/aaaa");const t=e.split("/");if(3!==t.length)throw new Error("Formato data non valido. Utilizzare il formato gg/mm/aaaa");const[n,a,i]=t,o=parseInt(n,10),r=parseInt(a,10),s=parseInt(i,10);if(isNaN(o)||isNaN(r)||isNaN(s))throw new Error("Formato data non valido. Utilizzare numeri validi");if(o<1||o>31)throw new Error("Giorno non valido (1-31)");if(r<1||r>12)throw new Error("Mese non valido (1-12)");if(s<1900||s>2100)throw new Error("Anno non valido");const c=new Date(s,r-1,o);if(c.getDate()!==o||c.getMonth()!==r-1||c.getFullYear()!==s)throw new Error("Data non valida (es. 31/02/2025)");return`${i}-${a.padStart(2,"0")}-${n.padStart(2,"0")}`}convertDateFromISO(e){if(!e||!e.includes("-"))return e;const[t,n,a]=e.split("-");return`${a}/${n}/${t}`}validateEventoData(e){if(!e.tipo_evento)return{isValid:!1,message:"Seleziona il tipo di evento"};if(!e.data_evento)return{isValid:!1,message:"Inserisci la data dell'evento"};try{const t=new Date(e.data_evento+"T00:00:00");if(isNaN(t.getTime()))return{isValid:!1,message:"Formato data non valido"};const n=new Date,a=new Date(n.getFullYear(),n.getMonth(),n.getDate());if(new Date(t.getFullYear(),t.getMonth(),t.getDate())>a)return{isValid:!1,message:"La data dell'evento non può essere nel futuro"}}catch(t){return{isValid:!1,message:"Errore nella validazione della data: "+t.message}}return"intervento"!==e.tipo_evento||e.tipo_intervento?{isValid:!0}:{isValid:!1,message:"Seleziona il tipo di intervento"}}getEventoFormData(){const e=document.getElementById("evento-data").value;let t=null;if(e&&""!==e.trim())try{t=this.convertDateToISO(e.trim())}catch(a){throw new Error(a.message||"Formato data non valido. Utilizzare il formato gg/mm/aaaa")}const n={id:document.getElementById("evento-id").value||null,tipo_evento:document.getElementById("evento-tipo").value,data_evento:t,descrizione:document.getElementById("evento-descrizione").value,tipo_intervento:document.getElementById("evento-tipo-intervento").value||null,agente_patogeno:document.getElementById("evento-agente-patogeno").value||null};return Object.keys(n).forEach(e=>{""!==n[e]&&null!==n[e]||(n[e]=null)}),n}populateFormWithEventData(e){document.getElementById("evento-id").value=e.id,document.getElementById("evento-data").value=this.convertDateFromISO(e.data_evento),document.getElementById("evento-descrizione").value=e.descrizione||"",document.getElementById("evento-tipo-intervento").value=e.tipo_intervento||"",document.getElementById("evento-agente-patogeno").value=e.agente_patogeno||"";const t=document.getElementById("evento-tipo");t?.customSelectInstance&&e.tipo_evento?t.customSelectInstance.setValue(e.tipo_evento):document.getElementById("evento-tipo").value=e.tipo_evento}createTemporaryEvent(e){return{...e,id:`temp_manual_${Date.now()}`,isTemporary:!0}}};function G(e){e&&(e.style.display="none")}function J(e,t="block"){e&&(e.style.display=t)}const K=new class{constructor(){this.eventiDatepicker=null}initializeComponents(){u("#evento-tipo");const e=document.getElementById("evento-tipo-intervento");e&&!e.customSelectInstance&&new p(e),this.eventiDatepicker=new m("#evento-data",{dateFormat:"d/m/Y",allowInput:!0,maxDate:"today",onChange:function(e,t,n){if(e.length>0){const t=e[0],a=new Date;a.setHours(23,59,59,999),t>a&&(n.clear(),c.warning("La data dell'evento non può essere nel futuro"))}}})}showForm(){const e=document.getElementById("nuovo-evento-form");e&&(J(e,"block"),this.resetForm(),e.scrollIntoView({behavior:"smooth",block:"start"}))}hideForm(){const e=document.getElementById("nuovo-evento-form");e&&(G(e),this.resetForm())}resetForm(){if(!document.getElementById("nuovo-evento-form"))return;document.getElementById("evento-id").value="",document.getElementById("evento-tipo").value="",document.getElementById("evento-data").value="",document.getElementById("evento-tipo-intervento").value="",document.getElementById("evento-agente-patogeno").value="",document.getElementById("evento-descrizione").value="",this.handleEventoTypeChange("");const e=document.getElementById("evento-tipo");e?.customSelectInstance&&e.customSelectInstance.setValue("");const t=document.getElementById("evento-tipo-intervento");t?.customSelectInstance&&t.customSelectInstance.setValue("")}handleEventoTypeChange(e){const t=document.getElementById("tipo-intervento-container"),n=document.getElementById("agente-patogeno-container");t&&G(t),n&&G(n);const a=document.getElementById("evento-tipo-intervento"),i=document.getElementById("evento-agente-patogeno");switch(a&&(a.value="",a.customSelectInstance&&a.customSelectInstance.setValue("")),i&&(i.value=""),e){case"intervento":t&&(J(t,"block"),a&&!a.customSelectInstance&&new p(a));break;case"infezione":n&&J(n,"block")}}populateFormForEdit(e,t){this.showForm(),requestAnimationFrame(()=>{t.populateFormWithEventData(e),this.handleEventoTypeChange(e.tipo_evento),requestAnimationFrame(()=>{const t=document.getElementById("evento-tipo-intervento");t?.customSelectInstance&&e.tipo_intervento&&t.customSelectInstance.setValue(e.tipo_intervento)})})}cleanup(){this.eventiDatepicker&&(this.eventiDatepicker.destroy(),this.eventiDatepicker=null)}};const Q=new class{renderEventiList(e){const t=document.getElementById("eventi-list"),n=document.getElementById("no-eventi-message");if(!e||0===e.length)return this._renderEmptyState(t,n),void 0;let a;n&&(n.style.display="none");try{a=e.map(e=>this._generateEventoCard(e)).join("")}catch(i){s.error("Errore durante generazione HTML eventi:",i),a='<div class="alert alert-danger">Errore nel caricamento eventi</div>'}t.innerHTML=l(a)}_generateEventoCard(e){const t=Y.convertDateFromISO(e.data_evento),n="intervento"===e.tipo_evento?"medical_services":"coronavirus",a="intervento"===e.tipo_evento?"primary":"warning";let i="";"infezione"===e.tipo_evento&&e.data_fine_evento&&(i=`<span class="badge bg-success ms-2">Risolto il ${Y.convertDateFromISO(e.data_fine_evento)}</span>`),e.isTemporary&&(i+='<span class="badge bg-info ms-2">\n        <span class="material-icons me-1" style="font-size: 12px;">schedule</span>Da salvare\n      </span>');const o="infezione"===e.tipo_evento&&e.data_fine_evento,r=e.isTemporary;return`\n      <div class="card mb-3 evento-card" data-evento-id="${e.id}">\n        <div class="card-body">\n          <div class="d-flex justify-content-between align-items-start">\n            <div class="flex-grow-1">\n              ${this._generateEventoHeader(e,n,a,t,i)}\n              ${this._generateEventoDetails(e)}\n            </div>\n            ${this._generateEventoActions(e,r,o)}\n          </div>\n        </div>\n      </div>\n    `}_generateEventoHeader(e,t,n,a,i){return`\n      <div class="d-flex align-items-center mb-2">\n        <span class="badge bg-${n} me-2">\n          <span class="material-icons me-1" style="font-size: 14px;">${t}</span>\n          ${"intervento"===e.tipo_evento?"Intervento":"Infezione"}\n        </span>\n        <small class="text-muted">${a}</small>\n        ${i}\n      </div>\n    `}_generateEventoDetails(e){let t="";return e.tipo_intervento&&(t+=`<p class="mb-1"><strong>Tipo:</strong> ${e.tipo_intervento}</p>`),e.agente_patogeno&&(t+=`<p class="mb-1"><strong>Agente:</strong> ${e.agente_patogeno}</p>`),e.descrizione&&(t+=`<p class="mb-0 text-muted">${e.descrizione}</p>`),t}_generateEventoActions(e,t,n){return`\n      <div class="dropdown">\n        <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" ${t?"disabled":""}>\n          <span class="material-icons" style="font-size: 16px;">more_vert</span>\n        </button>\n        ${t?this._generateTemporaryEventActions():this._generateRegularEventActions(e,n)}\n      </div>\n    `}_generateTemporaryEventActions(){return'\n      <ul class="dropdown-menu">\n        <li><span class="dropdown-item-text text-muted">\n          <span class="material-icons me-2" style="font-size: 16px;">info</span>\n          Evento temporaneo - Salva il paziente per renderlo definitivo\n        </span></li>\n      </ul>\n    '}_generateRegularEventActions(e,t){return`\n      <ul class="dropdown-menu">\n        <li><a class="dropdown-item edit-evento" href="#" data-evento-id="${e.id}">\n          <span class="material-icons me-2" style="font-size: 16px;">edit</span>Modifica\n        </a></li>\n        ${"infezione"!==e.tipo_evento||t?"":`\n        <li><a class="dropdown-item resolve-infezione" href="#" data-evento-id="${e.id}" data-start-date="${e.data_evento}">\n          <span class="material-icons me-2" style="font-size: 16px;">check_circle</span>Risolvi\n        </a></li>\n        `}\n        <li><a class="dropdown-item delete-evento text-danger" href="#" data-evento-id="${e.id}">\n          <span class="material-icons me-2" style="font-size: 16px;">delete</span>Elimina\n        </a></li>\n      </ul>\n    `}_renderEmptyState(e,t){t&&(t.style.display="block"),e.innerHTML='<div class="text-center text-muted py-4">Nessun evento clinico registrato</div>',t&&e.appendChild(t)}flashUpdateEffect(){const e=document.getElementById("eventi-list");e&&(e.style.opacity="0.7",setTimeout(()=>{e.style.opacity="1"},150))}};const X=new class{constructor(){this.currentPatientId=null,this.onStatusChangeCallback=null}setCurrentPatient(e){this.currentPatientId=e}getCurrentPatient(){return this.currentPatientId}setStatusChangeCallback(e){this.onStatusChangeCallback=e}updatePostOperativeInfo(e){const t=document.getElementById("post-op-info"),n=document.getElementById("post-op-text");if(!e||0===e.length)return t.classList.add("d-none"),void 0;const a=g.calculatePostOperativeDays(e);a.hasInterventions?(t.classList.remove("d-none"),n.textContent=a.displayText,t.classList.remove("alert-danger","alert-warning","alert-info"),t.classList.add("alert","d-flex","align-items-center"),t.classList.add(a.postOperativeDays<=7?"alert-danger":a.postOperativeDays<=30?"alert-warning":"alert-info")):t.classList.add("d-none")}isPatientCurrentlyInfected(e){return!(!e||0===e.length)&&e.some(e=>"infezione"===e.tipo_evento&&!e.data_fine_evento)}syncCheckboxesWithEvents(e){const t=document.getElementById("infetto"),n=document.getElementById("ha_intervento");if(!t||!n)return;const a=this.isPatientCurrentlyInfected(e),i=e&&e.some(e=>"intervento"===e.tipo_evento);a?(t.checked=!0,t.disabled=!0,this._setHelperVisibility("infetto-helper-text","Stato gestito dagli eventi di infezione attivi.")):(t.disabled=!1,this._setHelperVisibility("infetto-helper-text",null)),i?(n.checked=!0,n.disabled=!0,this._setHelperVisibility("intervento-helper-text","Stato gestito dagli eventi di intervento presenti.")):(n.disabled=!1,this._setHelperVisibility("intervento-helper-text",null)),"function"==typeof window.updateInfectionIndicator&&window.updateInfectionIndicator(),"function"==typeof window.updateSurgeryIndicator&&window.updateSurgeryIndicator()}syncInfectionStatusWithForm(){"function"==typeof this.onStatusChangeCallback&&this.onStatusChangeCallback()}_setHelperVisibility(e,t){const n=document.getElementById(e);n&&(t?(n.textContent=t,n.style.display="block"):n.style.display="none")}isEventiTabActive(){const e=document.getElementById("eventi-clinici-tab");return e&&e.classList.contains("active")}cleanup(){this.currentPatientId=null,this.onStatusChangeCallback=null}};const Z=new class{constructor(){this.currentEventi=[]}handleTemporaryEvent(e){try{const t=Y.createTemporaryEvent(e);return this.currentEventi||(this.currentEventi=[]),this.currentEventi=this.currentEventi.filter(t=>!t.isTemporary||t.tipo_evento!==e.tipo_evento),this.currentEventi.push(t),c.success("Evento aggiunto temporaneamente. Verrà salvato quando salvi il paziente."),this.currentEventi}catch(t){throw s.error("Errore nella gestione evento temporaneo:",t.message),c.error("Errore nell'aggiungere l'evento temporaneo"),t}}async createTemporaryEventsFromCheckboxes(){try{const[{default:t},{default:n}]=await Promise.all([e(()=>import("./infectionDataManager-BUcTDAl8.js").then(e=>e.b),__vite__mapDeps([0,1,2,3,4])),e(()=>import("./surgeryDataManager-CbtGeuzn.js"),[])]),a=[];if(t.hasValidInfectionData()){const e=t.getInfectionData();a.push({id:"temp_infection",tipo_evento:"infezione",data_evento:e.data_evento,agente_patogeno:e.agente_patogeno,descrizione:e.descrizione,data_fine_evento:null,isTemporary:!0})}if(n.hasValidSurgeryData()){const e=n.getSurgeryData();a.push({id:"temp_surgery",tipo_evento:"intervento",data_evento:e.data_evento,tipo_intervento:e.tipo_intervento,descrizione:e.descrizione,isTemporary:!0}),e.has_infection&&e.data_infezione&&a.push({id:"temp_surgery_infection",tipo_evento:"infezione",data_evento:e.data_infezione,agente_patogeno:e.agente_patogeno,descrizione:e.descrizione_infezione,data_fine_evento:null,isTemporary:!0})}return[...this.currentEventi||[],...a]}catch(t){return s.error("Errore nella creazione eventi temporanei da checkbox:",t),this.currentEventi||[]}}getTemporaryEvents(){return this.currentEventi?this.currentEventi.filter(e=>e.isTemporary):[]}clearTemporaryEvents(){this.currentEventi&&(this.currentEventi=this.currentEventi.filter(e=>!e.isTemporary))}setCurrentEventi(e){this.currentEventi=e||[]}getCurrentEventi(){return this.currentEventi||[]}cleanup(){this.currentEventi=[]}};function ee(t){X.setStatusChangeCallback(t),function(){const t=document.getElementById("add-evento-btn");t&&t.addEventListener("click",()=>K.showForm());[document.getElementById("cancel-evento-btn"),document.getElementById("cancel-evento-btn-2")].forEach(e=>{e&&e.addEventListener("click",()=>K.hideForm())});const n=document.getElementById("save-evento-btn");n&&n.addEventListener("click",te);const i=document.getElementById("evento-tipo");i&&i.addEventListener("change",e=>{K.handleEventoTypeChange(e.target.value)});const o=document.getElementById("eventi-clinici-tab");o&&o.addEventListener("shown.bs.tab",()=>{ne()});const r=document.getElementById("eventi-list");r&&r.addEventListener("click",t=>{const n=t.target.closest(".edit-evento"),i=t.target.closest(".delete-evento"),o=t.target.closest(".resolve-infezione");if(n||i||o)if(t.preventDefault(),n){!function(e){const t=Z.getCurrentEventi().find(t=>t.id===e);if(!t)return;K.populateFormForEdit(t,Y)}(n.dataset.eventoId)}else if(i){!async function(t){const{ConfirmModal:n}=await e(async()=>{const{ConfirmModal:e}=await import("./ConfirmModal-De4MEDkl.js");return{ConfirmModal:e}},__vite__mapDeps([5,1,2,3,4])),i=n.forClinicalEventDeletion();if(!(await i.show()))return;try{await a.deleteEvento(t),await ne()}catch(o){s.error("Errore catturato in deleteEvento:",o.message)}}(i.dataset.eventoId)}else if(o){!async function(e,t){const n=new f({minDate:t}),i=await n.show();if(i)try{await a.resolveInfezione(e,i),await ne()}catch(o){s.error("Errore catturato durante la risoluzione dell'infezione:",o)}}(o.dataset.eventoId,o.dataset.startDate)}})}(),K.initializeComponents()}async function te(){try{const e=Y.getEventoFormData(),t=Y.validateEventoData(e);if(!t.isValid)return c.error(t.message),void 0;const n=X.getCurrentPatient();if(!n){const t=Z.handleTemporaryEvent(e);return Q.renderEventiList(t),X.updatePostOperativeInfo(t),X.syncCheckboxesWithEvents(t),K.hideForm(),void 0}e.paziente_id=n,e.id?await a.updateEvento(e.id,e):(delete e.id,await a.createEvento(e)),await ne(),K.hideForm(),Q.flashUpdateEffect()}catch(e){s.error("Errore catturato in handleSaveEvento:",e.message)}}async function ne(){const e=X.getCurrentPatient();if(e)try{const t=await a.getEventiByPaziente(e);Z.setCurrentEventi(t),Q.renderEventiList(t),X.updatePostOperativeInfo(t),X.syncInfectionStatusWithForm(),X.syncCheckboxesWithEvents(t)}catch(t){s.error("Errore nel caricamento eventi clinici per il paziente:",t)}}function ae(){const e=Z.getCurrentEventi();return X.isPatientCurrentlyInfected(e)}function ie(e){X.setCurrentPatient(e),X.isEventiTabActive()&&ne()}function oe(){K.cleanup(),X.cleanup(),Z.cleanup()}const re=Object.freeze(Object.defineProperty({__proto__:null,cleanupEventiCliniciTab:oe,createTemporaryEventsFromCheckboxes:async function(){try{const e=await Z.createTemporaryEventsFromCheckboxes();Q.renderEventiList(e),X.updatePostOperativeInfo(e)}catch(e){s.error("Errore nella creazione eventi temporanei da checkbox:",e)}},getTemporaryEvents:function(){return Z.getTemporaryEvents()},initEventiCliniciTab:ee,isPatientCurrentlyInfected:ae,loadEventiForCurrentPatient:ne,setCurrentPatient:ie},Symbol.toStringTag,{value:"Module"}));class se{constructor(e={}){this.options={title:"Registra Infezione",patientName:"",defaultDate:(new Date).toISOString().split("T")[0],...e},this.modalId=`infection-modal-${Date.now()}`,this.datepickerInstance=null}show(){return new Promise(e=>{const t=this.render();document.body.insertAdjacentHTML("beforeend",t);const n=document.getElementById(this.modalId),a=n.querySelector("form"),i=new h(n);this.datepickerInstance=new m(`#${this.modalId} [data-datepicker]`,{defaultDate:this.options.defaultDate,maxDate:"today"});a.addEventListener("submit",t=>{t.preventDefault();const o=new FormData(a),r=this.datepickerInstance.instances[0]?.selectedDates[0],s={data_evento:r?r.toISOString().split("T")[0]:null,agente_patogeno:o.get("agente_patogeno"),descrizione:o.get("descrizione")};return s.agente_patogeno?s.data_evento?(this._defocus(n),i.hide(),e(s),void 0):(c.error("La data di infezione è obbligatoria."),void 0):(c.error("L'agente patogeno è obbligatorio."),void 0)}),n.addEventListener("hide.bs.modal",()=>{this._defocus(n)}),n.addEventListener("hidden.bs.modal",()=>{this.datepickerInstance&&this.datepickerInstance.destroy(),n.remove(),e(null)}),i.show()})}render(){const e=this.options.patientName?`${this.options.title} per <strong>${l(this.options.patientName)}</strong>`:this.options.title;return`\n            <div class="modal fade" id="${this.modalId}" tabindex="-1" aria-labelledby="infectionModalLabel" aria-hidden="true">\n                <div class="modal-dialog modal-dialog-centered">\n                    <div class="modal-content">\n                        <form>\n                            <div class="modal-header">\n                                <h5 class="modal-title" id="infectionModalLabel">${e}</h5>\n                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n                            </div>\n                            <div class="modal-body">\n                                <div class="mb-3">\n                                    <label for="data_evento" class="form-label">Data Infezione</label>\n                                    <div class="input-group-icon">\n                                        <input type="text" class="form-control" id="data_evento" name="data_evento" data-datepicker placeholder="gg/mm/aaaa" required>\n                                        <span class="material-icons input-icon">calendar_today</span>\n                                    </div>\n                                </div>\n                                <div class="mb-3">\n                                    <label for="agente_patogeno" class="form-label">Agente Patogeno</label>\n                                    <input type="text" class="form-control" id="agente_patogeno" name="agente_patogeno" placeholder="Es. Staphylococcus aureus" required>\n                                </div>\n                                <div class="mb-3">\n                                    <label for="descrizione" class="form-label">Descrizione (opzionale)</label>\n                                    <textarea class="form-control" id="descrizione" name="descrizione" rows="3" placeholder="Dettagli aggiuntivi sull'infezione..."></textarea>\n                                </div>\n                            </div>\n                            <div class="modal-footer">\n                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annulla</button>\n                                <button type="submit" class="btn btn-primary">Salva Evento</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        `}_defocus(e){try{const t=document.activeElement;t&&e.contains(t)&&"function"==typeof t.blur&&t.blur()}catch{}}}class ce{constructor(e={}){this.options={title:"Dati Intervento Chirurgico",patientName:"",defaultDate:(new Date).toISOString().split("T")[0],...e},this.modal=null,this.datepicker=null,this.resolve=null,this.reject=null}show(){return new Promise((e,t)=>{this.resolve=e,this.reject=t,this.createModal(),this.showModal()})}createModal(){const e="surgery-event-modal",t=document.getElementById(e);t&&t.remove();const n=`\n            <div class="modal fade" id="${e}" tabindex="-1" aria-labelledby="${e}-label" aria-hidden="true">\n                <div class="modal-dialog modal-lg">\n                    <div class="modal-content">\n                        <div class="modal-header bg-primary text-white">\n                            <h5 class="modal-title" id="${e}-label">\n                                <span class="material-icons me-2">medical_services</span>\n                                ${l(this.options.title)}\n                            </h5>\n                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Chiudi"></button>\n                        </div>\n                        <div class="modal-body">\n                            ${this.options.patientName?`\n                                <div class="alert alert-info d-flex align-items-center mb-3">\n                                    <span class="material-icons me-2">person</span>\n                                    <span><strong>Paziente:</strong> ${l(this.options.patientName)}</span>\n                                </div>\n                            `:""}\n                            \n                            <form id="surgery-event-form">\n                                <div class="row g-3">\n                                    <div class="col-md-6">\n                                        <label for="surgery-data-evento" class="form-label">\n                                            Data Intervento <span class="text-danger">*</span>\n                                        </label>\n                                        <div class="input-group-icon">\n                                            <input\n                                                type="text"\n                                                class="form-control"\n                                                id="surgery-data-evento"\n                                                name="data_evento"\n                                                data-datepicker\n                                                placeholder="gg/mm/aaaa"\n                                                required\n                                            />\n                                            <span class="material-icons input-icon">calendar_today</span>\n                                        </div>\n                                        <small class="form-text text-muted">\n                                            Data in cui è stato eseguito l'intervento\n                                        </small>\n                                    </div>\n\n                                    <div class="col-md-6">\n                                        <label for="surgery-tipo-intervento" class="form-label">\n                                            Tipo Intervento <span class="text-danger">*</span>\n                                        </label>\n                                        <select\n                                            class="form-select"\n                                            id="surgery-tipo-intervento"\n                                            name="tipo_intervento"\n                                            data-custom="true"\n                                            required\n                                        >\n                                            <option value="">Seleziona tipo...</option>\n                                            <option value="Chirurgia Ortopedica">Chirurgia Ortopedica</option>\n                                            <option value="Chirurgia Plastica">Chirurgia Plastica</option>\n                                            <option value="Chirurgia Vascolare">Chirurgia Vascolare</option>\n                                            <option value="Chirurgia Generale">Chirurgia Generale</option>\n                                            <option value="Chirurgia Cardiaca">Chirurgia Cardiaca</option>\n                                            <option value="Neurochirurgia">Neurochirurgia</option>\n                                            <option value="Chirurgia Toracica">Chirurgia Toracica</option>\n                                            <option value="Chirurgia Ricostruttiva - Arti">Chirurgia Ricostruttiva - Arti</option>\n                                            <option value="Altro">Altro</option>\n                                        </select>\n                                    </div>\n\n                                    <div class="col-12">\n                                        <label for="surgery-descrizione" class="form-label">\n                                            Descrizione Intervento\n                                        </label>\n                                        <textarea\n                                            class="form-control"\n                                            id="surgery-descrizione"\n                                            name="descrizione"\n                                            rows="3"\n                                            placeholder="Descrizione dettagliata dell'intervento eseguito..."\n                                        ></textarea>\n                                        <small class="form-text text-muted">\n                                            Descrizione opzionale dell'intervento\n                                        </small>\n                                    </div>\n\n                                    \x3c!-- Sezione Infezione Post-Operatoria --\x3e\n                                    <div class="col-12">\n                                        <hr class="my-3">\n                                        <h6 class="mb-3">\n                                            <span class="material-icons me-2">coronavirus</span>\n                                            Infezione Post-Operatoria\n                                        </h6>\n                                        \n                                        <div class="form-check form-switch mb-3">\n                                            <input\n                                                class="form-check-input"\n                                                type="checkbox"\n                                                id="surgery-has-infection"\n                                                name="has_infection"\n                                            />\n                                            <label class="form-check-label" for="surgery-has-infection">\n                                                Paziente ha sviluppato infezione post-operatoria\n                                            </label>\n                                        </div>\n\n                                        \x3c!-- Campi Infezione (nascosti di default) --\x3e\n                                        <div id="surgery-infection-fields" class="d-none">\n                                            <div class="row g-3">\n                                                <div class="col-md-6">\n                                                    <label for="surgery-data-infezione" class="form-label">\n                                                        Data Inizio Infezione\n                                                    </label>\n                                                    <div class="input-group-icon">\n                                                        <input\n                                                            type="text"\n                                                            class="form-control"\n                                                            id="surgery-data-infezione"\n                                                            name="data_infezione"\n                                                            data-datepicker\n                                                            placeholder="gg/mm/aaaa"\n                                                        />\n                                                        <span class="material-icons input-icon">calendar_today</span>\n                                                    </div>\n                                                </div>\n\n                                                <div class="col-md-6">\n                                                    <label for="surgery-agente-patogeno" class="form-label">\n                                                        Agente Patogeno\n                                                    </label>\n                                                    <input\n                                                        type="text"\n                                                        class="form-control"\n                                                        id="surgery-agente-patogeno"\n                                                        name="agente_patogeno"\n                                                        placeholder="Es. Staphylococcus aureus"\n                                                    />\n                                                </div>\n\n                                                <div class="col-12">\n                                                    <label for="surgery-descrizione-infezione" class="form-label">\n                                                        Descrizione Infezione\n                                                    </label>\n                                                    <textarea\n                                                        class="form-control"\n                                                        id="surgery-descrizione-infezione"\n                                                        name="descrizione_infezione"\n                                                        rows="2"\n                                                        placeholder="Descrizione dell'infezione post-operatoria..."\n                                                    ></textarea>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class="modal-footer">\n                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">\n                                <span class="material-icons me-1">cancel</span>\n                                Annulla\n                            </button>\n                            <button type="button" class="btn btn-primary" id="surgery-save-btn">\n                                <span class="material-icons me-1">save</span>\n                                Salva Dati\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `;document.body.insertAdjacentHTML("beforeend",n),this.modal=document.getElementById(e),this.setupEventListeners(),this.initializeComponents()}setupEventListeners(){this.modal.querySelector("#surgery-save-btn").addEventListener("click",()=>this.handleSave());this.modal.querySelector("#surgery-has-infection").addEventListener("change",e=>{this.toggleInfectionFields(e.target.checked)}),this.modal.addEventListener("hidden.bs.modal",()=>{this.resolve&&this.resolve(null),this.cleanup()});this.modal.querySelector("#surgery-event-form").addEventListener("submit",e=>{e.preventDefault(),this.handleSave()})}initializeComponents(){this.datepicker=new m("#surgery-data-evento, #surgery-data-infezione",{dateFormat:"d/m/Y",allowInput:!0,maxDate:"today"}),u("#surgery-tipo-intervento");const e=this.modal.querySelector("#surgery-data-evento");if(this.options.defaultDate){const[t,n,a]=this.options.defaultDate.split("-");e.value=`${a}/${n}/${t}`}}toggleInfectionFields(e){const t=this.modal.querySelector("#surgery-infection-fields");if(e){t.classList.remove("d-none");const e=this.modal.querySelector("#surgery-data-evento"),n=this.modal.querySelector("#surgery-data-infezione");e.value&&!n.value&&(n.value=e.value)}else t.classList.add("d-none"),this.modal.querySelector("#surgery-data-infezione").value="",this.modal.querySelector("#surgery-agente-patogeno").value="",this.modal.querySelector("#surgery-descrizione-infezione").value=""}showModal(){new bootstrap.Modal(this.modal,{backdrop:"static",keyboard:!1}).show()}handleSave(){const e=this.getFormData(),t=this.validateData(e);if(!t.isValid)return this.showValidationErrors(t.errors),void 0;bootstrap.Modal.getInstance(this.modal).hide(),this.resolve&&(this.resolve(e),this.resolve=null)}getFormData(){const e=this.modal.querySelector("#surgery-event-form"),t=new FormData(e),n=Object.fromEntries(t.entries());if(n.data_evento&&n.data_evento.includes("/")){const[e,t,a]=n.data_evento.split("/");n.data_evento=`${a}-${t.padStart(2,"0")}-${e.padStart(2,"0")}`}if(this.modal.querySelector("#surgery-has-infection").checked){if(n.has_infection=!0,n.data_infezione&&n.data_infezione.includes("/")){const[e,t,a]=n.data_infezione.split("/");n.data_infezione=`${a}-${t.padStart(2,"0")}-${e.padStart(2,"0")}`}}else n.has_infection=!1,delete n.data_infezione,delete n.agente_patogeno,delete n.descrizione_infezione;return n}validateData(e){const t=[];if(e.data_evento||t.push("La data dell'intervento è obbligatoria"),e.tipo_intervento||t.push("Il tipo di intervento è obbligatorio"),e.data_evento){const n=new Date(e.data_evento),a=new Date;a.setHours(23,59,59,999),isNaN(n.getTime())?t.push("Data intervento non valida"):n>a&&t.push("La data dell'intervento non può essere nel futuro")}if(e.has_infection)if(e.data_infezione){const n=new Date(e.data_infezione),a=new Date(e.data_evento);isNaN(n.getTime())?t.push("Data infezione non valida"):n<a&&t.push("La data dell'infezione non può essere precedente all'intervento")}else t.push("La data di inizio infezione è obbligatoria se si indica un'infezione");return{isValid:0===t.length,errors:t}}showValidationErrors(e){this.modal.querySelectorAll(".validation-error").forEach(e=>e.remove());const t=document.createElement("div");t.className="alert alert-danger validation-error";const n=document.createElement("strong");n.textContent="Errori di validazione:",t.appendChild(n);const a=document.createElement("ul");a.className="mb-0 mt-2",e.forEach(e=>{const t=document.createElement("li");t.textContent=String(e),a.appendChild(t)}),t.appendChild(a);this.modal.querySelector(".modal-body").prepend(t)}cleanup(){this.datepicker&&(this.datepicker.destroy(),this.datepicker=null),this.modal&&(this.modal.remove(),this.modal=null),this.resolve=null,this.reject=null}}const le="trasferimento_interno",de="trasferimento_esterno";async function me(e,{title:t,patientName:n,defaultDate:a,errorMessage:i="Errore nell'apertura della modal"}){const o=new e({title:t,patientName:n,defaultDate:a});try{return await o.show()}catch(r){return s.error(i,r),c.error(i),null}}function ue(e){const{checkboxId:t,showModal:n,setData:a,clearData:i,updateIndicator:o,updateEventsTabFromCheckboxes:r}=e,s=document.getElementById(t),c=document.querySelector(`label[for="${t}"]`);s&&c&&(s.addEventListener("change",async e=>{if(e.target.checked){const t=await n();t?(a(t),o(),r()):(e.target.checked=!1,i(),o(),r())}else i(),r()}),o())}function pe(e){if(!e)return"";const t=i(e);return"-"===t?"":t}async function ve(t,n){const{isPatientCurrentlyInfected:a,infectionDataManager:i,surgeryDataManager:o}=n,r=new FormData(t),c=Object.fromEntries(r.entries()),l=a(),d=i.hasValidInfectionData(),m=o.hasValidSurgeryData(),u=m&&o.hasAssociatedInfection();if(c.infetto=l||d||u,d&&!l){const e=i.getInfectionData();c._hasInfectionData=!0,c._infectionData=e,c._requiresInfectionEvent=!0}if(m){const e=o.getSurgeryData();c._hasSurgeryData=!0,c._surgeryData=e,c._requiresSurgeryEvent=!0}["data_nascita","data_ricovero","data_dimissione","data_infezione","data_evento"].forEach(e=>{if(!c[e])return s.debug(`Data ${e} vuota o non presente`),void 0;try{const t=_(c[e]);if(null!==t){const n=c[e];c[e]=t,s.debug(`Conversione data ${e}: ${n} -> ${c[e]}`)}}catch(t){s.warn(`Formato data non valido per campo ${e}:`,c[e])}}),Object.keys(c).forEach(e=>{""!==c[e]&&null!=c[e]||(c[e]=null)});const p=c.tipo_dimissione;"trasferimento_interno"!==p&&(c.reparto_destinazione=null,c.reparto_destinazione_id=null),"trasferimento_esterno"!==p&&(c.clinica_destinazione=null,c.codice_clinica=null,c.clinica_destinazione_id=null),delete c.ha_intervento;return["nome","cognome","data_ricovero"].forEach(e=>{c[e]&&""!==c[e].toString().trim()||s.error(`Campo obbligatorio mancante: ${e}`,c)}),await async function(t){try{const{codiciDimissioneService:n,repartiService:a,clinicheService:i}=await e(async()=>{const{codiciDimissioneService:e,repartiService:t,clinicheService:n}=await import("./index-DN_HOoYj.js");return{codiciDimissioneService:e,repartiService:t,clinicheService:n}},__vite__mapDeps([6,7,1,2,3,4]));if(t.codice_dimissione&&!isNaN(t.codice_dimissione)){const e=await n.getById(parseInt(t.codice_dimissione));e&&(t.codice_dimissione_id=parseInt(t.codice_dimissione),t.codice_dimissione=e.codice)}if(t.reparto_destinazione&&!isNaN(t.reparto_destinazione)){const e=await a.getById(parseInt(t.reparto_destinazione));e&&(t.reparto_destinazione_id=parseInt(t.reparto_destinazione),t.reparto_destinazione=e.nome)}if(t.codice_clinica&&!isNaN(t.codice_clinica)){const e=await i.getById(parseInt(t.codice_clinica));e&&(t.clinica_destinazione_id=parseInt(t.codice_clinica),t.codice_clinica=e.codice)}}catch(n){s.error("Errore nella conversione campi normalizzati:",n)}}(c),c}function ge({labelSelector:e,checkboxId:t,badgeClass:n,hasData:a,isValid:i,getTooltip:o,onBadgeClick:r}){const c=document.querySelector(e),l=document.getElementById(t);if(!c||!l)return;const d=c.querySelector(`.${n}`);if(d&&d.remove(),!a())return;const m=!!i(),u=document.createElement("span");u.className=`badge ms-2 ${n} ${m?"bg-success":"bg-warning"}`,u.innerHTML=m?'<span class="material-icons" style="font-size: 12px;">check_circle</span> Dati inseriti':'<span class="material-icons" style="font-size: 12px;">warning</span> Dati incompleti';const p=o?.();p&&(u.title=p),u.style.cursor="pointer",u.addEventListener("click",async e=>{e.preventDefault(),e.stopPropagation();try{await(r?.())}catch(t){s.warn("Errore durante l'azione del badge:",t)}}),c.appendChild(u)}function fe(e,t){const n=String(t||"info").toLowerCase();switch(s.debug("🔍 [showFeedbackMessage] Input:",{message:e,type:n}),n){case"success":case"ok":case"successo":c.success(e);break;case"error":case"danger":case"errore":c.error(e);break;case"warning":case"warn":case"avviso":case"alert":c.warning(e);break;default:s.debug("[showFeedbackMessage] Calling notificationService.info with:",e);const t=c.info(e);s.debug("[showFeedbackMessage] notificationService.info result:",t)}}let he=null;async function ye(){await async function(){try{const e=[],t=document.getElementById("codice_dimissione");t&&e.push(E.populateCodiciDimissioneSelect(t));const n=document.getElementById("reparto_destinazione");n&&e.push(E.populateRepartiSelect(n,null,"interno"));const a=document.getElementById("codice_clinica");a&&e.push(E.populateClinicheSelect(a)),await Promise.all(e)}catch(e){s.error("Errore nel caricamento dati lookup:",e),c.error("Errore nel caricamento delle opzioni del form")}}(),u('#form-inserimento [data-custom="true"]'),he=new m("[data-datepicker]",{dateFormat:"d/m/Y",allowInput:!0}),function(){const e=document.getElementById("tipo_dimissione");e&&e.addEventListener("change",e=>{_e(e.target.value)});const t=document.getElementById("nome"),n=document.getElementById("cognome");t&&n&&[t,n].forEach(e=>{e.addEventListener("input",()=>function(e="inserimento-title"){const t=document.getElementById(e);if(!t)return;const n=document.getElementById("nome"),a=document.getElementById("cognome"),i=document.getElementById("paziente-id");if(i&&i.value){const e=`${n?n.value.trim():""} ${a?a.value.trim():""}`.trim();t.innerHTML=l(e?`<span class="material-icons text-primary me-2">person</span><span class="patient-name fw-bold">${e}</span>`:'<span class="material-icons text-primary me-2">person</span>Nome Cognome')}else t.innerHTML=l('<span class="material-icons me-2">person_add</span>Inserimento Nuovo Paziente')}())})}(),ue({checkboxId:"infetto",showModal:Ie,setData:e=>o.setInfectionData(e),clearData:()=>function(){o.clearInfectionData(),ze();const e=document.getElementById("infetto");e&&e.checked&&(e.checked=!1),De()}(),updateIndicator:()=>ze(),updateEventsTabFromCheckboxes:()=>De()}),ue({checkboxId:"ha_intervento",showModal:be,setData:e=>y.setSurgeryData(e),clearData:()=>function(){y.clearSurgeryData(),we();const e=document.getElementById("ha_intervento");e&&e.checked&&(e.checked=!1),De()}(),updateIndicator:()=>we(),updateEventsTabFromCheckboxes:()=>De()}),ee(Ee)}function _e(e,t=!1){!function(e,t=!1){const n=document.getElementById(A),a=document.getElementById(j),i=document.getElementById(q);if(n&&a&&i){if(n.style.display="none",a.style.display="none",i.style.display="none",!t){const e=document.getElementById(F);e&&(e.value="");const t=document.getElementById(L);t&&(t.value="");const n=document.getElementById(M);n&&(n.value="")}switch(e){case le:n.style.display="block";break;case de:a.style.display="block",i.style.display="block"}setTimeout(()=>{if(e===le){const e=document.getElementById(F);e&&!e.customSelectInstance&&u(`#${F}`)}else if(e===de){const e=document.getElementById(M);e&&!e.customSelectInstance&&u(`#${M}`)}},50)}}(e,t)}function Ee(){const e=document.getElementById("infetto"),t=document.getElementById("infetto-helper-text");if(!e||!t)return;const n=ae(),a=o.hasValidInfectionData();n?(e.checked=!0,e.disabled=!0,t.textContent="Stato gestito dagli eventi di infezione attivi.",t.style.display="block",a&&(o.clearInfectionData(),ze())):(e.disabled=!1,e.checked=a,t.style.display="none",ze())}async function be(){const e=document.getElementById("nome"),t=document.getElementById("cognome"),n=e&&t?`${e.value.trim()} ${t.value.trim()}`.trim():"",a=y.getSurgeryData();return me(ce,{title:"Dati Intervento Chirurgico",patientName:n||"Nuovo Paziente",defaultDate:a?.data_evento||(new Date).toISOString().split("T")[0],errorMessage:"Errore nell'apertura della modal di intervento"})}async function Ie(){const e=document.getElementById("nome"),t=document.getElementById("cognome"),n=e&&t?`${e.value.trim()} ${t.value.trim()}`.trim():"",a=o.getInfectionData();return me(se,{title:"Dati Infezione Paziente",patientName:n||"Nuovo Paziente",defaultDate:a?.data_evento||(new Date).toISOString().split("T")[0],errorMessage:"Errore nell'apertura della modal di infezione"})}function we(){ge({labelSelector:'label[for="ha_intervento"]',checkboxId:"ha_intervento",badgeClass:"surgery-data-badge",hasData:()=>y.hasSurgeryData(),isValid:()=>y.hasValidSurgeryData(),getTooltip:()=>{const e=y.getSurgeryData();if(!e)return"";return`Data: ${e.data_evento||"Non specificata"}\nTipo: ${e.tipo_intervento||"Non specificato"}${e.has_infection?" + Infezione":""}`},onBadgeClick:async()=>{const e=await be();e&&(y.setSurgeryData(e),we())}})}function ze(){ge({labelSelector:'label[for="infetto"]',checkboxId:"infetto",badgeClass:"infection-data-badge",hasData:()=>o.hasInfectionData(),isValid:()=>o.hasValidInfectionData(),getTooltip:()=>{const e=o.getInfectionData();return e?`Data: ${e.data_evento||"Non specificata"}\nAgente: ${e.agente_patogeno||"Non specificato"}`:""},onBadgeClick:async()=>{const e=await Ie();e&&(o.setInfectionData(e),ze())}})}function De(){e(async()=>{const{createTemporaryEventsFromCheckboxes:e}=await Promise.resolve().then(()=>re);return{createTemporaryEventsFromCheckboxes:e}},void 0).then(({createTemporaryEventsFromCheckboxes:e})=>{e()}).catch(e=>{s.warn("Impossibile aggiornare la tab eventi clinici:",e)})}function Se(e){e&&(!function(e){if(!e)return;const t=(e,t)=>{const n=document.getElementById(e);n&&("checkbox"===n.type?n.checked=Boolean(t):n.value=t||"")};t(b,e.id),t(I,e.nome),t(w,e.cognome),t(z,pe(e.data_nascita)),t(D,pe(e.data_ricovero)),t(S,pe(e.data_dimissione)),t(C,e.diagnosi),t(k,e.reparto_appartenenza),t(T,e.reparto_provenienza),t(B,e.livello_assistenza),t(x,e.codice_rad),t($,e.infetto),t(P,e.tipo_dimissione),t(L,e.clinica_destinazione),t(F,e.reparto_destinazione_id||e.reparto_destinazione),t(M,e.clinica_destinazione_id||e.codice_clinica),t(V,e.codice_dimissione_id||e.codice_dimissione);const n=`${e.nome||""} ${e.cognome||""}`.trim(),a=n?`<span class="patient-name fw-bold">${n}</span>`:'<span class="patient-name fw-bold">Nome Cognome</span>',i=document.getElementById(N);i&&(i.innerHTML=l(a));const o=document.getElementById(O);o&&(o.innerHTML=l('<span class="material-icons me-1" style="vertical-align: middle;">save</span>Aggiorna Paziente')),v('#form-inserimento [data-custom="true"]')}(e),_e(e.tipo_dimissione||"",!0),o.clearInfectionData(),y.clearSurgeryData(),ze(),we(),ie(e.id))}async function Ce(t,n){t.preventDefault();const a=await async function(){return ve(document.getElementById("form-inserimento"),{isPatientCurrentlyInfected:ae,infectionDataManager:o,surgeryDataManager:y})}();try{fe("Salvataggio in corso...","info");const t={},i={};let o;if(Object.keys(a).forEach(e=>{e.startsWith("_")?i[e]=a[e]:t[e]=a[e]}),"edit"===n.mode){if(o=await U(t,n.patientId),i._hasInfectionData&&i._infectionData){const{patientService:t}=await e(async()=>{const{patientService:e}=await import("./patientService-EGfMwTHQ.js").then(e=>e.b);return{patientService:e}},__vite__mapDeps([8,0,1,2,3,4]));await t.handleInfectionEventCreation(n.patientId,i._infectionData)}const{getTemporaryEvents:a}=await e(async()=>{const{getTemporaryEvents:e}=await Promise.resolve().then(()=>re);return{getTemporaryEvents:e}},void 0),r=a();if(r&&r.length>0){const{patientService:t}=await e(async()=>{const{patientService:e}=await import("./patientService-EGfMwTHQ.js").then(e=>e.b);return{patientService:e}},__vite__mapDeps([8,0,1,2,3,4]));await t.handleTemporaryEventsCreation(n.patientId,r)}}else{const n=i._hasInfectionData&&i._infectionData,a=i._hasSurgeryData&&i._surgeryData;if(n||a){const{patientService:r}=await e(async()=>{const{patientService:e}=await import("./patientService-EGfMwTHQ.js").then(e=>e.b);return{patientService:e}},__vite__mapDeps([8,0,1,2,3,4]));if(n&&a){o=(await r.createPatientWithSurgeryAndInfection(t,i._surgeryData,i._infectionData)).patient}else if(a){o=(await r.createPatientWithSurgery(t,i._surgeryData)).patient}else if(n){o=(await r.createPatientWithInfection(t,i._infectionData)).patient}}else{const{getTemporaryEvents:n}=await e(async()=>{const{getTemporaryEvents:e}=await Promise.resolve().then(()=>re);return{getTemporaryEvents:e}},void 0),a=n();if(a&&a.length>0){const{patientService:n}=await e(async()=>{const{patientService:e}=await import("./patientService-EGfMwTHQ.js").then(e=>e.b);return{patientService:e}},__vite__mapDeps([8,0,1,2,3,4]));o=(await n.createPatientWithTemporaryEvents(t,a)).patient}else o=await U(t,null)}}if(o&&o.id){const{setCurrentPatient:t}=await e(async()=>{const{setCurrentPatient:e}=await Promise.resolve().then(()=>re);return{setCurrentPatient:e}},void 0);t(o.id)}fe(`Paziente ${"edit"===n.mode?"aggiornato":"inserito"} con successo!`,"success"),setTimeout(()=>d("list"),1500)}catch(i){fe(i.message,"danger")}}async function ke(){const t=document.getElementById("form-inserimento");if(!t)return s.error("Elemento form #form-inserimento non trovato!"),void 0;const n=function(){const e=sessionStorage.getItem("editPazienteId");return e?{mode:"edit",patientId:e}:{mode:"create",patientId:null}}(),a=e=>Ce(e,n);try{const[i,o]=await Promise.all([R(),"edit"===n.mode?W(n.patientId):Promise.resolve(null)]);await ye(),function(e){const t=document.getElementById("diagnosi");t&&(t.innerHTML=l('<option value="">Seleziona diagnosi...</option>'),e.forEach(e=>{const n=document.createElement("option");n.value=e.nome,n.textContent=e.nome,t.appendChild(n)}),v("#diagnosi"))}(i);const r=document.getElementById("inserimento-title");if(r&&(o?(r.innerHTML=`\n          <span class="patient-name fw-bold">${o.nome} ${o.cognome}</span>\n        `,Se(o)):r.innerHTML='\n          <span class="material-icons text-primary me-2">person_add</span>Inserimento Nuovo Paziente\n        '),"edit"===n.mode&&n.patientId){const{setCurrentPatient:t}=await e(async()=>{const{setCurrentPatient:e}=await Promise.resolve().then(()=>re);return{setCurrentPatient:e}},void 0);t(n.patientId)}t.addEventListener("submit",a)}catch(i){fe(i.message,"danger")}return()=>{he&&(he.destroy(),he=null),o.clearInfectionData(),y.clearSurgeryData(),void oe(),sessionStorage.removeItem("editPazienteId"),t.removeEventListener("submit",a)}}export{ke as initInserimentoView};
