const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/ConfirmModal-Cfb9NCKT.js","assets/index-jnyeON0Y.js","assets/vendor-CQCqr9ER.js","assets/supabase-B8WzuNbi.js","assets/index-CuzmHIce.css"])))=>i.map(i=>d[i]);
import{_ as t}from"./supabase-B8WzuNbi.js";import{c as e,b as n,l as i,s as a,a as s,n as o,d as r}from"./index-jnyeON0Y.js";import{p as l}from"./patientService-CRgw__x3.js";import{g as c}from"./post-operative-calculator-C3z7C_vm.js";import{f as d}from"./formatting-C7G90sDQ.js";import{i as p}from"./CustomSelect-BcCV6-Xf.js";import{g as u,p as m}from"./helpers-BGw4FIrU.js";import"./vendor-CQCqr9ER.js";import"./infectionDataManager-Bhrjdo6k.js";class v{constructor(t,e={}){this.patient=t,this.options={isMobile:!1,isTable:!1,...e}}render(){const t=this.patient.data_dimissione;return this.options.isTable?this.renderTableButtons(t):this.options.isMobile?this.renderMobileButtons(t):this.renderDesktopButtons(t)}renderTableButtons(t){return`\n            <button class="btn btn-sm btn-outline-primary action-btn-sm me-1" \n                    data-action="edit" \n                    data-id="${this.patient.id}" \n                    title="Modifica"\n                    aria-label="Modifica paziente ${this.patient.nome} ${this.patient.cognome}">\n                <span class="material-icons" aria-hidden="true">edit</span>\n            </button>\n            ${t?`<button class="btn btn-sm btn-outline-success action-btn-sm" \n                       data-action="riattiva" \n                       data-id="${this.patient.id}" \n                       title="Riattiva Paziente"\n                       aria-label="Riattiva paziente ${this.patient.nome} ${this.patient.cognome}">\n                 <span class="material-icons" aria-hidden="true">undo</span>\n               </button>`:`<button class="btn btn-sm btn-outline-warning action-btn-sm" \n                       data-action="dimetti" \n                       data-id="${this.patient.id}" \n                       title="Dimetti Paziente"\n                       aria-label="Dimetti paziente ${this.patient.nome} ${this.patient.cognome}">\n                 <span class="material-icons" aria-hidden="true">event_available</span>\n               </button>`}\n            <button class="btn btn-sm btn-outline-danger action-btn-sm ms-1" \n                    data-action="delete" \n                    data-id="${this.patient.id}" \n                    title="Elimina"\n                    aria-label="Elimina paziente ${this.patient.nome} ${this.patient.cognome}">\n                <span class="material-icons" aria-hidden="true">delete</span>\n            </button>\n        `}renderMobileButtons(t){return`\n            <button class="btn btn-outline-primary mobile-action-btn-standard" \n                    data-action="edit" \n                    data-id="${this.patient.id}" \n                    title="Modifica"\n                    aria-label="Modifica paziente ${this.patient.nome} ${this.patient.cognome}">\n                <span class="material-icons" aria-hidden="true">edit</span>\n                <span class="mobile-btn-text">Modifica</span>\n            </button>\n            ${t?`<button class="btn btn-outline-success mobile-action-btn-standard" \n                       data-action="riattiva" \n                       data-id="${this.patient.id}" \n                       title="Riattiva"\n                       aria-label="Riattiva paziente ${this.patient.nome} ${this.patient.cognome}">\n                 <span class="material-icons" aria-hidden="true">undo</span>\n                 <span class="mobile-btn-text">Riattiva</span>\n               </button>`:`<button class="btn btn-outline-warning mobile-action-btn-standard" \n                       data-action="dimetti" \n                       data-id="${this.patient.id}" \n                       title="Dimetti"\n                       aria-label="Dimetti paziente ${this.patient.nome} ${this.patient.cognome}">\n                 <span class="material-icons" aria-hidden="true">event_available</span>\n                 <span class="mobile-btn-text">Dimetti</span>\n               </button>`}\n            <button class="btn btn-outline-danger mobile-action-btn-standard" \n                    data-action="delete" \n                    data-id="${this.patient.id}" \n                    title="Elimina"\n                    aria-label="Elimina paziente ${this.patient.nome} ${this.patient.cognome}">\n                <span class="material-icons" aria-hidden="true">delete</span>\n                <span class="mobile-btn-text">Elimina</span>\n            </button>\n        `}renderDesktopButtons(t){return`\n            <button class="btn btn-outline-primary action-btn-standard" \n                    data-action="edit" \n                    data-id="${this.patient.id}"\n                    title="Modifica Paziente"\n                    aria-label="Modifica paziente ${this.patient.nome} ${this.patient.cognome}">\n                <span class="material-icons" aria-hidden="true">edit</span>Modifica\n            </button>\n            ${t?`<button class="btn btn-outline-success action-btn-standard" \n                       data-action="riattiva" \n                       data-id="${this.patient.id}" \n                       title="Riattiva Paziente"\n                       aria-label="Riattiva paziente ${this.patient.nome} ${this.patient.cognome}">\n                 <span class="material-icons" aria-hidden="true">undo</span>Riattiva\n               </button>`:`<button class="btn btn-outline-warning action-btn-standard" \n                       data-action="dimetti" \n                       data-id="${this.patient.id}" \n                       title="Dimetti Paziente"\n                       aria-label="Dimetti paziente ${this.patient.nome} ${this.patient.cognome}">\n                 <span class="material-icons" aria-hidden="true">event_available</span>Dimetti\n               </button>`}\n            <button class="btn btn-outline-danger action-btn-standard" \n                    data-action="delete" \n                    data-id="${this.patient.id}"\n                    title="Elimina Paziente"\n                    aria-label="Elimina paziente ${this.patient.nome} ${this.patient.cognome}">\n                <span class="material-icons" aria-hidden="true">delete</span>Elimina\n            </button>\n        `}}class b{constructor(t){this.patient=t}render(){return this.patient.data_dimissione?"decesso"===this.patient.tipo_dimissione?'<span class="badge bg-dark">Decesso</span>':'<span class="badge bg-secondary">Dimesso</span>':'<span class="badge bg-success">Attivo</span>'}renderForCard(){const t=this.patient.data_dimissione,e=t&&"decesso"===this.patient.tipo_dimissione;return`<span class="patient-status ${e?"decesso":t?"dimesso":"attivo"}">${e?"Decesso":t?"Dimesso":"Attivo"}</span>`}getStatusClass(){return this.patient.data_dimissione?"decesso"===this.patient.tipo_dimissione?"decesso":"dimesso":"attivo"}getStatusText(){return this.patient.data_dimissione?"decesso"===this.patient.tipo_dimissione?"Decesso":"Dimesso":"Attivo"}}class g{constructor(t,e={}){this.patient=t,this.options={isMobile:window.innerWidth<=767,showActions:!0,showClinicalEvents:!1,showPostOperativeDays:!0,...e}}render(){const t=this.patient.data_dimissione?"error":"success",n=e.profile?.role,i="admin"===n||"editor"===n;return this.options.isMobile?this.renderMobileCard(t,i):this.renderDesktopCard(t,i)}getLastInterventionDate(){if(!this.patient.eventi_clinici||0===this.patient.eventi_clinici.length)return null;const t=this.patient.eventi_clinici.filter(t=>"intervento"===t.tipo_evento).sort((t,e)=>new Date(e.data_evento)-new Date(t.data_evento));return t.length>0?new Date(t[0].data_evento).toLocaleDateString():null}isPatientInfected(){return!0===this.patient.infetto||"true"===this.patient.infetto}renderMobileCard(t,e){const n=this.options.showActions&&e?new v(this.patient,{isMobile:!0}).render():"",i=this.options.showPostOperativeDays&&this.patient.eventi_clinici?c(this.patient.eventi_clinici):null,a=i&&i.hasStatus?`<span class="badge bg-${i.statusClass} ms-1" style="font-size: 0.7em;">${i.badgeText}</span>`:"",s=this.getLastInterventionDate(),o=this.isPatientInfected(),r=o?'<span class="badge bg-warning text-dark ms-1" style="font-size: 0.7em;">\n                 <span class="material-icons" style="font-size: 0.6em;">warning</span> Infetto\n               </span>':"",l=[];i&&i.hasStatus&&l.push(i.statusText),s&&l.push(`Intervento: ${s}`);const d=this.options.showClinicalEvents&&e?this.renderMobileQuickActions():"";return`\n            <div class="card ${o?"card-list-compact status-infected":"card-list-compact"} status-${t}">\n                <div class="card-body">\n                    <div class="card-info">\n                        <div class="card-title d-flex align-items-center gap-2">\n                            <span class="material-icons text-primary" style="font-size:1.4em;">person</span>\n                            <span class="fw-bold">${this.patient.cognome} ${this.patient.nome}</span>\n                            ${a}${r}\n                        </div>\n                        <div class="card-meta mobile-text-sm">\n                            ${this.patient.diagnosi} • ${this.patient.reparto_appartenenza}\n                            ${l.length>0?` • ${l.join(" • ")}`:""}\n                        </div>\n                    </div>\n                    <div class="mobile-actions-container">\n                        ${n?`<div class="mobile-primary-actions">${n}</div>`:""}\n                        ${d}\n                    </div>\n                </div>\n            </div>\n        `}renderMobileQuickActions(){return`\n            <div class="mobile-quick-actions mt-2">\n                <div class="mobile-clinical-actions">\n                    <button type="button" class="btn btn-outline-primary mobile-clinical-btn btn-add-intervention" \n                            data-patient-id="${this.patient.id}" \n                            title="Aggiungi Intervento">\n                        <span class="material-icons">medical_services</span>\n                        <span class="mobile-clinical-text">Intervento</span>\n                    </button>\n                    <button type="button" class="btn btn-outline-warning mobile-clinical-btn btn-add-infection" \n                            data-patient-id="${this.patient.id}" \n                            title="Aggiungi Infezione">\n                        <span class="material-icons">warning</span>\n                        <span class="mobile-clinical-text">Infezione</span>\n                    </button>\n                    <button type="button" class="btn btn-outline-info mobile-clinical-btn btn-view-events" \n                            data-patient-id="${this.patient.id}" \n                            title="Timeline Eventi">\n                        <span class="material-icons">timeline</span>\n                        <span class="mobile-clinical-text">Timeline</span>\n                    </button>\n                </div>\n            </div>\n        `}renderDesktopCard(t,e){const n=new b(this.patient).renderForCard(),i=this.options.showActions&&e?new v(this.patient,{isMobile:!1}).render():"",a=this.options.showPostOperativeDays&&this.patient.eventi_clinici?c(this.patient.eventi_clinici):null,s=a&&a.hasStatus?`<span class="badge bg-${a.statusClass} ms-2" title="${a.statusText}">${a.badgeText}</span>`:"",o=this.isPatientInfected(),r=o?'<span class="badge bg-warning text-dark ms-2" title="Paziente infetto">\n                 <span class="material-icons" style="font-size: 0.8em;">warning</span> Infetto\n               </span>':"",l=this.options.showClinicalEvents&&this.patient.eventi_clinici?this.renderClinicalEventsTimeline():"",p=this.options.showClinicalEvents&&e?this.renderQuickActions():"";return`\n            <div class="${o?"patient-card patient-card-infected":"patient-card"}">\n                <div class="patient-card-header d-flex align-items-center gap-2">\n                    <span class="material-icons text-primary" style="font-size:1.7em;">person</span>\n                    <h6 class="patient-name fw-bold mb-0">${this.patient.cognome} ${this.patient.nome}</h6>\n                    ${s}${r}\n                    <span class="flex-grow-1"></span>\n                    ${n}\n                </div>\n                <div class="patient-details">\n                    <div class="patient-detail">\n                        <span class="patient-detail-label">Data Ricovero</span>\n                        <span class="patient-detail-value">${d(this.patient.data_ricovero)}</span>\n                    </div>\n                    <div class="patient-detail">\n                        <span class="patient-detail-label">Diagnosi</span>\n                        <span class="patient-detail-value">${this.patient.diagnosi}</span>\n                    </div>\n                    <div class="patient-detail">\n                        <span class="patient-detail-label">Reparto</span>\n                        <span class="patient-detail-value">${this.patient.reparto_appartenenza}</span>\n                    </div>\n                    <div class="patient-detail">\n                        <span class="patient-detail-label">Livello</span>\n                        <span class="patient-detail-value">${this.patient.livello_assistenza}</span>\n                    </div>\n                    ${o?'\n                    <div class="patient-detail">\n                        <span class="patient-detail-label">Stato Infezione</span>\n                        <span class="patient-detail-value text-warning fw-bold">\n                            <span class="material-icons" style="font-size: 1em; vertical-align: middle;">warning</span>\n                            Paziente Infetto\n                        </span>\n                    </div>\n                    ':""}\n                    ${a&&a.hasStatus?`\n                    <div class="patient-detail">\n                        <span class="patient-detail-label">Post-Operatorio</span>\n                        <span class="patient-detail-value">${a.statusText}</span>\n                    </div>\n                    `:""}\n                </div>\n                ${l}\n                ${p}\n                ${i?`<div class="patient-actions">${i}</div>`:""}\n            </div>\n        `}getTransferInfo(){if(!this.patient.data_dimissione||!this.patient.tipo_dimissione)return"-";switch(this.patient.tipo_dimissione){case"trasferimento_interno":return this.patient.reparto_destinazione?`<small class="text-info"><strong>→ ${this.patient.reparto_destinazione}</strong></small>`:'<small class="text-muted">Interno</small>';case"trasferimento_esterno":let t='<small class="text-warning"><strong>Esterno</strong>';if(this.patient.clinica_destinazione&&(t+=`<br>→ ${this.patient.clinica_destinazione}`),this.patient.codice_clinica){t+=`<br>(${"56"===this.patient.codice_clinica?"Riab. Motoria":"60"===this.patient.codice_clinica?"Lunga Degenza":`Cod. ${this.patient.codice_clinica}`})`}return t+="</small>",t;default:return'<small class="text-muted">-</small>'}}renderTableRow(){const t=new b(this.patient).render(),n=e.profile?.role,i=this.options.showActions&&("admin"===n||"editor"===n)?new v(this.patient,{isTable:!0}).render():"",a=this.options.showPostOperativeDays&&this.patient.eventi_clinici?c(this.patient.eventi_clinici):null,s=a&&a.hasStatus?`<span class="badge bg-${a.statusClass}" title="${a.statusText}">${a.badgeText}</span>`:"-",o=this.getTransferInfo(),r=this.isPatientInfected(),l=r?'<span class="badge bg-warning text-dark ms-1" title="Paziente infetto">\n                 <span class="material-icons" style="font-size: 0.8em;">warning</span> Infetto\n               </span>':"";return`\n            <tr class="${r?"table-warning":""}">\n                <td data-label="Cognome">${this.patient.cognome}</td>\n                <td data-label="Nome">${this.patient.nome}</td>\n                <td data-label="Data Nascita">${this.patient.data_nascita?d(this.patient.data_nascita):"-"}</td>\n                <td data-label="Data Ricovero">${d(this.patient.data_ricovero)}</td>\n                <td data-label="Diagnosi">${this.patient.diagnosi}</td>\n                <td data-label="Reparto">${this.patient.reparto_appartenenza}</td>\n                <td data-label="Post-Op">${s}</td>\n                <td data-label="Stato">${t}${l}</td>\n                <td data-label="Trasferimento">${o}</td>\n                <td class="text-nowrap">\n                    ${i}\n                </td>\n            </tr>\n        `}renderClinicalEventsTimeline(){if(!this.patient.eventi_clinici||0===this.patient.eventi_clinici.length)return'\n                <div class="clinical-events-section mt-3">\n                    <h6 class="clinical-events-title">Eventi Clinici</h6>\n                    <p class="text-muted small">Nessun evento clinico registrato</p>\n                </div>\n            ';const t=[...this.patient.eventi_clinici].sort((t,e)=>new Date(e.data_evento)-new Date(t.data_evento));return`\n            <div class="clinical-events-section mt-3">\n                <h6 class="clinical-events-title">Eventi Clinici Recenti</h6>\n                <div class="clinical-events-timeline">\n                    ${t.slice(0,3).map(t=>{const e=new Date(t.data_evento).toLocaleDateString();return`\n                <div class="clinical-event-item d-flex align-items-center mb-2">\n                    <span class="material-icons ${"intervento"===t.tipo_evento?"text-primary":"text-warning"} me-2" style="font-size: 16px;">${"intervento"===t.tipo_evento?"medical_services":"warning"}</span>\n                    <div class="flex-grow-1">\n                        <div class="event-type small fw-bold">${"intervento"===t.tipo_evento?"Intervento":"Infezione"}</div>\n                        <div class="event-details small text-muted">\n                            ${e} - ${t.tipo_intervento||t.agente_patogeno||"N/A"}\n                        </div>\n                    </div>\n                </div>\n            `}).join("")}\n                </div>\n                ${t.length>3?`<a href="#eventi-clinici?paziente=${this.patient.id}" class="small text-primary">Vedi tutti (${t.length})</a>`:""}\n            </div>\n        `}renderQuickActions(){return`\n            <div class="quick-actions-section mt-3">\n                <div class="btn-group btn-group-sm" role="group">\n                    <button type="button" class="btn btn-outline-primary btn-add-intervention" \n                            data-patient-id="${this.patient.id}" \n                            title="Aggiungi Intervento">\n                        <span class="material-icons" style="font-size: 14px;">medical_services</span>\n                        Intervento\n                    </button>\n                    <button type="button" class="btn btn-outline-warning btn-add-infection" \n                            data-patient-id="${this.patient.id}" \n                            title="Aggiungi Infezione">\n                        <span class="material-icons" style="font-size: 14px;">warning</span>\n                        Infezione\n                    </button>\n                    <button type="button" class="btn btn-outline-info btn-view-events" \n                            data-patient-id="${this.patient.id}" \n                            title="Vedi tutti gli eventi">\n                        <span class="material-icons" style="font-size: 14px;">timeline</span>\n                        Timeline\n                    </button>\n                </div>\n            </div>\n        `}}const h={};function f(){const t={reparto:h.repartoFilter?.value||"",diagnosi:h.diagnosiFilter?.value||"",stato:h.statoFilter?.value||"",infetto:h.infettoFilter?.value||"",trasferimento:h.trasferimentoFilter?.value||"",search:h.searchInput?.value||"",page:n.getFilters().page||0,sortColumn:n.getFilters().sortColumn||"data_ricovero",sortDirection:n.getFilters().sortDirection||"desc"};n.updateFilters(t)}function $(){n.resetFilters(),h.repartoFilter&&(h.repartoFilter.value=""),h.diagnosiFilter&&(h.diagnosiFilter.value=""),h.statoFilter&&(h.statoFilter.value=""),h.infettoFilter&&(h.infettoFilter.value=""),h.trasferimentoFilter&&(h.trasferimentoFilter.value=""),h.searchInput&&(h.searchInput.value=""),[h.repartoFilter,h.diagnosiFilter,h.statoFilter,h.infettoFilter,h.trasferimentoFilter].forEach(t=>{t?.customSelectInstance&&t.customSelectInstance.setValue("")})}function z(){return n.getFilters()}function y(t){!function(t,e){const i=n.getFilters();n.updateFilters({...i,[t]:e})}("page",t)}function w(t,e){n.updateFilters({...n.getFilters(),sortColumn:t,sortDirection:e})}function _(){const t=n.getFilters();return{column:t.sortColumn||"data_ricovero",direction:t.sortDirection||"desc"}}const F={get currentPage(){return n.getFilters().page||0},set currentPage(t){y(t)},get sortColumn(){return _().column},set sortColumn(t){w(t,_().direction)},get sortDirection(){return _().direction},set sortDirection(t){w(_().column,t)}};async function E(){i.log("📊 Iniziando fetchPazienti..."),i.log("📊 Stato corrente:",{currentPage:F.currentPage,sortColumn:F.sortColumn,sortDirection:F.sortDirection});let t=function(){i.log("🔍 Costruendo query base...");let t=a.from("pazienti").select("*",{count:"exact"}).not("user_id","is",null);if(i.log('🔍 Query iniziale creata per tabella "pazienti" con filtro user_id not null'),h.searchInput){const e=h.searchInput.value.trim();e&&(i.log("🔍 Applicando filtro ricerca:",e),t=t.or(`nome.ilike.%${e}%,cognome.ilike.%${e}%,diagnosi.ilike.%${e}%,codice_rad.ilike.%${e}%,reparto_destinazione.ilike.%${e}%,clinica_destinazione.ilike.%${e}%`))}if(h.repartoFilter&&h.repartoFilter.value&&(i.log("🔍 Applicando filtro reparto:",h.repartoFilter.value),t=t.eq("reparto_appartenenza",h.repartoFilter.value)),h.diagnosiFilter&&h.diagnosiFilter.value&&(i.log("🔍 Applicando filtro diagnosi:",h.diagnosiFilter.value),t=t.eq("diagnosi",h.diagnosiFilter.value)),h.statoFilter&&("attivo"===h.statoFilter.value?(i.log("🔍 Applicando filtro stato: attivo"),t=t.is("data_dimissione",null)):"dimesso"===h.statoFilter.value&&(i.log("🔍 Applicando filtro stato: dimesso"),t=t.not("data_dimissione","is",null))),h.infettoFilter&&""!==h.infettoFilter.value){const e="true"===h.infettoFilter.value;i.log("🔍 Applicando filtro infetto:",e),t=t.eq("infetto",e)}return h.trasferimentoFilter&&h.trasferimentoFilter.value&&(i.log("🔍 Applicando filtro trasferimento:",h.trasferimentoFilter.value),t=t.eq("tipo_dimissione",h.trasferimentoFilter.value)),i.log("✅ Query base costruita con successo"),t}();i.log("📊 Query base costruita");const e=10*F.currentPage,n=e+10-1;i.log("📊 Range paginazione:",{startIndex:e,endIndex:n}),t=t.order(F.sortColumn,{ascending:"asc"===F.sortDirection}).range(e,n),i.log("📊 Query finale preparata, eseguendo...");const{data:s,error:o,count:r}=await t;if(i.log("📊 Risposta Supabase:",{dataLength:s?.length,count:r,hasError:!!o,sampleData:s?.slice(0,2)}),o)throw console.error("❌ Errore Supabase:",o),o;if(s&&s.length>0){i.log("📊 Caricamento eventi clinici per i pazienti...");try{const t=s.map(t=>t.id),{data:e,error:n}=await a.from("eventi_clinici").select("*").in("paziente_id",t).order("data_evento",{ascending:!1});if(n)i.warn("⚠️ Errore nel caricamento eventi clinici:",n);else{const t={};e&&e.forEach(e=>{t[e.paziente_id]||(t[e.paziente_id]=[]),t[e.paziente_id].push(e)}),s.forEach(e=>{e.eventi_clinici=t[e.id]||[]}),i.log("✅ Eventi clinici caricati per",Object.keys(t).length,"pazienti")}}catch(l){i.warn("⚠️ Errore nel caricamento eventi clinici:",l),s.forEach(t=>{t.eventi_clinici=[]})}}return s&&s.length>0&&i.log("🔍 Data verification - First record:",{hasUserId:!!s[0].user_id,hasCreatedAt:!!s[0].created_at,hasEventiClinici:!!s[0].eventi_clinici,eventiCount:s[0].eventi_clinici?.length||0,tableName:"pazienti",sample:s[0]}),i.log("✅ fetchPazienti completato con successo"),{data:s,count:r}}async function x(){if(!h.exportCsvButton)return;const t=h.exportCsvButton.innerHTML;h.exportCsvButton.disabled=!0,h.exportCsvButton.innerHTML=s('<span class="spinner-border spinner-border-sm"></span> Esportazione...');try{const t=z();await l.exportPatients(t)}catch(e){i.error("Errore catturato in list-api durante l'esportazione CSV:",e)}finally{h.exportCsvButton.disabled=!1,h.exportCsvButton.innerHTML=s(t)}}async function C(){if(!h.exportJsonButton)return;const t=h.exportJsonButton.innerHTML;h.exportJsonButton.disabled=!0,h.exportJsonButton.innerHTML=s('<span class="spinner-border spinner-border-sm"></span> Esportazione...');try{const t=z();await l.exportPatientsJSON(t)}catch(e){i.error("Errore catturato in list-api durante l'esportazione JSON:",e)}finally{h.exportJsonButton.disabled=!1,h.exportJsonButton.innerHTML=s(t)}}async function B(t,e){try{e?await l.dischargePatient(t):await l.reactivatePatient(t)}catch(n){throw i.error(`❌ Errore durante l'aggiornamento dello stato del paziente ${t}:`,n),n}}function I(){h.tableHeaders&&0!==h.tableHeaders.length&&h.tableHeaders.forEach(t=>{if(!t)return;const e=t.querySelector(".sort-indicator");e&&(e.textContent=t.dataset.sort===F.sortColumn?"asc"===F.sortDirection?" ▲":" ▼":"")})}function D(t,e){!function(t){const e=document.getElementById("pazienti-table-body");if(!e)return;if(e.innerHTML="",0===t.length){const t=e.insertRow(),n=document.createElement("td");return n.colSpan=10,n.className="text-center text-muted",n.textContent="Nessun paziente trovato.",t.appendChild(n),void 0}const n=t.map(t=>new g(t,{showActions:!0,showPostOperativeDays:!0}).renderTableRow()).join("");e.innerHTML=n}(t),function(t){const e=document.getElementById("pazienti-cards-container");if(!e)return;if(0===t.length){e.innerHTML="";const t=document.createElement("div");return t.className="text-center text-muted p-4",t.textContent="Nessun paziente trovato.",e.appendChild(t),void 0}const n=t.map(t=>{const e=window.innerWidth<=767;return new g(t,{showActions:!0,showPostOperativeDays:!0,showClinicalEvents:!0,isMobile:e}).render()}).join("");e.innerHTML=s(n)}(t),function(t){const e=Math.ceil(t/10);h.pageInfo&&(h.pageInfo.textContent=`Pagina ${F.currentPage+1} di ${e||1}`);h.prevButton&&(h.prevButton.disabled=0===F.currentPage);h.nextButton&&(h.nextButton.disabled=F.currentPage>=e-1)}(e),I(),P()}function M(t){console.error("Errore dettagliato durante il fetch dei pazienti:",t),h.tableBody&&(h.tableBody.innerHTML=s('<tr><td colspan="10" class="text-center text-danger"><strong>Errore nel caricamento dei dati.</strong><br>Controlla la console per i dettagli.</td></tr>'));const e=document.getElementById("pazienti-cards-container");e&&(e.innerHTML=s('<div class="text-center text-danger p-4"><strong>Errore nel caricamento dei dati.</strong></div>'))}function P(){const t=document.querySelector(".table-responsive"),e=document.getElementById("pazienti-cards-container");t&&e&&(window.innerWidth>=1200?(t.style.display="block",e.style.display="none"):(t.style.display="none",e.style.display="block"))}let k=[];async function L(){!function(){h.tableBody&&(h.tableBody.innerHTML=s('<tr><td colspan="10" class="text-center"><div class="spinner-border"></div></td></tr>'));const t=document.getElementById("pazienti-cards-container");t&&(t.innerHTML=s('<div class="text-center p-4"><div class="spinner-border"></div></div>'))}();try{const{data:t,count:e}=await E();k=t||[],D(k,e)}catch(t){console.error("❌ Errore in fetchAndRender:",t),o.error(`Errore nel caricamento pazienti: ${t.message}`),M(t)}}function T(){const e=()=>{F.currentPage=0,f(),L()};h.filterContainer.addEventListener("input",t=>{t.target.matches("input, select")&&e()}),h.filterContainer.addEventListener("change",t=>{t.target.matches("input, select")&&e()}),h.resetButton.addEventListener("click",()=>{$(),o.info("Filtri resettati",{timeout:1500,position:"top-center"}),L()}),h.exportCsvButton.addEventListener("click",x),h.exportJsonButton.addEventListener("click",C),h.prevButton.addEventListener("click",()=>{F.currentPage>0&&(F.currentPage--,f(),L())}),h.nextButton.addEventListener("click",()=>{F.currentPage++,f(),L()}),h.tableHeaders.forEach(t=>{t.addEventListener("click",()=>{const e=t.dataset.sort;F.sortColumn===e?F.sortDirection="asc"===F.sortDirection?"desc":"asc":(F.sortColumn=e,F.sortDirection="asc"),F.currentPage=0,f(),L()})});const n=e=>{const n=e.target.closest("button[data-action]");if(n){const{action:e,id:a}=n.dataset;return!async function(e,n){try{switch(e){case"edit":sessionStorage.setItem("editPazienteId",n);const e=k.find(t=>t.id===n);o.info(`Modifica di ${e?`${e.nome} ${e.cognome}`:"il paziente"}`,{timeout:2e3,position:"top-center"}),r("inserimento");break;case"delete":const{ConfirmModal:a}=await t(async()=>{const{ConfirmModal:t}=await import("./ConfirmModal-Cfb9NCKT.js");return{ConfirmModal:t}},__vite__mapDeps([0,1,2,3,4])),s=k.find(t=>t.id===n),c=s?`${s.nome} ${s.cognome}`:"questo paziente",d=a.forDeletion(c);await d.show()&&(await async function(t){try{await l.deletePatient(t),i.log("✅ Chiamata a patientService.deletePatient completata per ID:",t)}catch(e){throw console.error("❌ Errore eliminazione paziente:",e),i.error("Errore catturato in list-api durante la cancellazione del paziente:",e.message),e}}(n),o.success(`${c} eliminato con successo`),L());break;case"dimetti":const{ConfirmModal:p}=await t(async()=>{const{ConfirmModal:t}=await import("./ConfirmModal-Cfb9NCKT.js");return{ConfirmModal:t}},__vite__mapDeps([0,1,2,3,4])),u=k.find(t=>t.id===n),m=u?`${u.nome} ${u.cognome}`:"il paziente",v=p.forDismissal(m);await v.show()&&(await B(n,!0),o.success(`${m} dimesso con successo`),await L());break;case"riattiva":const{ConfirmModal:b}=await t(async()=>{const{ConfirmModal:t}=await import("./ConfirmModal-Cfb9NCKT.js");return{ConfirmModal:t}},__vite__mapDeps([0,1,2,3,4])),g=k.find(t=>t.id===n),h=g?`${g.nome} ${g.cognome}`:"il paziente",f=b.forReactivation(h);await f.show()&&(await B(n,!1),o.success(`${h} riattivato con successo`),await L())}}catch(a){console.error("❌ Errore in handlePatientAction:",a),o.error(`Errore nell'operazione: ${a.message}`)}}(e,a),void 0}const a=e.target.closest('button[class*="btn-add-"], button[class*="btn-view-"]');if(a){const t=a.dataset.patientId;a.classList.contains("btn-add-intervention")?A("add-intervention",t):a.classList.contains("btn-add-infection")?A("add-infection",t):a.classList.contains("btn-view-events")&&A("view-events",t)}};document.getElementById("pazienti-table-body").addEventListener("click",n),document.getElementById("pazienti-cards-container").addEventListener("click",n),h.backButton.addEventListener("click",()=>{r("home")}),window.removeEventListener("resize",P),window.addEventListener("resize",P)}async function A(t,e){try{const n=k.find(t=>t.id===e),i=n?`${n.nome} ${n.cognome}`:"Paziente";switch(t){case"add-intervention":o.info(`Creazione intervento per ${i}`,{timeout:2e3,position:"top-center"}),r(`eventi-clinici?action=add&type=intervento&paziente=${e}`);break;case"add-infection":o.info(`Creazione infezione per ${i}`,{timeout:2e3,position:"top-center"}),r(`eventi-clinici?action=add&type=infezione&paziente=${e}`);break;case"view-events":o.info(`Visualizzazione eventi clinici di ${i}`,{timeout:2e3,position:"top-center"}),r(`eventi-clinici?paziente=${e}`)}}catch(n){console.error("❌ Errore in handleClinicalEventAction:",n),o.error(`Errore nell'operazione clinica: ${n.message}`)}}async function S(){i.log("📡 Inizio caricamento dati per la vista lista...");try{!function(){const t=n.getFilters();h.repartoFilter&&t.reparto&&(h.repartoFilter.value=t.reparto),h.diagnosiFilter&&t.diagnosi&&(h.diagnosiFilter.value=t.diagnosi),h.statoFilter&&t.stato&&(h.statoFilter.value=t.stato),h.infettoFilter&&t.infetto&&(h.infettoFilter.value=t.infetto),h.trasferimentoFilter&&t.trasferimento&&(h.trasferimentoFilter.value=t.trasferimento),h.searchInput&&t.search&&(h.searchInput.value=t.search)}();const[t,e,a]=await Promise.all([E(),u("reparto_appartenenza"),u("diagnosi")]);return i.log("✅ Dati per la lista caricati con successo."),{pazienti:t.data,count:t.count,repartoOptions:e,diagnosiOptions:a}}catch(t){throw console.error("❌ Errore durante il caricamento dei dati per la lista:",t),t}}async function R(t){if(i.log("🏗️ Inizializzazione vista lista pazienti con dati pre-caricati..."),!e.session)return i.log("❌ Accesso a #list bloccato: utente non autenticato."),void 0;const a=document.querySelector("#view-container .view");if(!a)return console.error("❌ View container non trovato"),void 0;try{!function(t){i.log("🗂️ Caching DOM elements...",{viewContainer:t}),h.repartoFilter=document.getElementById("list-filter-reparto"),h.diagnosiFilter=document.getElementById("list-filter-diagnosi"),h.statoFilter=document.getElementById("list-filter-stato"),h.infettoFilter=document.getElementById("list-filter-infetto"),h.trasferimentoFilter=document.getElementById("list-filter-trasferimento"),h.searchInput=document.getElementById("list-search"),h.filterContainer=t.querySelector(".filters-container"),h.tableBody=document.getElementById("pazienti-table-body"),h.cardsContainer=document.getElementById("pazienti-cards-container"),h.tableHeaders=t.querySelectorAll("th[data-sort]"),h.prevButton=document.getElementById("prev-page-btn"),h.nextButton=document.getElementById("next-page-btn"),h.pageInfo=document.getElementById("page-info"),h.backButton=t.querySelector('button[data-view="home"]'),h.resetButton=document.getElementById("eventi-reset-filters-btn"),h.exportCsvButton=document.getElementById("eventi-export-csv-btn"),h.exportJsonButton=document.getElementById("eventi-export-json-btn"),i.log("🗂️ DOM elements cached:",{tableBody:!!h.tableBody,cardsContainer:!!h.cardsContainer,repartoFilter:!!h.repartoFilter,diagnosiFilter:!!h.diagnosiFilter,statoFilter:!!h.statoFilter,infettoFilter:!!h.infettoFilter,trasferimentoFilter:!!h.trasferimentoFilter,searchInput:!!h.searchInput,filterContainer:!!h.filterContainer,tableHeaders:h.tableHeaders?.length||0,prevButton:!!h.prevButton,nextButton:!!h.nextButton,pageInfo:!!h.pageInfo,backButton:!!h.backButton,resetButton:!!h.resetButton,exportCsvButton:!!h.exportCsvButton,exportJsonButton:!!h.exportJsonButton}),h.tableBody&&h.cardsContainer?i.log("✅ Elementi DOM critici trovati"):console.error("❌ Elementi DOM critici mancanti:",{tableBody:!!h.tableBody,cardsContainer:!!h.cardsContainer}),["tableBody","cardsContainer","repartoFilter","diagnosiFilter","statoFilter","infettoFilter","trasferimentoFilter"].forEach(t=>{h[t]||console.error(`Elemento DOM critico non trovato: ${t}`)})}(a);const{pazienti:e,count:s,repartoOptions:o,diagnosiOptions:r}=t;k=e||[],m(h.repartoFilter,o),m(h.diagnosiFilter,r);const l=n.getFilters();h.repartoFilter&&(h.repartoFilter.value=l.reparto||""),h.diagnosiFilter&&(h.diagnosiFilter.value=l.diagnosi||""),h.statoFilter&&(h.statoFilter.value=l.stato||""),h.infettoFilter&&(h.infettoFilter.value=l.infetto||""),h.trasferimentoFilter&&(h.trasferimentoFilter.value=l.trasferimento||""),h.searchInput&&(h.searchInput.value=l.search||""),p("#list-filter-reparto, #list-filter-diagnosi, #list-filter-stato, #list-filter-infetto, #list-filter-trasferimento"),T(),D(k,s),I()}catch(s){console.error("Errore durante l'inizializzazione della vista lista:",s),M(s)}}window.resetFiltersAndRefresh=function(){$(),L()};export{S as fetchListData,R as initListView};
