const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-D9Tr0MsP.js","assets/supabase-AmyKTmiY.js","assets/vendor-BU6HxVpN.js","assets/index-CIUH-r2y.css","assets/CustomDatepicker-6By5cdaM.js","assets/utils-BtSsRyB2.js","assets/ConfirmModal-COnCVORQ.js","assets/ResolveInfectionModal-ujyIfGD2.js"])))=>i.map(i=>d[i]);
import{_ as e}from"./supabase-AmyKTmiY.js";import{e as t}from"./infectionDataManager-CqKJYHOt.js";import{l as n,n as i,a}from"./index-D9Tr0MsP.js";import{f as o}from"./formatting-C7G90sDQ.js";import{i as r}from"./CustomSelect-BINXfBf2.js";import{initCustomDatepickers as s}from"./CustomDatepicker-6By5cdaM.js";import{a as l}from"./PatientAutocomplete-BlNDVmIj.js";import"./vendor-BU6HxVpN.js";import"./utils-BtSsRyB2.js";import"./patientService-TzD96H2q.js";let c=new Map,d=null,m={paziente_search:"",paziente_id:"",tipo_evento:"",data_da:"",data_a:"",reparto:"",stato:"",sortColumn:"",sortDirection:"desc"};async function p(e={},i=0){try{n.log("📊 Caricamento eventi clinici:",{filters:e,page:i});const a={page:i,limit:10},o=await t.getAllEventi(e,a),r={...o,eventi:o.eventi.map($)};return n.log("✅ Eventi clinici caricati:",{count:r.eventi.length,totalCount:r.totalCount,currentPage:r.currentPage}),r}catch(a){throw n.error("❌ Errore caricamento eventi clinici:",a),H(a,"Errore nel caricamento degli eventi clinici"),a}}async function v(e){try{n.log("➕ Creazione nuovo evento clinico:",e),k(e);const i=$(await t.createEvento(e));return n.log("✅ Evento clinico creato:",i),i}catch(i){throw n.error("❌ Errore creazione evento clinico:",i),H(i,"Errore nella creazione dell'evento clinico"),i}}async function u(e,i){try{n.log("✏️ Aggiornamento evento clinico:",{eventoId:e,eventoData:i}),k(i);const a=$(await t.updateEvento(e,i));return n.log("✅ Evento clinico aggiornato:",a),a}catch(a){throw n.error("❌ Errore aggiornamento evento clinico:",a),H(a,"Errore nell'aggiornamento dell'evento clinico"),a}}async function g(e){try{return n.log("🗑️ Eliminazione evento clinico:",e),await t.deleteEvento(e),n.log("✅ Evento clinico eliminato:",e),!0}catch(i){throw n.error("❌ Errore eliminazione evento clinico:",i),H(i,"Errore nell'eliminazione dell'evento clinico"),i}}async function h(e,i){try{return n.log("🩺 Risoluzione infezione:",{eventoId:e,dataFine:i}),await t.resolveInfezione(e,i),n.log("✅ Infezione risolta:",e),!0}catch(a){throw n.error("❌ Errore risoluzione infezione:",a),H(a,"Errore nella risoluzione dell'infezione"),a}}async function f(e,i=!0){return new Promise((a,o)=>{if(d&&clearTimeout(d),!e||e.trim().length<2)return a([]),void 0;const r=`${e}_${i}`;if(c.has(r)){const e=c.get(r);if(Date.now()-e.timestamp<3e4)return n.log("🔍 Risultati ricerca da cache:",e.data.length),a(e.data),void 0}d=setTimeout(async()=>{try{n.log("🔍 Ricerca pazienti:",{searchTerm:e,activeOnly:i});const o=(await t.searchPazientiWithEvents(e.trim(),i)).map(x);!function(e,t){if(c.set(e,{data:t,timestamp:Date.now()}),c.size>50){const e=c.keys().next().value;c.delete(e)}}(r,o),n.log("✅ Pazienti trovati:",o.length),a(o)}catch(s){n.error("❌ Errore ricerca pazienti:",s),H(s,"Errore nella ricerca pazienti"),o(s)}},300)})}function E(e,t){return new Promise((i,a)=>{if(d&&clearTimeout(d),!e||e.trim().length<2){return i([]),void 0}d=setTimeout(async()=>{try{n.log("🔍 Ricerca pazienti real-time:",e);const a=await f(e.trim(),!0);t,i(a)}catch(o){n.error("❌ Errore ricerca pazienti real-time:",o),a(o)}},300)})}async function y(e){try{n.log("🎯 Applicazione filtro tipo evento:",e);const t={...m,tipo_evento:e},i=await p(t,0);return m.tipo_evento=e,n.log("✅ Filtro tipo evento applicato:",{tipo:e,risultati:i.eventi.length}),i}catch(t){throw n.error("❌ Errore applicazione filtro tipo evento:",t),H(t,"Errore nell'applicazione del filtro"),t}}async function b(e,t){try{if(n.log("📅 Applicazione filtro range date:",{dataDa:e,dataA:t}),e&&t){const n=new Date(e);if(n>new Date(t))throw new Error("La data di inizio non può essere successiva alla data di fine")}const i={...m,data_da:e||"",data_a:t||""},a=await p(i,0);return m.data_da=e||"",m.data_a=t||"",n.log("✅ Filtro range date applicato:",{da:e,a:t,risultati:a.eventi.length}),a}catch(i){throw n.error("❌ Errore applicazione filtro date:",i),H(i,"Errore nell'applicazione del filtro date"),i}}async function _(e){try{n.log("👤 Applicazione filtro stato paziente:",e);const t={...m,stato:e||""},i=await p(t,0);return m.stato=e||"",n.log("✅ Filtro stato paziente applicato:",{stato:e,risultati:i.eventi.length}),i}catch(t){throw n.error("❌ Errore applicazione filtro stato paziente:",t),H(t,"Errore nell'applicazione del filtro stato paziente"),t}}async function z(e,t=""){try{n.log("👤 Applicazione ricerca paziente:",e);const i={...m,paziente_search:e||"",paziente_id:t||""},a=await p(i,0);return m.paziente_search=e||"",m.paziente_id=t||"",n.log("✅ Ricerca paziente applicata:",{termine:e,risultati:a.eventi.length}),a}catch(i){throw n.error("❌ Errore ricerca paziente:",i),H(i,"Errore nella ricerca paziente"),i}}async function w(e){try{n.log("🔍 Applicazione filtri combinati:",e),function(e){const t=[];if(e.data_da&&e.data_a){const n=new Date(e.data_da),i=new Date(e.data_a);n>i&&t.push("La data di inizio non può essere successiva alla data di fine");const a=Math.abs(i-n);Math.ceil(a/864e5)>730&&t.push("Il range di date non può superare i 2 anni")}const n=(new Date).toISOString().split("T")[0];e.data_da&&e.data_da>n&&t.push("La data di inizio non può essere nel futuro");e.data_a&&e.data_a>n&&t.push("La data di fine non può essere nel futuro");e.tipo_intervento&&"intervento"!==e.tipo_evento&&t.push("Il filtro tipo intervento può essere usato solo con eventi di tipo intervento");if(t.length>0)throw new Error(t.join(", "))}(e);const t={...m,...e},i=await p(t,0);return m=t,n.log("✅ Filtri combinati applicati:",{filtri:t,risultati:i.eventi.length}),i}catch(t){throw n.error("❌ Errore applicazione filtri combinati:",t),H(t,"Errore nell'applicazione dei filtri"),t}}async function F(e,t){try{n.log("📊 Applicazione ordinamento:",{sortColumn:e,sortDirection:t}),function(e,t){const n=["asc","desc"];if(!["data_evento","tipo_evento","created_at","paziente_nome"].includes(e))throw new Error(`Colonna di ordinamento non valida: ${e}`);if(!n.includes(t))throw new Error(`Direzione di ordinamento non valida: ${t}`)}(e,t);const i={...m,sortColumn:e,sortDirection:t},a=await p(i,0);return m.sortColumn=e,m.sortDirection=t,n.log("✅ Ordinamento applicato:",{colonna:e,direzione:t,risultati:a.eventi.length}),a}catch(i){throw n.error("❌ Errore applicazione ordinamento:",i),H(i,"Errore nell'applicazione dell'ordinamento"),i}}function I(){return{...m}}function S(){m={paziente_search:"",tipo_evento:"",data_da:"",data_a:"",reparto:"",stato:"",agente_patogeno:"",sortColumn:"",sortDirection:"desc"},n.log("🔧 Filtri in memoria reimpostati ai default")}async function C(){try{n.log("🔄 Reset completo filtri e stato"),m={paziente_search:"",tipo_evento:"",data_da:"",data_a:"",reparto:"",stato:"",agente_patogeno:"",sortColumn:"",sortDirection:"desc"};const{stateService:t}=await e(async()=>{const{stateService:e}=await import("./index-D9Tr0MsP.js").then(e=>e.f);return{stateService:e}},__vite__mapDeps([0,1,2,3]));t.setState("eventiCliniciFilters",null),R();const a=await p(m,0);return n.log("✅ Reset completo completato:",{risultati:a.eventi.length}),i.success("Filtri resettati con successo"),a}catch(t){throw n.error("❌ Errore reset completo filtri:",t),H(t,"Errore nel reset dei filtri"),t}}async function D(){try{const{stateService:t}=await e(async()=>{const{stateService:e}=await import("./index-D9Tr0MsP.js").then(e=>e.f);return{stateService:e}},__vite__mapDeps([0,1,2,3]));t.setState("eventiCliniciFilters",m),n.log("💾 Filtri salvati nello stato:",m),i.success("Filtri salvati con successo")}catch(t){throw n.error("❌ Errore salvataggio filtri:",t),i.error("Impossibile salvare i filtri"),t}}async function T(){try{const{stateService:t}=await e(async()=>{const{stateService:e}=await import("./index-D9Tr0MsP.js").then(e=>e.f);return{stateService:e}},__vite__mapDeps([0,1,2,3])),i=t.getState("eventiCliniciFilters");if(i){const{tipo_intervento:e,...t}=i;m={...m,...t},n.log("📂 Filtri caricati dallo stato:",m)}return m}catch(t){return n.error("❌ Errore caricamento filtri:",t),m}}async function L(e="csv"){try{n.log("📤 Esportazione eventi filtrati:",{format:e,filters:m});const a=await t.getAllEventi(m,{page:0,limit:1e4});if(!a.eventi||0===a.eventi.length)throw new Error("Nessun evento da esportare con i filtri correnti");const o=function(e,t){const n=(new Date).toISOString().split("T")[0];switch(t){case"csv":return{data:A(e),filename:`eventi_clinici_${n}.csv`,mimeType:"text/csv;charset=utf-8;"};case"json":return{data:JSON.stringify(e,null,2),filename:`eventi_clinici_${n}.json`,mimeType:"application/json;charset=utf-8;"};default:throw new Error(`Formato di esportazione non supportato: ${t}`)}}(a.eventi,e);return!function(e,t,n){const i=new Blob([e],{type:n}),a=document.createElement("a");if(void 0!==a.download){const e=URL.createObjectURL(i);a.setAttribute("href",e),a.setAttribute("download",t),a.style.visibility="hidden",document.body.appendChild(a),a.click(),document.body.removeChild(a),URL.revokeObjectURL(e)}}(o.data,o.filename,o.mimeType),n.log("✅ Esportazione completata:",{formato:e,eventi:a.eventi.length,filename:o.filename}),i.success(`Esportati ${a.eventi.length} eventi con successo!`),{success:!0,count:a.eventi.length,filename:o.filename}}catch(a){throw n.error("❌ Errore esportazione eventi:",a),H(a,"Errore nell'esportazione degli eventi"),a}}async function B(){try{n.log("📊 Calcolo statistiche filtri");const e=(await p({},0)).totalCount,t=(await p(m,0)).totalCount,i=Object.entries(m).filter(([e,t])=>t&&""!==t.toString().trim()&&!["sortColumn","sortDirection"].includes(e)).map(([e,t])=>({key:e,value:t})),a={totalEvents:e,filteredEvents:t,activeFiltersCount:i.length,activeFilters:i,filterEfficiency:e>0?((e-t)/e*100).toFixed(1):0};return n.log("✅ Statistiche filtri calcolate:",a),a}catch(e){return n.error("❌ Errore calcolo statistiche filtri:",e),{totalEvents:0,filteredEvents:0,activeFiltersCount:0,activeFilters:[],filterEfficiency:0}}}async function M(){try{n.log("🏥 Caricamento lista reparti");const{supabase:t}=await e(async()=>{const{supabase:e}=await import("./index-D9Tr0MsP.js").then(e=>e.e);return{supabase:e}},__vite__mapDeps([0,1,2,3])),{data:i,error:a}=await t.from("pazienti").select("reparto_appartenenza").not("reparto_appartenenza","is",null).order("reparto_appartenenza");if(a)throw a;const o=[...new Set(i.map(e=>e.reparto_appartenenza))];return n.log("✅ Lista reparti caricata:",o.length),o}catch(t){return n.error("❌ Errore caricamento reparti:",t),[]}}async function P(){try{n.log("💡 Caricamento filtri suggeriti");const{supabase:t}=await e(async()=>{const{supabase:e}=await import("./index-D9Tr0MsP.js").then(e=>e.e);return{supabase:e}},__vite__mapDeps([0,1,2,3])),[i,a,o]=await Promise.all([t.from("eventi_clinici").select("tipo_intervento").eq("tipo_evento","intervento").not("tipo_intervento","is",null).order("tipo_intervento"),t.from("eventi_clinici").select("agente_patogeno").eq("tipo_evento","infezione").not("agente_patogeno","is",null).order("agente_patogeno"),t.from("pazienti").select("reparto_appartenenza").not("reparto_appartenenza","is",null).order("reparto_appartenenza")]),r={tipiIntervento:[...new Set(i.data?.map(e=>e.tipo_intervento)||[])],agentiPatogeni:[...new Set(a.data?.map(e=>e.agente_patogeno)||[])],reparti:[...new Set(o.data?.map(e=>e.reparto_appartenenza)||[])]};return n.log("✅ Filtri suggeriti caricati:",r),r}catch(t){return n.error("❌ Errore caricamento filtri suggeriti:",t),{tipiIntervento:[],agentiPatogeni:[],reparti:[]}}}function R(){c.clear(),n.log("🧹 Cache ricerca pulita")}function $(e){return e?{...e,dataEventoFormatted:o(e.data_evento),dataFineEventoFormatted:e.data_fine_evento?o(e.data_fine_evento):null,isInfezione:"infezione"===e.tipo_evento,isRisolta:"infezione"===e.tipo_evento&&!!e.data_fine_evento,tipoEventoIcon:O(e.tipo_evento),tipoEventoColor:j(e.tipo_evento),tipoEventoLabel:N(e.tipo_evento),pazienteInfo:e.pazienti?{id:e.pazienti.id,nomeCompleto:`${e.pazienti.nome} ${e.pazienti.cognome}`,reparto:e.pazienti.reparto_appartenenza}:null}:null}function x(e){return e?{...e,nomeCompleto:`${e.nome} ${e.cognome}`,dataRicoveroFormatted:o(e.data_ricovero),isActive:!e.data_dimissione}:null}function k(e){const t=[];if(e.paziente_id||t.push("Paziente obbligatorio"),e.tipo_evento||t.push("Tipo evento obbligatorio"),e.data_evento||t.push("Data evento obbligatoria"),e.data_evento){new Date(e.data_evento)>new Date&&t.push("La data dell'evento non può essere nel futuro")}if("intervento"!==e.tipo_evento||e.tipo_intervento||t.push("Tipo intervento obbligatorio per gli interventi chirurgici"),t.length>0)throw new Error(t.join(", "))}function A(e){const t=[["ID","Tipo Evento","Data Evento","Paziente","Reparto","Descrizione","Tipo Intervento","Agente Patogeno","Data Fine Evento","Stato","Data Creazione"].join(",")];return e.forEach(e=>{const n="infezione"===e.tipo_evento?e.data_fine_evento?"Risolta":"Attiva":"",i=[e.id||"",e.tipo_evento||"",e.data_evento||"",e.pazienti?`"${e.pazienti.nome} ${e.pazienti.cognome}"`:"",e.pazienti?.reparto_appartenenza||"",e.descrizione?`"${e.descrizione.replace(/"/g,'""')}"`:"",e.tipo_intervento||"",e.agente_patogeno||"",e.data_fine_evento||"",n,e.created_at||""];t.push(i.join(","))}),t.join("\n")}function O(e){return{intervento:"fas fa-scalpel",infezione:"fas fa-virus"}[e]||"fas fa-calendar-alt"}function j(e){return{intervento:"primary",infezione:"warning"}[e]||"secondary"}function N(e){return{intervento:"Intervento",infezione:"Infezione"}[e]||e}function H(e,t){const n=e.message||t;e.message?.includes("Errore nel")||i.error(n)}const U=Object.freeze(Object.defineProperty({__proto__:null,applyCombinedFilters:w,applyDateRangeFilter:b,applyEventTypeFilter:y,applyPatientSearch:z,applyPatientStatusFilter:_,applySorting:F,clearSearchCache:R,createEventoClinico:v,deleteEventoClinico:g,exportFilteredEvents:L,fetchEventiClinici:p,getCurrentFilters:I,getDepartmentsList:M,getFilterStats:B,getSuggestedFilters:P,getTipoEventoIcon:O,loadFiltersFromState:T,resetCurrentFiltersToDefaults:S,resetFiltersAndState:C,resolveInfezioneEvento:h,saveFiltersToState:D,searchPatientsRealTime:E,searchPazientiForEvents:f,updateEventoClinico:u},Symbol.toStringTag,{value:"Module"}));function V(e,t,n){let i=document.getElementById("search-results-info");if(!i){i=document.createElement("div"),i.id="search-results-info",i.className="search-results-info text-muted mb-3";const e=document.getElementById("eventi-timeline-container");e&&e.parentNode&&e.parentNode.insertBefore(i,e)}Object.values(n||{}).some(e=>e&&""!==e.toString().trim())?(i.innerHTML=a(`\n      <span class="material-icons me-1">filter_list</span>\n      Trovati <strong>${e}</strong> eventi su ${t} totali\n      ${n.paziente_search?`per "${a(n.paziente_search)}"`:""}\n    `),i.style.display="block"):i&&(i.style.display="none")}class q{constructor(e,t){this.domElements=e,this.callbacks=t}renderTable(e){try{if(n.log("🎨 Rendering tabella eventi:",e),!this.domElements.tableBody)return n.error("❌ Container table body non trovato"),void 0;if(this.clearTable(),!e.eventi||0===e.eventi.length)return this.renderEmptyState(),this.updatePaginationControls(e),void 0;const t=this.createTableRows(e.eventi);if(n.debug("🔍 [TABLE RENDERER DEBUG]",{tableBody:!!this.domElements.tableBody,tableBodyId:this.domElements.tableBody?.id,rowsHtmlLength:t.length,eventsCount:e.eventi.length}),this.domElements.tableBody){this.domElements.tableBody.innerHTML=t;if(this.domElements.tableBody&&null!=this.domElements.tableBody.children){const t=this.domElements.tableBody.children.length;n.debug("🔍 [TABLE RENDERER DEBUG] Righe aggiunte:",t),0===t&&e.eventi.length>0&&n.error("❌ [TABLE RENDERER DEBUG] Righe non aggiunte nonostante ci siano eventi!")}}else n.error("❌ [TABLE RENDERER DEBUG] tableBody è null!");this.updatePaginationControls(e),n.log("✅ Tabella renderizzata con successo")}catch(t){n.error("❌ Errore rendering tabella:",t),this.callbacks.showError&&this.callbacks.showError("Errore nel rendering della tabella")}}clearTable(){this.domElements.tableBody&&(this.domElements.tableBody.innerHTML=a(""))}renderEmptyState(){if(!this.domElements.tableBody)return;const e=document.createElement("tr"),t=document.createElement("td");t.colSpan=8,t.className="text-center text-muted",t.textContent="Nessun evento trovato",e.appendChild(t),this.domElements.tableBody.appendChild(e)}createTableRows(e){return e.map(e=>this.createTableRow(e)).join("")}createTableRow(e){const t=e.pazienteInfo,n=this.getEventDetails(e),i=this.getStatusBadge(e),r=this.getActionButtons(e),s=this.getTipoBadge(e);return`\n      <tr data-evento-id="${e.id}" class="evento-row">\n        <td>${e.dataEventoFormatted||o(e.data_evento)}</td>\n        <td>${s}</td>\n        <td>${t?a(t.nomeCompleto):"-"}</td>\n        <td>${t?a(t.reparto):"-"}</td>\n        <td><span class="clamp-3">${a(n)}</span></td>\n        <td><span class="clamp-3">${e.descrizione?a(e.descrizione):"-"}</span></td>\n        <td>${i}</td>\n        <td>${r}</td>\n      </tr>\n    `}getEventDetails(e){return"intervento"===e.tipo_evento?e.tipo_intervento||"-":e.agente_patogeno||"-"}getStatusBadge(e){return"infezione"===e.tipo_evento?e.data_fine_evento?`<span class="badge bg-success" title="Risolta il ${e.dataFineEventoFormatted}">Risolta</span>`:'<span class="badge bg-danger" title="Infezione attiva">Attiva</span>':""}getTipoBadge(e){let t,n;e.tipoEventoColor&&e.tipoEventoLabel?(t=e.tipoEventoColor,n=e.tipoEventoLabel):"intervento"===e.tipo_evento?(t="primary",n="Intervento"):"infezione"===e.tipo_evento?(t="warning",n="Infezione"):e.tipo_evento?(t="secondary",n=`Tipo: ${e.tipo_evento}`):(t="secondary",n="Sconosciuto");return`\n      <span class="badge bg-${t}">\n        ${this.renderEventIcon(e.tipoEventoIcon,e.tipo_evento,"white","me-1 align-middle fs-6")}\n        ${n}\n      </span>\n    `.trim()}getActionButtons(e){return`\n      <div class="btn-group btn-group-sm" role="group">\n        <button class="btn btn-sm btn-outline-primary event-detail-btn" data-evento-id="${e.id}" title="Apri dettagli evento" aria-label="Apri dettagli evento">\n          <span class="material-icons align-middle me-1">visibility</span>\n          <span class="btn-text align-middle">Dettagli</span>\n        </button>\n        ${"infezione"!==e.tipo_evento||e.data_fine_evento?"":`\n      <button class="btn btn-sm btn-outline-success event-resolve-btn" data-evento-id="${e.id}" title="Risolvi infezione" aria-label="Risolvi infezione">\n        <span class="material-icons align-middle me-1">check_circle</span>\n        <span class="btn-text align-middle">Risolvi</span>\n      </button>\n    `}\n      </div>\n    `}renderEventIcon(e,t,n="",i=""){(!e||e.includes("fa-")||e.includes("fas "))&&(e="intervento"===t?"medical_services":"warning");return`<span class="material-icons ${[n?`text-${n}`:"",i].filter(Boolean).join(" ")}">${e}</span>`}updatePaginationControls(e){const t=e?.pagination||e||{},n="number"==typeof t.pageSize?t.pageSize:10,i="number"==typeof t.currentPage?t.currentPage:0,a="number"==typeof t.totalPages?t.totalPages:1,o="number"==typeof t.totalCount?t.totalCount:0,r=Boolean(t.hasNextPage),s=Boolean(t.hasPrevPage);if(this.domElements.prevPageBtn&&(this.domElements.prevPageBtn.disabled=!s),this.domElements.nextPageBtn&&(this.domElements.nextPageBtn.disabled=!r),this.domElements.pageInfo){const e=0===o?0:i*n+1,t=0===o?0:Math.min((i+1)*n,o);this.domElements.pageInfo.textContent=`${e}-${t} di ${o} eventi (Pagina ${i+1} di ${a})`}this.domElements.paginationControls&&(this.domElements.paginationControls.style.display=a>1?"flex":"none")}updateTableRow(e){try{const t=this.domElements.tableBody.querySelector(`[data-evento-id="${e.id}"]`);if(!t)return n.warn(`⚠️ Riga evento ${e.id} non trovata nella tabella`),void 0;const i=this.createTableRow(e),a=document.createElement("div");a.innerHTML=i;t.replaceWith(a.firstElementChild),n.log(`✅ Riga evento ${e.id} aggiornata nella tabella`)}catch(t){n.error("❌ Errore aggiornamento riga tabella:",t)}}}class W{constructor(e,t){this.domElements=e,this.callbacks=t}renderTimeline(e){try{n.log("🎨 Rendering timeline eventi:",e);const t=this.domElements.timelineContainer;if(!t)return n.error("❌ Container timeline non trovato"),void 0;if(this.clearTimeline(),!e.eventi||0===e.eventi.length)return this.renderEmptyState(),void 0;const i=this.createTimelineElement(),a=this.groupEventsByDate(e.eventi);Object.keys(a).sort((e,t)=>new Date(t)-new Date(e)).forEach(e=>{const t=this.createDateGroup(e,a[e]);i.appendChild(t)}),t.appendChild(i),this.callbacks.updatePaginationControls&&this.callbacks.updatePaginationControls(e),n.log("✅ Timeline renderizzata con successo")}catch(t){n.error("❌ Errore rendering timeline:",t),this.callbacks.showError&&this.callbacks.showError("Errore nel rendering della timeline")}}updateTimelineItem(e){try{const t=this.domElements.timelineContainer.querySelector(`[data-evento-id="${e.id}"]`);if(!t)return n.warn(`⚠️ Evento ${e.id} non trovato nella timeline`),void 0;const i=this.createEventCard(e);t.replaceWith(i),n.log(`✅ Evento ${e.id} aggiornato nella timeline`)}catch(t){n.error("❌ Errore aggiornamento timeline item:",t)}}clearTimeline(){const e=this.domElements.timelineContainer;e&&(e.innerHTML=a(""))}createTimelineElement(){const e=document.createElement("div");return e.className="eventi-timeline",e.innerHTML=a('\n      <div class="timeline-line"></div>\n    '),e}groupEventsByDate(e){return e.reduce((e,t)=>{const n=t.data_evento;return e[n]||(e[n]=[]),e[n].push(t),e},{})}createDateGroup(e,t){const n=document.createElement("div");n.className="timeline-date-group";const i=document.createElement("div");i.className="timeline-date-header";const a=document.createElement("div");a.className="timeline-date-marker";const r=document.createElement("h5");return r.className="timeline-date-title",r.textContent=o(e),i.appendChild(a),i.appendChild(r),n.appendChild(i),t.sort((e,t)=>new Date(t.created_at||0)-new Date(e.created_at||0)),t.forEach(e=>{const t=this.createEventCard(e);n.appendChild(t)}),n}createEventCard(e){const t=document.createElement("div"),n="infezione"===e.tipo_evento;t.className=`card card-list-compact timeline-event-card ${n?n&&!e.data_fine_evento?"status-infected":"status-error":"status-success"} evento-${e.tipo_evento}`,t.dataset.eventoId=e.id;const i=e.tipoEventoIcon||("intervento"===e.tipo_evento?"medical_services":"warning"),r=e.tipoEventoColor||("intervento"===e.tipo_evento?"primary":"warning"),s=e.tipoEventoLabel||("intervento"===e.tipo_evento?"Intervento":"Infezione"),l=n?e.data_fine_evento?'<span class="badge bg-success ms-1" style="font-size:0.7em;">Risolta</span>':'<span class="badge bg-warning text-dark ms-1" style="font-size:0.7em;"><span class="material-icons" style="font-size:0.8em;vertical-align:middle;">warning</span> Attiva</span>':"",c="intervento"===e.tipo_evento?e.tipo_intervento||"-":e.agente_patogeno||(e.data_fine_evento?"Infezione risolta":"Infezione attiva"),d=e.pazienteInfo?`\n          <div class="card-meta mobile-text-sm mt-1">\n            <div class="d-flex align-items-center">\n              <span class="material-icons me-1" style="font-size:1em;vertical-align:middle;">person</span>\n              <span class="patient-name">${a(e.pazienteInfo.nomeCompleto)}</span>\n            </div>\n            <div class="mt-1">\n              <span class="badge bg-secondary">${a(e.pazienteInfo.reparto)}</span>\n            </div>\n          </div>\n        `:"",m=this.renderEventCardDetails(e),p=`\n        <div class="card-body">\n          <div class="card-info">\n            <div class="card-title d-flex align-items-center gap-2">\n              ${this.renderEventIcon(i,e.tipo_evento,r)}\n              <span class="fw-bold">${s}</span>\n              ${l}\n            </div>\n            <div class="card-meta mobile-text-sm">\n              ${o(e.data_evento)} • ${a(c)}\n            </div>\n            ${d}\n          </div>\n          <div class="event-card-body mt-2 mobile-text-sm text-muted">\n            ${m}\n          </div>\n          <div class="mt-2 text-end">\n            <div class="btn-group btn-group-sm" role="group">\n              <button class="btn btn-outline-primary event-detail-btn" data-evento-id="${e.id}" title="Apri dettagli evento" aria-label="Apri dettagli evento">\n                <span class="material-icons align-middle me-1">visibility</span>\n                <span class="btn-text align-middle">Dettagli</span>\n              </button>\n            </div>\n          </div>\n        </div>\n    `;return t.innerHTML=a(p),t}renderEventCardDetails(e){let t="";return e.descrizione&&(t+=`<p class="event-description">${a(e.descrizione)}</p>`),"intervento"===e.tipo_evento?e.tipo_intervento&&(t+=`\n          <div class="event-detail-item">\n            <strong>Tipo Intervento:</strong> ${a(e.tipo_intervento)}\n          </div>\n        `):"infezione"===e.tipo_evento&&e.agente_patogeno&&(t+=`\n          <div class="event-detail-item">\n            <strong>Agente Patogeno:</strong> ${a(e.agente_patogeno)}\n          </div>\n        `),t||'<p class="text-muted">Nessun dettaglio aggiuntivo</p>'}renderEventIcon(e,t,n,i=""){return`<span class="material-icons text-${n||("intervento"===t?"primary":"warning")} ${i}">${e||("intervento"===t?"medical_services":"warning")}</span>`}renderEmptyState(){const e=this.domElements.timelineContainer;if(!e)return;e.innerHTML=a("");const t=document.createElement("div");t.className="empty-state text-center py-5";const n=document.createElement("div");n.className="empty-state-icon mb-3",n.innerHTML=a('<span class="material-icons text-muted" style="font-size:48px;">event_busy</span>'),t.appendChild(n);const i=document.createElement("h4");i.className="text-muted",i.textContent="Nessun evento trovato",t.appendChild(i);const o=document.createElement("p");o.className="text-muted",o.textContent="Non ci sono eventi clinici che corrispondono ai filtri selezionati.",t.appendChild(o);const r=document.createElement("button");r.className="btn btn-primary",r.id="add-first-event-btn",r.innerHTML=a('<span class="material-icons me-1">add</span> Aggiungi primo evento'),t.appendChild(r),e.appendChild(t),r.addEventListener("click",()=>{const e=this.domElements.addEventBtn;e&&e.click()})}}let G=null,J=null,Y=null;function K(e){G=e}function Q(){J?J.domElements=G:J=new q(G,{showError:ne,updatePaginationControls:()=>{}}),Y?Y.domElements=G:Y=new W(G,{showError:ne,updatePaginationControls:()=>{}})}function X(e){if(n.log("🎨 renderEventsResponsive chiamata con:",e),!G||0===Object.keys(G).length)return n.error("❌ domElements non inizializzati in renderEventsResponsive"),void 0;const t=window.innerWidth>=1200;n.log("📱 useTable:",t,"window.innerWidth:",window.innerWidth),G.tableContainer?G.tableContainer.style.display=t?"block":"none":n.warn("⚠️ tableContainer non trovato"),G.timelineContainer?G.timelineContainer.style.display=t?"none":"block":n.warn("⚠️ timelineContainer non trovato"),Q(),t?(n.log("🔧 Rendering tabella (renderer)"),J.renderTable(e)):(n.log("🔧 Rendering timeline (renderer)"),Y.renderTimeline(e));try{void("undefined"!=typeof window&&window.applyResponsiveDesign&&window.applyResponsiveDesign())}catch(i){n.warn("⚠️ applyResponsiveDesign fallita dopo renderEventsResponsive:",i)}}function Z(e){try{n.log("🎨 Rendering timeline (renderer):",e),Q(),Y.renderTimeline(e)}catch(t){n.error("❌ Errore rendering timeline:",t),ne("Errore nel rendering della timeline")}}function ee(e){try{n.log("🎨 Rendering tabella (renderer):",e),Q(),J.renderTable(e)}catch(t){n.error("❌ Errore rendering tabella eventi:",t),ne("Errore nel rendering della tabella")}}function te(){G.timelineContainer&&(G.timelineContainer.innerHTML=a('\n      <div class="loading-state text-center py-5">\n        <div class="spinner-border text-primary mb-3" role="status">\n          <span class="visually-hidden">Caricamento...</span>\n        </div>\n        <p class="text-muted">Caricamento eventi clinici...</p>\n      </div>\n    ')),G.tableBody&&(G.tableBody.innerHTML=a('\n      <tr>\n        <td colspan="8" class="text-center">\n          <div class="spinner-border text-primary" role="status">\n            <span class="visually-hidden">Caricamento...</span>\n          </div>\n        </td>\n      </tr>\n    '))}function ne(e="Errore nel caricamento dei dati"){G.timelineContainer&&(G.timelineContainer.innerHTML=a(`\n      <div class="error-state text-center py-5">\n        <div class="error-state-icon mb-3">\n          <span class="material-icons text-danger" style="font-size:48px;">warning</span>\n        </div>\n        <h4 class="text-danger">Errore</h4>\n        <p class="text-muted">${a(e)}</p>\n        <button class="btn btn-outline-primary" onclick="location.reload()">\n          <span class="material-icons me-1">refresh</span>\n          Riprova\n        </button>\n      </div>\n    `)),G.tableBody&&(G.tableBody.innerHTML=a(`\n      <tr>\n        <td colspan="8" class="text-center text-danger">\n          <strong>${a(e)}</strong>\n        </td>\n      </tr>\n    `))}function ie(){if(!G.timelineContainer)return;const e=G.timelineContainer.innerHTML;G.timelineContainer.innerHTML=a('\n    <div class="searching-state text-center py-4">\n      <div class="spinner-border spinner-border-sm text-primary me-2" role="status">\n        <span class="visually-hidden">Ricerca in corso...</span>\n      </div>\n      <span class="text-muted">Ricerca in corso...</span>\n    </div>\n  ')+e}function ae(){const e=document.querySelector(".searching-state");e&&e.remove()}function oe(e,t){const n=document.getElementById(t);if(!n)return;if(!e||0===e.length)return n.style.display="none",void 0;const i=e.map(e=>function(e){return`\n    <div class="dropdown-item patient-search-result" data-patient-id="${e.id}">\n      <div class="d-flex align-items-center">\n        <div class="flex-grow-1">\n          <div class="fw-bold">${a(e.nome)} ${a(e.cognome)}</div>\n          <div class="text-muted small">\n            CF: ${a(e.codice_fiscale)} | \n            ${e.data_nascita?new Date(e.data_nascita).toLocaleDateString("it-IT"):"N/A"}\n          </div>\n        </div>\n        <small class="text-muted">${a(e.status||"Attivo")}</small>\n      </div>\n    </div>\n  `}(e)).join("");n.innerHTML=a(i),n.style.display="block",function(e,t){const n=e.querySelectorAll(".patient-search-result");n.forEach(n=>{n.addEventListener("click",function(){const n=this.dataset.patientId,i=this.querySelector(".fw-bold").textContent;if("patient-search-results"===t){const e=document.getElementById("paziente-nome");e&&(e.value=i,e.dataset.patientId=n)}e.style.display="none"})})}(n,t)}function re(e){if(!G||!G.detailContent)return;const t=function(e){const t="infezione"===e.tipo_evento,n=t&&!e.data_fine_evento,i="infezione"===e.tipo_evento?`<div class="col-md-6">\n         <strong>Stato:</strong>\n         <div class="mt-1">\n           ${e.data_fine_evento?`<span class="badge bg-success">Risolta il ${o(e.data_fine_evento)}</span>`:'<span class="badge bg-danger">Attiva</span>'}\n         </div>\n       </div>`:"",a=e.pazienteInfo?`<div class="col-12">\n         <strong>Paziente:</strong>\n         <div class="mt-1">\n           <span class="material-icons me-1">person</span>\n           ${e.pazienteInfo.nomeCompleto}\n           <span class="badge bg-secondary ms-2">${e.pazienteInfo.reparto}</span>\n         </div>\n       </div>`:"",r=e.descrizione?`<div class="col-12">\n         <strong>Descrizione:</strong>\n         <div class="mt-1">${e.descrizione}</div>\n       </div>`:"",s=function(e){if("intervento"===e.tipo_evento&&e.tipo_intervento)return`\n      <div class="col-12">\n        <strong>Tipo Intervento:</strong>\n        <div class="mt-1">${e.tipo_intervento}</div>\n      </div>\n    `;if("infezione"===e.tipo_evento&&e.agente_patogeno)return`\n      <div class="col-12">\n        <strong>Agente Patogeno:</strong>\n        <div class="mt-1">${e.agente_patogeno}</div>\n      </div>\n    `;return""}(e),l=function(e){const t=e.updated_at&&e.updated_at!==e.created_at?`<div class="col-md-6">\n         <strong>Modificato il:</strong>\n         <div class="mt-1 text-muted">${o(e.updated_at)}</div>\n       </div>`:"";return`\n    <div class="col-md-6">\n      <strong>Creato il:</strong>\n      <div class="mt-1 text-muted">${o(e.created_at)}</div>\n    </div>\n    ${t}\n  `}(e),c=n?`<button class="btn btn-success btn-sm event-resolve-btn" data-evento-id="${e.id}" title="Risolvi">\n         <span class="material-icons align-middle me-1">check_circle</span>\n         Risolvi\n       </button>`:"",d=`\n    <div class="event-detail-actions d-flex flex-wrap gap-2 justify-content-end mb-3">\n      <button class="btn btn-outline-secondary btn-sm event-edit-btn" data-evento-id="${e.id}" title="Modifica">\n        <span class="material-icons align-middle me-1">edit</span>\n        Modifica\n      </button>\n      <button class="btn btn-outline-danger btn-sm event-delete-btn" data-evento-id="${e.id}" title="Elimina">\n        <span class="material-icons align-middle me-1">delete</span>\n        Elimina\n      </button>\n      ${c}\n    </div>`;return`\n    <div class="event-details">\n      ${d}\n      <div class="row g-3">\n        <div class="col-md-6">\n          <strong>Tipo Evento:</strong>\n          <div class="d-flex align-items-center mt-1">\n            ${function(e,t,n,i=""){const a=e=>"intervento"===e?"local_hospital":"infezione"===e?"bug_report":"event",o="string"==typeof e&&/\bfa[srldb]?\b|fa-/.test(e)?a(t):e||a(t);return`<span class="${["material-icons","white"===n?"text-white":n?`text-${n}`:"",i].filter(Boolean).join(" ")}">${o}</span>`}(e.tipoEventoIcon,e.tipo_evento,e.tipoEventoColor,"me-2")}\n            ${e.tipoEventoLabel}\n          </div>\n        </div>\n        <div class="col-md-6">\n          <strong>Data Evento:</strong>\n          <div class="mt-1">${e.dataEventoFormatted}</div>\n        </div>\n        ${i}\n        ${a}\n        ${r}\n        ${s}\n        ${l}\n      </div>\n    </div>\n  `}(e);G.detailContent.innerHTML=a(t);try{const e=G.eventDetailModal;if(e){const t=e.querySelector(".modal-footer");t&&(t.querySelectorAll(".event-edit-btn, .event-delete-btn").forEach(e=>e.remove()),t.querySelector("*")&&""!==t.textContent.trim()||t.classList.add("d-none"))}}catch(i){n.warn("Footer cleanup dettagli evento non riuscito:",i)}}function se(e){const t=document.getElementById("active-filters-indicator");t&&(e>0?(t.innerHTML=a(`\n      <span class="badge bg-primary me-2">\n        <span class="material-icons" style="font-size: 14px;">filter_list</span>\n        ${e} filtri attivi\n      </span>\n    `),t.style.display="block"):t.style.display="none")}function le(e){const t=document.getElementById("filter-stats");if(!t)return;if(!e)return t.style.display="none",void 0;t.innerHTML=a(`\n    <div class="filter-stats-content">\n      <div class="stats-item">\n        <span class="material-icons">event</span>\n        <span>${e.totalEvents||0} eventi totali</span>\n      </div>\n      <div class="stats-item">\n        <span class="material-icons">visibility</span>\n        <span>${e.filteredEvents||0} eventi visualizzati</span>\n      </div>\n      <div class="stats-item">\n        <span class="material-icons">date_range</span>\n        <span>${e.dateRange||"Tutto il periodo"}</span>\n      </div>\n    </div>\n  `),t.style.display="block"}function ce(e="Esportazione in corso..."){const t=document.getElementById("export-progress");t&&(t.innerHTML=a(`\n    <div class="export-progress-content">\n      <div class="spinner-border spinner-border-sm me-2" role="status">\n        <span class="visually-hidden">Esportazione...</span>\n      </div>\n      <span>${a(e)}</span>\n    </div>\n  `),t.style.display="block")}function de(t){const n=document.getElementById("export-progress");n&&(n.style.display="none");const i=document.createElement("div");i.className="toast align-items-center text-white bg-success border-0",i.setAttribute("role","alert"),i.innerHTML=a(`\n    <div class="d-flex">\n      <div class="toast-body">\n        <span class="material-icons me-2">download</span>\n        Esportati ${t.count} eventi in ${a(t.filename)}\n      </div>\n      <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>\n    </div>\n  `);let o=document.getElementById("toast-container");o||(o=document.createElement("div"),o.id="toast-container",o.className="toast-container position-fixed top-0 end-0 p-3",document.body.appendChild(o)),o.appendChild(i),e(async()=>{const{Toast:e}=await import("./vendor-BU6HxVpN.js");return{Toast:e}},[]).then(({Toast:e})=>{new e(i).show(),i.addEventListener("hidden.bs.toast",()=>{i.remove()})})}function me(e,t){if(!t||t.length<2)return e;const n=t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),i=new RegExp(`(${n})`,"gi");return e.replace(i,"<mark>$1</mark>")}const pe=Object.freeze(Object.defineProperty({__proto__:null,hideSearchingState:ae,highlightSearchTerms:me,initializeRenderer:K,renderEventDetails:re,renderEventsResponsive:X,renderEventsTable:ee,renderEventsTimeline:Z,renderPatientSearchResults:oe,showActiveFiltersIndicator:se,showError:ne,showExportProgress:ce,showExportSuccess:de,showFilterStats:le,showLoading:te,showSearchingState:ie,updateSearchResultsCount:V},Symbol.toStringTag,{value:"Module"}));let ve=null;function ue(e){ve=e}function ge(e){e&&ve.eventForm&&(ve.eventTypeSelect&&(ve.eventTypeSelect.value=e.tipo_evento||""),ve.eventDateInput&&(ve.eventDateInput.value=e.data_evento?e.data_evento.split("T")[0]:""),ve.eventDescriptionInput&&(ve.eventDescriptionInput.value=e.descrizione||""),ve.eventNotesInput&&(ve.eventNotesInput.value=e.note||""),ve.departmentSelect&&(ve.departmentSelect.value=e.reparto||""),ve.prioritySelect&&(ve.prioritySelect.value=e.priorita||""),ve.statusSelect&&(ve.statusSelect.value=e.status||""),ve.patientNameInput&&(ve.patientNameInput.value=e.paziente_nome?`${e.paziente_nome} ${e.paziente_cognome||""}`.trim():"",e.paziente_id&&(ve.patientNameInput.dataset.patientId=e.paziente_id)),be(e.tipo_evento),ve.dischargeCodeSelect&&(ve.dischargeCodeSelect.value=e.codice_dimissione||""),ve.dischargeDestinationSelect&&(ve.dischargeDestinationSelect.value=e.destinazione_dimissione||""),ve.transferSourceInput&&(ve.transferSourceInput.value=e.provenienza_trasferimento||""),ve.transferDestinationInput&&(ve.transferDestinationInput.value=e.destinazione_trasferimento||""),n.log("📝 Form popolato con evento:",e.id))}function he(){ve.eventForm&&(ve.eventForm.reset(),ve.patientNameInput&&delete ve.patientNameInput.dataset.patientId,be(""),Ee(),n.log("🧹 Form evento resettato"))}function fe(e,t="danger"){const n=document.getElementById("form-message-container");n&&(n.innerHTML=a(`\n    <div class="alert alert-${t} alert-dismissible fade show" role="alert">\n      ${a(e)}\n      <button type="button" class="btn-close" data-bs-dismiss="alert"></button>\n    </div>\n  `))}function Ee(){const e=document.getElementById("form-message-container");e&&(e.innerHTML="")}function ye(e,t="add"){const n=document.getElementById("evento-modal-title"),i=document.getElementById("evento-modal-icon");n&&(n.textContent=e,i&&(i.textContent=t))}function be(e){const t=document.getElementById("discharge-fields"),n=document.getElementById("transfer-fields"),i=document.getElementById("intervento-fields"),a=document.getElementById("infezione-fields");t&&(t.style.display="none"),n&&(n.style.display="none"),i&&(i.style.display="none"),a&&(a.style.display="none");const o=document.getElementById("evento-tipo-intervento"),r=document.getElementById("evento-agente-patogeno");switch(o&&(o.value=""),r&&(r.value=""),e){case"dimissione":t&&(t.style.display="block");break;case"trasferimento":n&&(n.style.display="block");break;case"intervento":i&&(i.style.display="block");break;case"infezione":a&&(a.style.display="block")}}function _e(){if(!ve.eventForm)return{isValid:!1,errors:["Form non trovato"]};const e=[];if(ve.eventTypeSelect?.value||e.push("Tipo evento è obbligatorio"),ve.eventDateInput?.value||e.push("Data evento è obbligatoria"),ve.eventDescriptionInput?.value?.trim()||e.push("Descrizione è obbligatoria"),ve.patientNameInput?.dataset?.patientId||e.push("Selezionare un paziente valido"),ve.eventDateInput?.value){const t=new Date(ve.eventDateInput.value),n=new Date;n.setHours(23,59,59,999),t>n&&e.push("La data evento non può essere nel futuro")}const t=ve.eventTypeSelect?.value;if("dimissione"===t&&(ve.dischargeCodeSelect?.value||e.push("Codice dimissione è obbligatorio per le dimissioni"),ve.dischargeDestinationSelect?.value||e.push("Destinazione dimissione è obbligatoria per le dimissioni")),"trasferimento"===t&&(ve.transferSourceInput?.value?.trim()||e.push("Provenienza è obbligatoria per i trasferimenti"),ve.transferDestinationInput?.value?.trim()||e.push("Destinazione è obbligatoria per i trasferimenti")),"intervento"===t){const t=document.getElementById("evento-tipo-intervento");t?.value||e.push("Tipo intervento è obbligatorio per gli interventi")}if("infezione"===t){const t=document.getElementById("evento-agente-patogeno");t?.value?.trim()||e.push("Agente patogeno è obbligatorio per le infezioni")}return{isValid:0===e.length,errors:e}}function ze(){if(!ve.eventForm)return null;const e={tipo_evento:ve.eventTypeSelect?.value||"",data_evento:ve.eventDateInput?.value||"",descrizione:ve.eventDescriptionInput?.value?.trim()||"",note:ve.eventNotesInput?.value?.trim()||"",reparto:ve.departmentSelect?.value||"",priorita:ve.prioritySelect?.value||"",status:ve.statusSelect?.value||"attivo",paziente_id:ve.patientNameInput?.dataset?.patientId||null},t=e.tipo_evento;if("dimissione"===t&&(e.codice_dimissione=ve.dischargeCodeSelect?.value||"",e.destinazione_dimissione=ve.dischargeDestinationSelect?.value||""),"trasferimento"===t&&(e.provenienza_trasferimento=ve.transferSourceInput?.value?.trim()||"",e.destinazione_trasferimento=ve.transferDestinationInput?.value?.trim()||""),"intervento"===t){const t=document.getElementById("evento-tipo-intervento");e.tipo_intervento=t?.value||""}if("infezione"===t){const t=document.getElementById("evento-agente-patogeno");e.agente_patogeno=t?.value?.trim()||""}return e}function we(e){if(!ve.eventForm)return;ve.eventForm.querySelectorAll("input, select, textarea, button").forEach(t=>{t.disabled=!e}),n.log("📝 Form "+(e?"abilitato":"disabilitato"))}function Fe(e,t="Salvataggio in corso..."){const n=ve.saveBtn;n&&(e?(n.disabled=!0,n.innerHTML=a(`\n      <span class="spinner-border spinner-border-sm me-2" role="status"></span>\n      ${a(t)}\n    `)):(n.disabled=!1,n.innerHTML=a('\n      <span class="material-icons me-1">save</span>\n      Salva\n    ')))}function Ie(e){if(!Array.isArray(e))return;const t=ve.eventForm?.querySelectorAll(".is-invalid");t?.forEach(e=>e.classList.remove("is-invalid"));const n={"Tipo evento è obbligatorio":ve.eventTypeSelect,"Data evento è obbligatoria":ve.eventDateInput,"Descrizione è obbligatoria":ve.eventDescriptionInput,"Selezionare un paziente valido":ve.patientNameInput,"Codice dimissione è obbligatorio per le dimissioni":ve.dischargeCodeSelect,"Destinazione dimissione è obbligatoria per le dimissioni":ve.dischargeDestinationSelect,"Provenienza è obbligatoria per i trasferimenti":ve.transferSourceInput,"Destinazione è obbligatoria per i trasferimenti":ve.transferDestinationInput};e.forEach(e=>{const t=n[e];t&&t.classList.add("is-invalid")})}let Se=null;function Ce(e,t=3e3){if(!ve.eventForm)return;const i=()=>{Se&&clearTimeout(Se),Se=setTimeout(()=>{const t=ze();_e().isValid&&t.descrizione&&(e(t,!0),n.log("💾 Auto-save eseguito"))},t)};ve.eventForm.querySelectorAll("input, select, textarea").forEach(e=>{e.addEventListener("input",i),e.addEventListener("change",i)}),n.log("💾 Auto-save abilitato con delay di",t,"ms")}function De(){Se&&(clearTimeout(Se),Se=null),n.log("💾 Auto-save disabilitato")}const Te=Object.freeze(Object.defineProperty({__proto__:null,clearFormMessages:Ee,disableAutoSave:De,enableAutoSave:Ce,getFormData:ze,highlightFormErrors:Ie,initializeForms:ue,populateEventForm:ge,resetEventForm:he,setFormEnabled:we,setFormLoading:Fe,showFormMessage:fe,toggleEventTypeFields:be,updateModalTitle:ye,validateEventForm:_e},Symbol.toStringTag,{value:"Module"}));let Le=null;function Be(e){Le=e,n.log("🎛️ Modulo Filters inizializzato")}function Me(){if(!Le)return n.warn("⚠️ DOM elements non inizializzati per resetFiltersUI"),void 0;Le.filterType&&(Le.filterType.value=""),Le.filterDateFrom&&(Le.filterDateFrom.value=""),Le.filterDateTo&&(Le.filterDateTo.value=""),Le.filterReparto&&(Le.filterReparto.value=""),Le.filterStato&&(Le.filterStato.value=""),Le.filterSortColumn&&(Le.filterSortColumn.value=""),Le.filterSortDirection&&(Le.filterSortDirection.value="desc"),Le.filterStatus&&(Le.filterStatus.value=""),Le.searchPatientInput&&(Le.searchPatientInput.value=""),Le.filterPriorityFrom&&(Le.filterPriorityFrom.value=""),Le.filterPriorityTo&&(Le.filterPriorityTo.value=""),Le.filterCreatedBy&&(Le.filterCreatedBy.value=""),Le.filterHasAllegati&&(Le.filterHasAllegati.checked=!1),n.log("🧹 Filtri UI resettati")}function Pe(e){return Le?e?(Le.filterType&&e.tipo_evento&&(Le.filterType.value=e.tipo_evento),Le.filterDateFrom&&e.data_da&&(Le.filterDateFrom.value=e.data_da),Le.filterDateTo&&e.data_a&&(Le.filterDateTo.value=e.data_a),Le.filterReparto&&e.reparto&&(Le.filterReparto.value=e.reparto),Le.filterStato&&e.stato&&(Le.filterStato.value=e.stato),Le.filterSortColumn&&e.sortColumn&&(Le.filterSortColumn.value=e.sortColumn),Le.filterSortDirection&&e.sortDirection&&(Le.filterSortDirection.value=e.sortDirection),Le.filterStatus&&e.status&&(Le.filterStatus.value=e.status),Le.searchPatientInput&&e.paziente&&(Le.searchPatientInput.value=e.paziente),Le.filterPriorityFrom&&e.priorita_da&&(Le.filterPriorityFrom.value=e.priorita_da),Le.filterPriorityTo&&e.priorita_a&&(Le.filterPriorityTo.value=e.priorita_a),Le.filterCreatedBy&&e.creato_da&&(Le.filterCreatedBy.value=e.creato_da),Le.filterHasAllegati&&"boolean"==typeof e.ha_allegati&&(Le.filterHasAllegati.checked=e.ha_allegati),n.log("🎛️ Filtri applicati all'UI:",e),void 0):(n.warn("⚠️ Nessun filtro fornito per applyFiltersToUI"),void 0):(n.warn("⚠️ DOM elements non inizializzati per applyFiltersToUI"),void 0)}function Re(){if(!Le)return n.warn("⚠️ DOM elements non inizializzati per getFiltersFromUI"),{};const e={paziente_search:Le.searchPatientInput?.value||"",tipo_evento:Le.filterType?.value||"",data_da:Le.filterDateFrom?.value||"",data_a:Le.filterDateTo?.value||"",reparto:Le.filterReparto?.value||"",stato:Le.filterStato?.value||"",sortColumn:Le.filterSortColumn?.value||"",sortDirection:Le.filterSortDirection?.value||"desc"};return n.log("📊 Filtri raccolti dalla UI:",e),e}function $e(e){return Le.filterReparto?e&&Array.isArray(e)?async function(e,t,n){if(!e)return n&&n.warn("⚠️ Elemento filterReparto non trovato"),void 0;try{const i=e.customSelectInstance;if(i){n&&n.log("🔧 Popolamento CustomSelect reparto con",t.length,"opzioni");const a=e.querySelector('option[value=""]');e.innerHTML="",a&&e.appendChild(a),t.forEach(t=>{const n=document.createElement("option");n.value=t,n.textContent=t,e.appendChild(n)}),"function"==typeof i.updateOptions?(i.updateOptions(),n&&n.log("🔧 CustomSelect options updated")):"function"==typeof i.refresh&&(i.refresh(),n&&n.log("🔧 CustomSelect refreshed"))}else{n&&n.log("🔧 Popolamento select standard reparto con",t.length,"opzioni");const i=e.querySelector('option[value=""]');e.innerHTML="",i&&e.appendChild(i),t.forEach(t=>{const n=document.createElement("option");n.value=t,n.textContent=t,e.appendChild(n)})}n&&n.log("✅ Filtro reparti popolato con",t.length,"opzioni")}catch(i){n&&n.error("❌ Errore popolamento filtro reparti:",i)}}(Le.filterReparto,e,n):(n.warn("⚠️ Lista departments non valida:",e),void 0):(n.warn("⚠️ DOM elements non inizializzati per populateDepartmentFilter"),void 0)}function xe(e){if(!Le)return n.warn("⚠️ DOM elements non inizializzati per populateAdvancedFilters"),void 0;n.log("🔧 Popolamento filtri avanzati:",e)}function ke(){const e=Re(),t=[];if(e.data_da&&e.data_a){new Date(e.data_da)>new Date(e.data_a)&&t.push("La data di inizio deve essere precedente alla data di fine")}if(e.priorita_da&&e.priorita_a){parseInt(e.priorita_da)>parseInt(e.priorita_a)&&t.push("La priorità minima deve essere inferiore alla priorità massima")}const i=0===t.length;return n.log(i?"✅ Filtri validi":"❌ Errori validazione filtri:",t),{isValid:i,errors:t}}function Ae(){const e=Re();let t=0;return e.tipo_evento&&t++,e.data_da&&t++,e.data_a&&t++,e.reparto&&t++,e.status&&t++,e.paziente&&t++,e.priorita_da&&t++,e.priorita_a&&t++,e.creato_da&&t++,e.ha_allegati&&t++,n.log(`📊 Filtri attivi: ${t}`),t}function Oe(e="eventi-clinici-filters"){try{const t=Re();localStorage.setItem(e,JSON.stringify(t)),n.log("💾 Filtri salvati nel localStorage:",e)}catch(t){n.error("❌ Errore salvataggio filtri:",t)}}function je(e="eventi-clinici-filters"){try{const t=localStorage.getItem(e);if(t){const i=JSON.parse(t);return n.log("📂 Filtri caricati dal localStorage:",e),i}}catch(t){n.error("❌ Errore caricamento filtri:",t)}return null}function Ne(e="eventi-clinici-filters"){const t=je(e);t&&(Pe(t),n.log("🔄 Filtri salvati ripristinati"))}function He(e="eventi-clinici-filters"){try{localStorage.removeItem(e),n.log("🧹 Filtri salvati rimossi:",e)}catch(t){n.error("❌ Errore rimozione filtri salvati:",t)}}const Ue=Object.freeze(Object.defineProperty({__proto__:null,applyFiltersToUI:Pe,clearSavedFilters:He,getActiveFiltersCount:Ae,getFiltersFromUI:Re,initializeFilters:Be,loadFiltersFromStorage:je,populateAdvancedFilters:xe,populateDepartmentFilter:$e,resetFiltersUI:Me,restoreSavedFilters:Ne,saveFiltersToStorage:Oe,validateFilters:ke},Symbol.toStringTag,{value:"Module"}));function Ve(e,t=150,n={}){const{leading:i=!1,trailing:a=!0}=n;let o,r,s=null,l=!1;function c(){s=null,a&&o&&(e.apply(r,o),o=r=void 0,l=!1)}function d(...n){o=n,r=this,s?(clearTimeout(s),s=setTimeout(c,t)):(i&&!l&&(e.apply(r,o),l=!0,o=r=void 0),s=setTimeout(c,t))}return d.cancel=()=>{s&&(clearTimeout(s),s=null),o=r=void 0,l=!1},d}let qe={},We=null,Ge=null,Je=!1;function Ye(){n.log("🔄 Inizializzazione DOM elements per eventi clinici..."),qe={timelineContainer:document.getElementById("eventi-timeline-container"),tableContainer:document.getElementById("eventi-table-container"),tableBody:document.getElementById("eventi-table-body"),searchPatientInput:document.getElementById("eventi-search-patient"),patientSearchResults:document.getElementById("patient-search-results"),filterType:document.getElementById("eventi-filter-type"),filterDateFrom:document.getElementById("eventi-filter-date-from"),filterDateTo:document.getElementById("eventi-filter-date-to"),filterReparto:document.getElementById("eventi-filter-reparto"),filterStato:document.getElementById("eventi-filter-stato"),filterSortColumn:document.getElementById("eventi-sort-column"),filterSortDirection:document.getElementById("eventi-sort-direction"),addEventBtn:document.getElementById("eventi-add-btn"),resetFiltersBtn:document.getElementById("eventi-reset-filters-btn"),exportCsvBtn:document.getElementById("eventi-export-csv-btn"),exportJsonBtn:document.getElementById("eventi-export-json-btn"),paginationControls:document.getElementById("eventi-pagination-controls"),prevPageBtn:document.getElementById("eventi-prev-page-btn"),nextPageBtn:document.getElementById("eventi-next-page-btn"),pageInfo:document.getElementById("eventi-page-info"),eventFormModal:document.getElementById("evento-form-modal"),eventDetailModal:document.getElementById("evento-detail-modal"),modalTitle:document.getElementById("evento-modal-title"),modalIcon:document.getElementById("evento-modal-icon"),saveBtn:document.getElementById("evento-save-btn"),detailTitle:document.getElementById("evento-detail-title"),detailIcon:document.getElementById("evento-detail-icon"),detailContent:document.getElementById("evento-detail-content"),messageContainer:document.getElementById("evento-messaggio-container"),eventForm:document.getElementById("evento-form"),eventId:document.getElementById("evento-id"),eventPatientInput:document.getElementById("evento-paziente"),eventPatientId:document.getElementById("evento-paziente-id"),eventPatientSearchResults:document.getElementById("evento-patient-search-results"),eventType:document.getElementById("evento-tipo"),eventDate:document.getElementById("evento-data"),eventDescription:document.getElementById("evento-descrizione"),interventionFields:document.getElementById("intervento-fields"),interventionType:document.getElementById("evento-tipo-intervento"),infectionFields:document.getElementById("infezione-fields"),infectionAgent:document.getElementById("evento-agente-patogeno")};const t=Object.values(qe).filter(e=>null!==e).length,i=Object.keys(qe).length;n.log(`🎯 DOM elements inizializzati: ${t}/${i} elementi trovati`);const a=Object.entries(qe).filter(([e,t])=>null===t).map(([e,t])=>e);return a.length>0&&n.warn("⚠️ Elementi DOM non trovati:",a),async function(){try{const t=await e(()=>Promise.resolve().then(()=>pe),void 0);t.initializeRenderer&&t.initializeRenderer(qe);const i=await e(()=>Promise.resolve().then(()=>Te),void 0);i.initializeForms&&i.initializeForms(qe);const a=await e(()=>Promise.resolve().then(()=>Ue),void 0);a.initializeFilters&&a.initializeFilters(qe),n.log("🔗 Tutti i moduli UI inizializzati")}catch(t){n.error("❌ Errore inizializzazione moduli UI:",t)}}(),function(){if(Xe(),"undefined"!=typeof window){const e=Ve(()=>Xe(),150);window.addEventListener("resize",e)}}(),Je=!0,n.log("✅ State Manager inizializzato completamente"),qe}function Ke(){return Je?qe:(n.warn("⚠️ State Manager non inizializzato, chiamando initializeDOMElements()"),Ye())}function Qe(){try{n.log("🧹 Resetting UI state..."),We=null,Ge=null,qe={},Je=!1,n.log("✅ UI state reset: renderers e domElements azzerati")}catch(e){n.warn("⚠️ Errore durante resetUIState:",e)}}function Xe(){try{!function(e={}){const t=window.innerWidth<768,n=window.innerWidth>=768&&window.innerWidth<1200,i=window.innerWidth>=1200;e.tableContainer&&(e.tableContainer.style.display=i?"block":"none"),e.timelineContainer&&(e.timelineContainer.style.display=i?"none":"block",e.timelineContainer.classList.toggle("mobile-layout",t),e.timelineContainer.classList.toggle("tablet-layout",n)),document.querySelectorAll(".timeline-event-card").forEach(e=>{e.classList.toggle("mobile-card",t),e.classList.toggle("tablet-card",n)})}(),n.log("📱 Design responsive applicato")}catch(e){n.warn("⚠️ Errore applicazione design responsive:",e)}}const Ze=Object.freeze(Object.defineProperty({__proto__:null,applyFiltersToUI:Pe,applyResponsiveDesign:Xe,clearFormMessages:Ee,clearSavedFilters:He,disableAutoSave:De,enableAutoSave:Ce,getActiveFiltersCount:Ae,getDOMElements:Ke,getFiltersFromUI:Re,getFormData:ze,hideSearchingState:ae,highlightFormErrors:Ie,highlightSearchTerms:me,initializeDOMElements:Ye,initializeFilters:Be,initializeForms:ue,initializeRenderer:K,loadFiltersFromStorage:je,populateAdvancedFilters:xe,populateDepartmentFilter:$e,populateEventForm:ge,renderEventDetails:re,renderEventsResponsive:X,renderEventsTable:ee,renderEventsTimeline:Z,renderPatientSearchResults:oe,resetCurrentFiltersToDefaults:S,resetEventForm:he,resetFiltersUI:Me,resetUIState:Qe,restoreSavedFilters:Ne,saveFiltersToStorage:Oe,setFormEnabled:we,setFormLoading:Fe,showActiveFiltersIndicator:se,showError:ne,showExportProgress:ce,showExportSuccess:de,showFilterStats:le,showFormMessage:fe,showLoading:te,showSearchingState:ie,toggleEventTypeFields:be,updateModalTitle:ye,updateSearchResultsCount:V,validateEventForm:_e,validateFilters:ke},Symbol.toStringTag,{value:"Module"}));class et{constructor(e,t){this.state=e,this.setupEventCardListenersCallback=t,this._cardListenersAttached=!1}async loadEventsData(){if(!this.state.isLoading)try{this.state.isLoading=!0,te(),n.log("📊 Caricamento eventi con filtri:",this.state.filters);const e=await p(this.state.filters,this.state.currentPage);return n.log("🔍 Risultato fetchEventiClinici:",e),X(e),n.log("🎨 renderEventsResponsive completato"),this.setupEventCardListeners(),V(e.eventi.length,e.totalCount,I()),se(I()),await this.updateFilterStats(),n.log("✅ Eventi caricati:",e.eventi.length),e}catch(e){throw n.error("❌ Errore caricamento eventi:",e),ne("Errore nel caricamento degli eventi clinici"),e}finally{this.state.isLoading=!1}}setupEventCardListeners(){this._cardListenersAttached||this.setupEventCardListenersCallback&&(this.setupEventCardListenersCallback(),this._cardListenersAttached=!0)}async changePage(e){e<0||this.state.isLoading||(this.state.currentPage=e,await this.loadEventsData())}async exportEvents(e="csv"){try{ce(!0);const t=await L(e);t&&t.success&&de(t)}catch(t){n.error("❌ Errore export eventi catturato nel DataManager:",t)}finally{ce(!1)}}async updateFilterStats(){try{const e=await B();this.state.filterStats=e,le(e)}catch(e){n.error("❌ Errore aggiornamento statistiche filtri:",e)}}clearCache(){R()}onShowEventDetail(e){}onEditEvent(e){}onDeleteEvent(e){}}function tt(e){const t=document.getElementById(e);t&&(t.style.display="none")}function nt(){tt("patient-search-results"),tt("evento-patient-search-results")}function it(e){const t=e.eventDate?.value||"";let n=null;if(t&&""!==t.trim())try{n=function(e){if(!e)return null;if(e.match(/^\d{4}-\d{2}-\d{2}$/))return e;if(!e.includes("/"))throw new Error("Formato data non valido. Utilizzare il formato gg/mm/aaaa");const t=e.split("/");if(3!==t.length)throw new Error("Formato data non valido. Utilizzare il formato gg/mm/aaaa");const[n,i,a]=t,o=parseInt(n,10),r=parseInt(i,10),s=parseInt(a,10);if(isNaN(o)||isNaN(r)||isNaN(s))throw new Error("Formato data non valido. Utilizzare numeri validi");if(o<1||o>31)throw new Error("Giorno non valido (1-31)");if(r<1||r>12)throw new Error("Mese non valido (1-12)");if(s<1900||s>2100)throw new Error("Anno non valido");const l=new Date(s,r-1,o);if(l.getDate()!==o||l.getMonth()!==r-1||l.getFullYear()!==s)throw new Error("Data non valida (es. 31/02/2025)");return`${a}-${i.padStart(2,"0")}-${n.padStart(2,"0")}`}(t.trim())}catch(i){throw new Error(i.message||"Formato data non valido. Utilizzare il formato gg/mm/aaaa")}return{paziente_id:e.eventPatientId?.value||"",tipo_evento:e.eventType?.value||"",data_evento:n,descrizione:e.eventDescription?.value||"",tipo_intervento:e.interventionType?.value||"",agente_patogeno:e.infectionAgent?.value||""}}class at{constructor(e,t,n){this.state=e,this.setupEventCardListenersCallback=t,this.updateFilterStatsCallback=n}async handlePatientSearchFilter(e,t){try{ie();const n=await z(e,t||"");X(n),this.setupEventCardListenersCallback(),V(n.eventi.length,n.totalCount,I()),se(I())}catch(i){n.error("❌ Errore filtro ricerca pazienti:",i)}finally{ae()}}async handleDateRangeFilter(e){try{ie();const t=e.filterDateFrom?.value||"",n=e.filterDateTo?.value||"",i=await b(t,n);X(i),this.setupEventCardListenersCallback(),V(i.eventi.length,i.totalCount,I()),se(I())}catch(t){n.error("❌ Errore filtro range date:",t),t.message.includes("data di inizio")&&i.error(t.message)}finally{ae()}}async handleEventTypeFilter(e){try{ie();const t=await y(e);X(t),this.setupEventCardListenersCallback(),V(t.eventi.length,t.totalCount,I()),se(I())}catch(t){n.error("❌ Errore applicazione filtro tipo evento:",t)}finally{ae()}}async handlePatientStatusFilter(e){try{ie();const t=await _(e);X(t),this.setupEventCardListenersCallback(),V(t.eventi.length,t.totalCount,I()),se(I())}catch(t){n.error("❌ Errore applicazione filtro stato paziente:",t)}finally{ae()}}async handleCombinedFiltersChange(){try{ie();const e=Re(),t=await w(e);this.state.filters={...this.state.filters,...e},this.state.currentPage=0,X(t),this.setupEventCardListenersCallback(),V(t.eventi.length,t.totalCount,I()),se(I()),await this.updateFilterStatsCallback(),D()}catch(e){n.error("❌ Errore applicazione filtri combinati:",e)}finally{ae()}}async handleSortingChange(e){try{ie();const t=e.filterSortColumn?.value||"data_evento",n=e.filterSortDirection?.value||"desc",i=await F(t,n);this.state.filters.sortColumn=t,this.state.filters.sortDirection=n,X(i),this.setupEventCardListenersCallback(),V(i.eventi.length,i.totalCount,I()),await this.updateFilterStatsCallback(),D()}catch(t){n.error("❌ Errore applicazione ordinamento:",t)}finally{ae()}}async handlePatientSearch(e,t){try{if(!e||e.length<2)return tt(t),void 0;oe(await E(e),t)}catch(i){n.error("❌ Errore ricerca pazienti:",i)}}async resetFilters(){try{ie();const e=await C();Me(),this.state.filters={paziente_search:"",tipo_evento:"",data_da:"",data_a:"",reparto:"",agente_patogeno:"",sortColumn:"data_evento",sortDirection:"desc"},this.state.currentPage=0,this.state.selectedPatientId=null,nt(),X(e),this.setupEventCardListenersCallback(),V(e.eventi.length,e.totalCount,I()),se(I()),await this.updateFilterStatsCallback()}catch(e){n.error("❌ Errore reset filtri:",e)}finally{ae()}}async saveCurrentFilters(){try{await D()}catch(e){n.error("❌ Errore salvataggio filtri:",e)}}async loadSavedFilters(){try{const e=await T();return e&&(this.state.filters={...this.state.filters,...e},Pe(e),n.log("✅ Filtri caricati dallo stato:",e)),e}catch(e){return n.error("❌ Errore caricamento filtri salvati:",e),null}}createPatientSearchHandler(e,t){return Ve(async e=>{const n=e.target.value;n&&n.length>=2?await this.handlePatientSearch(n,"patient-search-results"):tt("patient-search-results"),t&&await t(n)},300)}createDebouncedFilterHandler(e,t=500){return Ve(e,t)}}class ot{constructor(e,t){this.state=e,this.domElements=t,this.eventFormModal=null,this.eventDetailModal=null}waitForModalHidden(e,t=500){return new Promise(n=>{if(!e)return n();const i=()=>{e.removeEventListener("hidden.bs.modal",a),clearTimeout(o),n()},a=()=>i();e.addEventListener("hidden.bs.modal",a,{once:!0});const o=setTimeout(()=>{i()},t)})}ensureSingleModalOpen(){try{const e=Array.from(document.querySelectorAll(".modal-backdrop"));e.length>1&&e.slice(0,-1).forEach(e=>e.parentNode&&e.parentNode.removeChild(e));document.querySelector(".modal.show")?document.body.classList.add("modal-open"):document.body.classList.remove("modal-open")}catch(e){}}async initializeModals(){try{const{Modal:t}=await e(async()=>{const{Modal:e}=await import("./vendor-BU6HxVpN.js");return{Modal:e}},[]),i=this.domElements.eventFormModal,a=this.domElements.eventDetailModal;i&&(this.eventFormModal=new t(i,{backdrop:"static",keyboard:!1}),i.addEventListener("hide.bs.modal",()=>{this._defocus(i)})),a&&(this.eventDetailModal=new t(a),a.addEventListener("hide.bs.modal",()=>{this._defocus(a)})),n.log("✅ Modali inizializzati")}catch(t){n.error("❌ Errore inizializzazione modali:",t)}}openEventModal(t=null){try{he(),Ee(),t?(this.state.editingEventId=t.id,ye("Modifica Evento Clinico","edit"),ge(t)):(this.state.editingEventId=null,ye("Nuovo Evento Clinico","add")),setTimeout(()=>{const t=document.getElementById("evento-data");t&&t._flatpickrInstance?t._flatpickrInstance.redraw():e(async()=>{const{initCustomDatepickers:e}=await import("./CustomDatepicker-6By5cdaM.js");return{initCustomDatepickers:e}},__vite__mapDeps([4,5])).then(({initCustomDatepickers:e})=>{e("[data-datepicker]",{maxDate:"today",allowInput:!0,locale:{firstDayOfWeek:1}})})},100),this.eventFormModal&&this.eventFormModal.show()}catch(a){n.error("❌ Errore apertura modal evento:",a),i.error("Errore nell'apertura del form")}}async handleSaveEvent(e){try{const t=it(this.domElements),n=function(e){const t=[];return e.paziente_id||t.push("Seleziona un paziente"),e.tipo_evento||t.push("Seleziona il tipo di evento"),e.data_evento||t.push("Inserisci la data dell'evento"),"intervento"!==e.tipo_evento||e.tipo_intervento||t.push("Specifica il tipo di intervento"),t.length>0?{isValid:!1,errors:t.join("<br>")}:{isValid:!0,errors:null}}(t);if(!n.isValid)return fe(n.errors),void 0;let o;this.domElements.saveBtn&&(this.domElements.saveBtn.disabled=!0,this.domElements.saveBtn.innerHTML=a('<span class="spinner-border spinner-border-sm me-1"></span>Salvando...')),o=this.state.editingEventId?await u(this.state.editingEventId,t):await v(t),this.eventFormModal&&this.eventFormModal.hide(),e&&await e();i.success(`Evento clinico ${this.state.editingEventId?"aggiornato":"creato"} con successo`)}catch(t){n.error("❌ Errore salvataggio evento:",t),fe(t.message||"Errore nel salvataggio dell'evento")}finally{this.domElements.saveBtn&&(this.domElements.saveBtn.disabled=!1,this.domElements.saveBtn.innerHTML=a('<span class="material-icons me-1" style="vertical-align: middle;">save</span>Salva Evento'))}}async showEventDetail(e){try{const t=(await p({...this.state.filters},0)).eventi.find(t=>t.id===e);if(!t)return i.error("Evento non trovato"),void 0;re(t),this.state.editingEventId=e,this.eventDetailModal&&this.eventDetailModal.show()}catch(t){n.error("❌ Errore visualizzazione dettagli evento:",t)}}async editEvent(e){try{const t=(await p({...this.state.filters},0)).eventi.find(t=>t.id===e);if(!t)return i.error("Evento non trovato"),void 0;const n=this.domElements&&this.domElements.eventDetailModal;this.eventDetailModal&&(this._defocus(n),this.eventDetailModal.hide(),await this.waitForModalHidden(n)),this.openEventModal(t),this.ensureSingleModalOpen()}catch(t){n.error("❌ Errore modifica evento:",t)}}handleEditEvent(){this.state.editingEventId&&this.editEvent(this.state.editingEventId)}async confirmDeleteEvent(t){const{ConfirmModal:n}=await e(async()=>{const{ConfirmModal:e}=await import("./ConfirmModal-COnCVORQ.js");return{ConfirmModal:e}},__vite__mapDeps([6,0,1,2,3])),i=n.forClinicalEventDeletion();await i.show()&&await this.deleteEvent(t)}async handleDeleteEvent(){this.state.editingEventId&&await this.confirmDeleteEvent(this.state.editingEventId)}async deleteEvent(e,t){try{if(await g(e),this.eventDetailModal){this._defocus(this.domElements&&this.domElements.eventDetailModal),this.eventDetailModal.hide()}t&&await t()}catch(i){n.error("❌ Errore eliminazione evento:",i)}}async handleModalPatientSearch(e){try{if(!e||e.length<2)return tt("evento-patient-search-results"),void 0;oe(await f(e),"evento-patient-search-results")}catch(t){n.error("❌ Errore ricerca pazienti modal:",t)}}createModalPatientSearchHandler(){return Ve(e=>this.handleModalPatientSearch(e.target.value),300)}cleanup(){if(this.eventFormModal&&(this.eventFormModal.hide(),this.eventFormModal=null),this.eventDetailModal){this._defocus(this.domElements&&this.domElements.eventDetailModal),this.eventDetailModal.hide(),this.eventDetailModal=null}}}ot.prototype._defocus=function(e){try{const t=document.activeElement;e&&t&&e.contains(t)&&"function"==typeof t.blur&&t.blur()}catch{}};class rt{constructor(e,t,n,i,a){this.state=e,this.domElements=t,this.filterManager=n,this.modalManager=i,this.dataManager=a,this.cleanupFunctions=[]}async setupEventListeners(){this.setupMainActionListeners(),this.setupFilterListeners(),this.setupPaginationListeners(),this.setupModalFormListeners(),this.setupSearchListeners(),await this.setupWindowListeners(),n.log("✅ Event listeners configurati")}setupMainActionListeners(){if(this.domElements.addEventBtn){const e=()=>this.modalManager.openEventModal();this.domElements.addEventBtn.addEventListener("click",e),this.cleanupFunctions.push(()=>this.domElements.addEventBtn.removeEventListener("click",e))}if(this.domElements.resetFiltersBtn){const e=()=>this.filterManager.resetFilters();this.domElements.resetFiltersBtn.addEventListener("click",e),this.cleanupFunctions.push(()=>this.domElements.resetFiltersBtn.removeEventListener("click",e))}if(this.domElements.exportBtn){const e=()=>this.dataManager.exportEvents("csv");this.domElements.exportBtn.addEventListener("click",e),this.cleanupFunctions.push(()=>this.domElements.exportBtn.removeEventListener("click",e))}if(this.domElements.exportCsvBtn){const e=()=>this.dataManager.exportEvents("csv");this.domElements.exportCsvBtn.addEventListener("click",e),this.cleanupFunctions.push(()=>this.domElements.exportCsvBtn.removeEventListener("click",e))}if(this.domElements.exportJsonBtn){const e=()=>this.dataManager.exportEvents("json");this.domElements.exportJsonBtn.addEventListener("click",e),this.cleanupFunctions.push(()=>this.domElements.exportJsonBtn.removeEventListener("click",e))}if(this.domElements.saveFiltersBtn){const e=()=>this.filterManager.saveCurrentFilters();this.domElements.saveFiltersBtn.addEventListener("click",e),this.cleanupFunctions.push(()=>this.domElements.saveFiltersBtn.removeEventListener("click",e))}if(this.domElements.loadFiltersBtn){const e=()=>this.filterManager.loadSavedFilters();this.domElements.loadFiltersBtn.addEventListener("click",e),this.cleanupFunctions.push(()=>this.domElements.loadFiltersBtn.removeEventListener("click",e))}}setupFilterListeners(){if(this.domElements.filterType){const e=async()=>{await this.filterManager.handleEventTypeFilter(this.domElements.filterType.value)};this.domElements.filterType.addEventListener("change",e),this.cleanupFunctions.push(()=>this.domElements.filterType.removeEventListener("change",e))}if(this.domElements.filterDateFrom){const e=this.filterManager.createDebouncedFilterHandler(async()=>{await this.filterManager.handleDateRangeFilter(this.domElements)},500);this.domElements.filterDateFrom.addEventListener("change",e),this.cleanupFunctions.push(()=>this.domElements.filterDateFrom.removeEventListener("change",e))}if(this.domElements.filterDateTo){const e=this.filterManager.createDebouncedFilterHandler(async()=>{await this.filterManager.handleDateRangeFilter(this.domElements)},500);this.domElements.filterDateTo.addEventListener("change",e),this.cleanupFunctions.push(()=>this.domElements.filterDateTo.removeEventListener("change",e))}if(this.domElements.filterReparto){const e=async()=>{await this.filterManager.handleCombinedFiltersChange()};this.domElements.filterReparto.addEventListener("change",e),this.cleanupFunctions.push(()=>this.domElements.filterReparto.removeEventListener("change",e))}if(this.domElements.filterStato){const e=async()=>{await this.filterManager.handlePatientStatusFilter(this.domElements.filterStato.value)};this.domElements.filterStato.addEventListener("change",e),this.cleanupFunctions.push(()=>this.domElements.filterStato.removeEventListener("change",e))}if(this.domElements.filterTipoIntervento){const e=this.filterManager.createDebouncedFilterHandler(async()=>{await this.filterManager.handleCombinedFiltersChange()},500);this.domElements.filterTipoIntervento.addEventListener("input",e),this.cleanupFunctions.push(()=>this.domElements.filterTipoIntervento.removeEventListener("input",e))}if(this.domElements.filterSortColumn){const e=async()=>{await this.filterManager.handleSortingChange(this.domElements)};this.domElements.filterSortColumn.addEventListener("change",e),this.cleanupFunctions.push(()=>this.domElements.filterSortColumn.removeEventListener("change",e))}if(this.domElements.filterSortDirection){const e=async()=>{await this.filterManager.handleSortingChange(this.domElements)};this.domElements.filterSortDirection.addEventListener("change",e),this.cleanupFunctions.push(()=>this.domElements.filterSortDirection.removeEventListener("change",e))}this.setupAdvancedFiltersToggle()}setupAdvancedFiltersToggle(){if(this.domElements.advancedFiltersToggle&&this.domElements.advancedFiltersContainer){const e=e=>{e.preventDefault(),e.stopPropagation();const t=this.domElements.advancedFiltersContainer.classList.contains("show");t?(this.domElements.advancedFiltersContainer.classList.remove("show"),this.domElements.advancedFiltersToggle.setAttribute("aria-expanded","false")):(this.domElements.advancedFiltersContainer.classList.add("show"),this.domElements.advancedFiltersToggle.setAttribute("aria-expanded","true"));const i=this.domElements.advancedFiltersToggle.querySelector(".material-icons");i&&(i.style.transform=t?"rotate(0deg)":"rotate(180deg)"),n.log("🔧 Filtri avanzati "+(t?"chiusi":"aperti"))};this.domElements.advancedFiltersToggle.removeAttribute("data-bs-toggle"),this.domElements.advancedFiltersToggle.removeAttribute("data-bs-target"),this.domElements.advancedFiltersToggle.addEventListener("click",e),this.cleanupFunctions.push(()=>this.domElements.advancedFiltersToggle.removeEventListener("click",e))}}setupPaginationListeners(){if(this.domElements.prevPageBtn){const e=()=>this.dataManager.changePage(this.state.currentPage-1);this.domElements.prevPageBtn.addEventListener("click",e),this.cleanupFunctions.push(()=>this.domElements.prevPageBtn.removeEventListener("click",e))}if(this.domElements.nextPageBtn){const e=()=>this.dataManager.changePage(this.state.currentPage+1);this.domElements.nextPageBtn.addEventListener("click",e),this.cleanupFunctions.push(()=>this.domElements.nextPageBtn.removeEventListener("click",e))}}setupModalFormListeners(){if(this.domElements.saveBtn){const e=()=>this.modalManager.handleSaveEvent(()=>this.dataManager.loadEventsData());this.domElements.saveBtn.addEventListener("click",e),this.cleanupFunctions.push(()=>this.domElements.saveBtn.removeEventListener("click",e))}if(this.domElements.eventType){const e=e=>be(e.target.value);this.domElements.eventType.addEventListener("change",e),this.cleanupFunctions.push(()=>this.domElements.eventType.removeEventListener("change",e))}if(this.domElements.editBtn){const e=()=>this.modalManager.handleEditEvent();this.domElements.editBtn.addEventListener("click",e),this.cleanupFunctions.push(()=>this.domElements.editBtn.removeEventListener("click",e))}if(this.domElements.deleteBtn){const e=()=>this.modalManager.handleDeleteEvent();this.domElements.deleteBtn.addEventListener("click",e),this.cleanupFunctions.push(()=>this.domElements.deleteBtn.removeEventListener("click",e))}}setupSearchListeners(){if(this.domElements.searchPatientInput&&this.domElements.patientSearchResults){const{destroy:e}=l({input:this.domElements.searchPatientInput,resultsContainer:this.domElements.patientSearchResults,activeOnly:!0,onSelect:e=>this.filterManager.handlePatientSearchFilter(this.domElements.searchPatientInput.value,e?.id)});this.cleanupFunctions.push(()=>e&&e())}if(this.domElements.eventPatientInput&&this.domElements.eventPatientSearchResults){const{destroy:e}=l({input:this.domElements.eventPatientInput,resultsContainer:this.domElements.eventPatientSearchResults,activeOnly:!0,onSelect:e=>{this.domElements.eventPatientId&&(this.domElements.eventPatientId.value=e.id)}});this.cleanupFunctions.push(()=>e&&e())}const e=e=>{e.target.closest(".position-relative")||nt()};document.addEventListener("click",e),this.cleanupFunctions.push(()=>document.removeEventListener("click",e))}async setupWindowListeners(){const{applyResponsiveDesign:t}=await e(async()=>{const{applyResponsiveDesign:e}=await Promise.resolve().then(()=>Ze);return{applyResponsiveDesign:e}},void 0),n=()=>t();window.addEventListener("resize",n),this.cleanupFunctions.push(()=>window.removeEventListener("resize",n))}initializeAdvancedFiltersState(){if(this.domElements.advancedFiltersToggle&&this.domElements.advancedFiltersContainer){this.domElements.advancedFiltersContainer.classList.remove("show"),this.domElements.advancedFiltersToggle.setAttribute("aria-expanded","false");const e=this.domElements.advancedFiltersToggle.querySelector(".material-icons");e&&(e.style.transform="rotate(0deg)",e.style.transition="transform 0.3s ease"),n.log("✅ Stato iniziale filtri avanzati impostato (nascosti)")}}cleanup(){n.log("🧹 Cleanup event listeners"),this.cleanupFunctions.forEach(e=>{try{e()}catch(t){n.error("❌ Errore durante cleanup listener:",t)}}),this.cleanupFunctions=[]}}let st={currentPage:0,filters:{paziente_search:"",tipo_evento:"",data_da:"",data_a:"",reparto:"",stato:"",sortColumn:"",sortDirection:"desc"},selectedPatientId:null,editingEventId:null,isLoading:!1,filterStats:null},lt={},ct=null,dt=null,mt=null,pt=null,vt=null,ut=null;async function gt(t){try{n.log("🚀 Inizializzazione vista eventi clinici"),n.log("📝 Step 1: Inizializzazione DOM elements"),await async function(e=5,t=100){for(let a=0;a<e;a++)try{const i=["eventi-timeline-container","eventi-add-btn","eventi-reset-filters-btn"].filter(e=>!document.getElementById(e));if(0===i.length)return n.log(`✅ Tutti gli elementi DOM critici trovati al tentativo ${a+1}`),Ye(),void 0;n.log(`⚠️ Tentativo ${a+1}: elementi DOM mancanti:`,i),a<e-1&&await new Promise(e=>setTimeout(e,t))}catch(i){n.error(`❌ Errore tentativo ${a+1} inizializzazione DOM:`,i),a<e-1&&await new Promise(e=>setTimeout(e,t))}throw n.error("❌ Impossibile trovare tutti gli elementi DOM critici dopo",e,"tentativi"),new Error("Template DOM non completamente caricato")}(),lt=Ke(),n.log("✅ DOM elements inizializzati"),n.log("📝 Step 2: Inizializzazione managers"),await async function(){try{const t=()=>{vt||(vt=async t=>{const i=t.target.closest&&t.target.closest(".event-detail-btn"),a=t.target.closest&&t.target.closest(".event-edit-btn"),o=t.target.closest&&t.target.closest(".event-delete-btn"),r=t.target.closest&&t.target.closest(".event-resolve-btn");if(!(i||a||o||r))return;t.stopPropagation();const s=i||a||o||r,l=s&&s.dataset&&s.dataset.eventoId;if(l)try{const t=document.getElementById("eventi-azioni-modal");if(t)try{const{Modal:n}=await e(async()=>{const{Modal:e}=await import("./vendor-BU6HxVpN.js");return{Modal:e}},[]);(n.getInstance(t)||n.getOrCreateInstance(t)).hide(),await new Promise(e=>{let n=!1;const i=setTimeout(()=>{n||(n=!0,e())},250);t.addEventListener("hidden.bs.modal",()=>{n||(n=!0,clearTimeout(i),e())},{once:!0})})}catch{t.classList.remove("show"),t.style.display="none",document.querySelectorAll(".modal-backdrop").forEach(e=>e.parentNode&&e.parentNode.removeChild(e)),document.body.classList.remove("modal-open")}if(i)return mt.showEventDetail(l),void 0;if(a)return mt.editEvent(l),void 0;if(o)return mt.confirmDeleteEvent(l),void 0;if(r){const{ResolveInfectionModal:t}=await e(async()=>{const{ResolveInfectionModal:e}=await import("./ResolveInfectionModal-ujyIfGD2.js");return{ResolveInfectionModal:e}},__vite__mapDeps([7,0,1,2,3,4,5])),n=new t({eventoId:l}),i=await n.show();return i&&(await h(l,i),await ct.loadEventsData()),void 0}}catch(c){n.error("Errore gestione azione evento:",c)}},document.addEventListener("click",vt),ut=()=>{try{document.removeEventListener("click",vt)}catch(e){n.warn("Listener di delega non rimosso (forse già rimosso)",e)}vt=null,ut=null})};ct=new et(st,t),dt=new at(st,t,()=>ct.updateFilterStats()),mt=new ot(st,lt),await mt.initializeModals(),pt=new rt(st,lt,dt,mt,ct),n.log("✅ Manager inizializzati")}catch(t){n.error("❌ Errore inizializzazione manager:",t)}}(),n.log("✅ Managers inizializzati"),n.log("� Stepi 3: Inizializzazione form components"),function(){try{r(),s("[data-datepicker]"),n.log("✅ Componenti form inizializzati")}catch(e){n.error("❌ Errore inizializzazione componenti form:",e)}}(),n.log("✅ Form components inizializzati"),n.log("📝 Step 4: Setup event handlers"),await async function(){try{await pt.setupEventListeners(),pt.initializeAdvancedFiltersState(),n.log("✅ Event handlers configurati")}catch(e){n.error("❌ Errore setup event handlers:",e)}}(),n.log("✅ Event handlers configurati"),n.log("📝 Step 5: Caricamento filtri suggeriti"),await async function(){try{await new Promise(e=>setTimeout(e,100));const[e,t]=await Promise.all([P(),M()]);n.log("🔧 Popolamento filtri con:",{reparti:t.length,tipiIntervento:e.tipiIntervento?.length||0,agentiPatogeni:e.agentiPatogeni?.length||0}),await $e(t),await xe(e),setTimeout(()=>{document.querySelectorAll('select[data-custom="true"]').forEach(e=>{n.log("🔧 Checking CustomSelect:",e.id,"has instance?",!!e._customSelect);const t=e.customSelectInstance||e._customSelect;t&&("function"==typeof t.updateOptions?(n.log("🔧 Updating CustomSelect options:",e.id),t.updateOptions()):"function"==typeof t.refresh&&(n.log("🔧 Refreshing CustomSelect:",e.id),t.refresh()))})},50),setTimeout(()=>{const e=document.getElementById("eventi-filter-reparto");if(e){const t=e.customSelectInstance||e._customSelect;t&&(n.log("🔧 Final update/refresh of reparto CustomSelect"),"function"==typeof t.updateOptions?t.updateOptions():"function"==typeof t.refresh&&t.refresh())}},500),n.log("✅ Suggerimenti filtri caricati:",{suggestions:e,reparti:t.length})}catch(e){n.error("❌ Errore caricamento suggerimenti filtri:",e)}}(),n.log("✅ Filtri suggeriti caricati"),n.log("📝 Step 6: Reset filtri"),S(),Me(),n.log("✅ Filtri resettati"),n.log("📝 Step 7: Caricamento dati iniziali");try{n.log("🧪 Test caricamento diretto...");const{fetchEventiClinici:t}=await e(async()=>{const{fetchEventiClinici:e}=await Promise.resolve().then(()=>U);return{fetchEventiClinici:e}},void 0),i=await t({},0);n.log("🧪 Test result:",i);const a=await ct.loadEventsData();n.log("✅ Dati iniziali caricati:",a)}catch(i){throw n.error("❌ ERRORE caricamento dati iniziali:",i),i}return n.log("📝 Step 8: Applicazione responsive design"),Xe(),n.log("✅ Responsive design applicato"),n.log("📝 Step 9: Gestione parametri URL"),function(e){if(!e)return;const t=e.get("patient");t&&(st.selectedPatientId=t,st.filters.paziente_search=t);const n=e.get("type");n&&lt.filterType&&(lt.filterType.value=n,st.filters.tipo_evento=n)}(t),n.log("✅ Parametri URL gestiti"),n.log("✅ Vista eventi clinici inizializzata con successo"),ht}catch(i){n.error("💥 ERRORE CRITICO inizializzazione vista eventi clinici:",i);try{ne("Errore nel caricamento della vista eventi clinici. Ricaricare la pagina.")}catch(a){n.error("❌ Impossibile mostrare errore UI:",a),alert("Errore critico nel caricamento. Ricaricare la pagina.")}throw i}}function ht(){if(n.log("🧹 Cleanup vista eventi clinici"),pt&&"function"==typeof pt.cleanup&&pt.cleanup(),mt&&"function"==typeof mt.cleanup&&mt.cleanup(),ct&&"function"==typeof ct.clearCache&&ct.clearCache(),ut)try{ut()}catch(e){n.warn("⚠️ Errore durante la rimozione del listener di delega:",e)}try{Qe()}catch(e){n.warn("⚠️ Errore durante resetUIState:",e)}st={currentPage:0,filters:{paziente_search:"",tipo_evento:"",data_da:"",data_a:"",reparto:"",stato:"",agente_patogeno:"",sortColumn:"data_evento",sortDirection:"desc"},selectedPatientId:null,editingEventId:null,isLoading:!1,filterStats:null},ct=null,dt=null,mt=null,pt=null,vt=null,ut=null,lt={},n.log("✅ Cleanup completato")}export{gt as initEventiCliniciView};
