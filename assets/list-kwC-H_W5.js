const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/ConfirmModal-5fYD63px.js","assets/index-CeCqGCeL.js","assets/vendor-CQCqr9ER.js","assets/supabase-86D3GPeZ.js","assets/index-xgUwbwjk.css"])))=>i.map(i=>d[i]);
import{_ as t}from"./supabase-86D3GPeZ.js";import{c as e,d as n,l as i,s as a,a as s,e as o,b as r,n as l}from"./index-CeCqGCeL.js";import{P as c,p as d}from"./patientService-DecWM_V_.js";import{f as p}from"./infectionDataManager-BoGGXPoA.js";import{g as u}from"./post-operative-calculator-C3z7C_vm.js";import{i as m}from"./CustomSelect-BdnvDTkd.js";import{g as b,p as v}from"./helpers-BwGUI7Gj.js";import"./vendor-CQCqr9ER.js";class g{constructor(t,e={}){this.patient=t,this.options={isMobile:!1,isTable:!1,...e}}render(){const t=this.patient.data_dimissione;return this.options.isTable?this.renderTableButtons(t):this.options.isMobile?this.renderMobileButtons(t):this.renderDesktopButtons(t)}renderTableButtons(t){return`\n            <button class="btn btn-sm btn-outline-primary action-btn-sm me-1" \n                    data-action="edit" \n                    data-id="${this.patient.id}" \n                    title="Modifica"\n                    aria-label="Modifica paziente ${this.patient.nome} ${this.patient.cognome}">\n                <span class="material-icons" aria-hidden="true">edit</span>\n            </button>\n            ${t?`<button class="btn btn-sm btn-outline-success action-btn-sm" \n                       data-action="riattiva" \n                       data-id="${this.patient.id}" \n                       title="Riattiva Paziente"\n                       aria-label="Riattiva paziente ${this.patient.nome} ${this.patient.cognome}">\n                 <span class="material-icons" aria-hidden="true">undo</span>\n               </button>`:`<button class="btn btn-sm btn-outline-warning action-btn-sm" \n                       data-action="dimetti" \n                       data-id="${this.patient.id}" \n                       title="Dimetti Paziente"\n                       aria-label="Dimetti paziente ${this.patient.nome} ${this.patient.cognome}">\n                 <span class="material-icons" aria-hidden="true">event_available</span>\n               </button>`}\n            <button class="btn btn-sm btn-outline-danger action-btn-sm ms-1" \n                    data-action="delete" \n                    data-id="${this.patient.id}" \n                    title="Elimina"\n                    aria-label="Elimina paziente ${this.patient.nome} ${this.patient.cognome}">\n                <span class="material-icons" aria-hidden="true">delete</span>\n            </button>\n        `}renderMobileButtons(t){return`\n            <button class="btn btn-outline-primary mobile-action-btn-standard" \n                    data-action="edit" \n                    data-id="${this.patient.id}" \n                    title="Modifica"\n                    aria-label="Modifica paziente ${this.patient.nome} ${this.patient.cognome}">\n                <span class="material-icons" aria-hidden="true">edit</span>\n                <span class="mobile-btn-text">Modifica</span>\n            </button>\n            ${t?`<button class="btn btn-outline-success mobile-action-btn-standard" \n                       data-action="riattiva" \n                       data-id="${this.patient.id}" \n                       title="Riattiva"\n                       aria-label="Riattiva paziente ${this.patient.nome} ${this.patient.cognome}">\n                 <span class="material-icons" aria-hidden="true">undo</span>\n                 <span class="mobile-btn-text">Riattiva</span>\n               </button>`:`<button class="btn btn-outline-warning mobile-action-btn-standard" \n                       data-action="dimetti" \n                       data-id="${this.patient.id}" \n                       title="Dimetti"\n                       aria-label="Dimetti paziente ${this.patient.nome} ${this.patient.cognome}">\n                 <span class="material-icons" aria-hidden="true">event_available</span>\n                 <span class="mobile-btn-text">Dimetti</span>\n               </button>`}\n            <button class="btn btn-outline-danger mobile-action-btn-standard" \n                    data-action="delete" \n                    data-id="${this.patient.id}" \n                    title="Elimina"\n                    aria-label="Elimina paziente ${this.patient.nome} ${this.patient.cognome}">\n                <span class="material-icons" aria-hidden="true">delete</span>\n                <span class="mobile-btn-text">Elimina</span>\n            </button>\n        `}renderDesktopButtons(t){return`\n            <button class="btn btn-outline-primary action-btn-standard" \n                    data-action="edit" \n                    data-id="${this.patient.id}"\n                    title="Modifica Paziente"\n                    aria-label="Modifica paziente ${this.patient.nome} ${this.patient.cognome}">\n                <span class="material-icons" aria-hidden="true">edit</span>Modifica\n            </button>\n            ${t?`<button class="btn btn-outline-success action-btn-standard" \n                       data-action="riattiva" \n                       data-id="${this.patient.id}" \n                       title="Riattiva Paziente"\n                       aria-label="Riattiva paziente ${this.patient.nome} ${this.patient.cognome}">\n                 <span class="material-icons" aria-hidden="true">undo</span>Riattiva\n               </button>`:`<button class="btn btn-outline-warning action-btn-standard" \n                       data-action="dimetti" \n                       data-id="${this.patient.id}" \n                       title="Dimetti Paziente"\n                       aria-label="Dimetti paziente ${this.patient.nome} ${this.patient.cognome}">\n                 <span class="material-icons" aria-hidden="true">event_available</span>Dimetti\n               </button>`}\n            <button class="btn btn-outline-danger action-btn-standard" \n                    data-action="delete" \n                    data-id="${this.patient.id}"\n                    title="Elimina Paziente"\n                    aria-label="Elimina paziente ${this.patient.nome} ${this.patient.cognome}">\n                <span class="material-icons" aria-hidden="true">delete</span>Elimina\n            </button>\n        `}}class f{constructor(t){this.patient=t}render(){return this.patient.data_dimissione?"decesso"===this.patient.tipo_dimissione?'<span class="badge bg-dark">Decesso</span>':'<span class="badge bg-secondary">Dimesso</span>':'<span class="badge bg-success">Attivo</span>'}renderForCard(){const t=this.patient.data_dimissione,e=t&&"decesso"===this.patient.tipo_dimissione;return`<span class="patient-status ${e?"decesso":t?"dimesso":"attivo"}">${e?"Decesso":t?"Dimesso":"Attivo"}</span>`}getStatusClass(){return this.patient.data_dimissione?"decesso"===this.patient.tipo_dimissione?"decesso":"dimesso":"attivo"}getStatusText(){return this.patient.data_dimissione?"decesso"===this.patient.tipo_dimissione?"Decesso":"Dimesso":"Attivo"}}class h{constructor(t,e={}){this.patient=t,this.options={isMobile:window.innerWidth<=767,showActions:!0,showClinicalEvents:!1,showPostOperativeDays:!0,...e}}render(){const t=this.patient.data_dimissione?"error":"success",n=e.profile?.role,i="admin"===n||"editor"===n;return this.options.isMobile?this.renderMobileCard(t,i):this.renderDesktopCard(t,i)}getLastInterventionDate(){if(!this.patient.eventi_clinici||0===this.patient.eventi_clinici.length)return null;const t=this.patient.eventi_clinici.filter(t=>"intervento"===t.tipo_evento).sort((t,e)=>new Date(e.data_evento)-new Date(t.data_evento));return t.length>0?new Date(t[0].data_evento).toLocaleDateString():null}isPatientInfected(){return!0===this.patient.infetto||"true"===this.patient.infetto}renderMobileCard(t,e){const n=this.options.showActions&&e?new g(this.patient,{isMobile:!0}).render():"",i=this.options.showPostOperativeDays&&this.patient.eventi_clinici?u(this.patient.eventi_clinici):null,a=i&&i.hasStatus?`<span class="badge bg-${i.statusClass} ms-1" style="font-size: 0.7em;">${i.badgeText}</span>`:"",s=this.getLastInterventionDate(),o=this.isPatientInfected(),r=o?'<span class="badge bg-warning text-dark ms-1" style="font-size: 0.7em;">\n                 <span class="material-icons" style="font-size: 0.6em;">warning</span> Infetto\n               </span>':"",l=[];i&&i.hasStatus&&l.push(i.statusText),s&&l.push(`Intervento: ${s}`);const c=this.options.showClinicalEvents&&e?this.renderMobileQuickActions():"";return`\n            <div class="card ${o?"card-list-compact status-infected":"card-list-compact"} status-${t}">\n                <div class="card-body">\n                    <div class="card-info">\n                        <div class="card-title d-flex align-items-center gap-2">\n                            <span class="material-icons text-primary" style="font-size:1.4em;">person</span>\n                            <span class="fw-bold">${this.patient.cognome} ${this.patient.nome}</span>\n                            ${a}${r}\n                        </div>\n                        <div class="card-meta mobile-text-sm">\n                            ${this.patient.diagnosi} • ${this.patient.reparto_appartenenza}\n                            ${l.length>0?` • ${l.join(" • ")}`:""}\n                        </div>\n                    </div>\n                    <div class="mobile-actions-container">\n                        ${n?`<div class="mobile-primary-actions">${n}</div>`:""}\n                        ${c}\n                    </div>\n                </div>\n            </div>\n        `}renderMobileQuickActions(){return`\n            <div class="mobile-quick-actions mt-2">\n                <div class="mobile-clinical-actions">\n                    <button type="button" class="btn btn-outline-primary mobile-clinical-btn btn-add-intervention" \n                            data-patient-id="${this.patient.id}" \n                            title="Aggiungi Intervento">\n                        <span class="material-icons">medical_services</span>\n                        <span class="mobile-clinical-text">Intervento</span>\n                    </button>\n                    <button type="button" class="btn btn-outline-warning mobile-clinical-btn btn-add-infection" \n                            data-patient-id="${this.patient.id}" \n                            title="Aggiungi Infezione">\n                        <span class="material-icons">warning</span>\n                        <span class="mobile-clinical-text">Infezione</span>\n                    </button>\n                    <button type="button" class="btn btn-outline-info mobile-clinical-btn btn-view-events" \n                            data-patient-id="${this.patient.id}" \n                            title="Timeline Eventi">\n                        <span class="material-icons">timeline</span>\n                        <span class="mobile-clinical-text">Timeline</span>\n                    </button>\n                </div>\n            </div>\n        `}renderDesktopCard(t,e){const n=new f(this.patient).renderForCard(),i=this.options.showActions&&e?new g(this.patient,{isMobile:!1}).render():"",a=this.options.showPostOperativeDays&&this.patient.eventi_clinici?u(this.patient.eventi_clinici):null,s=a&&a.hasStatus?`<span class="badge bg-${a.statusClass} ms-2" title="${a.statusText}">${a.badgeText}</span>`:"",o=this.isPatientInfected(),r=o?'<span class="badge bg-warning text-dark ms-2" title="Paziente infetto">\n                 <span class="material-icons" style="font-size: 0.8em;">warning</span> Infetto\n               </span>':"",l=this.options.showClinicalEvents&&this.patient.eventi_clinici?this.renderClinicalEventsTimeline():"",c=this.options.showClinicalEvents&&e?this.renderQuickActions():"";return`\n            <div class="${o?"patient-card patient-card-infected":"patient-card"}">\n                <div class="patient-card-header d-flex align-items-center gap-2">\n                    <span class="material-icons text-primary" style="font-size:1.7em;">person</span>\n                    <h6 class="patient-name fw-bold mb-0">${this.patient.cognome} ${this.patient.nome}</h6>\n                    ${s}${r}\n                    <span class="flex-grow-1"></span>\n                    ${n}\n                </div>\n                <div class="patient-details">\n                    <div class="patient-detail">\n                        <span class="patient-detail-label">Data Ricovero</span>\n                        <span class="patient-detail-value">${p(this.patient.data_ricovero)}</span>\n                    </div>\n                    <div class="patient-detail">\n                        <span class="patient-detail-label">Diagnosi</span>\n                        <span class="patient-detail-value">${this.patient.diagnosi}</span>\n                    </div>\n                    <div class="patient-detail">\n                        <span class="patient-detail-label">Reparto</span>\n                        <span class="patient-detail-value">${this.patient.reparto_appartenenza}</span>\n                    </div>\n                    <div class="patient-detail">\n                        <span class="patient-detail-label">Livello</span>\n                        <span class="patient-detail-value">${this.patient.livello_assistenza}</span>\n                    </div>\n                    ${o?'\n                    <div class="patient-detail">\n                        <span class="patient-detail-label">Stato Infezione</span>\n                        <span class="patient-detail-value text-warning fw-bold">\n                            <span class="material-icons" style="font-size: 1em; vertical-align: middle;">warning</span>\n                            Paziente Infetto\n                        </span>\n                    </div>\n                    ':""}\n                    ${a&&a.hasStatus?`\n                    <div class="patient-detail">\n                        <span class="patient-detail-label">Post-Operatorio</span>\n                        <span class="patient-detail-value">${a.statusText}</span>\n                    </div>\n                    `:""}\n                </div>\n                ${l}\n                ${c}\n                ${i?`<div class="patient-actions">${i}</div>`:""}\n            </div>\n        `}getTransferInfo(){if(!this.patient.data_dimissione||!this.patient.tipo_dimissione)return"-";switch(this.patient.tipo_dimissione){case"trasferimento_interno":return this.patient.reparto_destinazione?`<small class="text-info"><strong>→ ${this.patient.reparto_destinazione}</strong></small>`:'<small class="text-muted">Interno</small>';case"trasferimento_esterno":let t='<small class="text-warning"><strong>Esterno</strong>';if(this.patient.clinica_destinazione&&(t+=`<br>→ ${this.patient.clinica_destinazione}`),this.patient.codice_clinica){t+=`<br>(${"56"===this.patient.codice_clinica?"Riab. Motoria":"60"===this.patient.codice_clinica?"Lunga Degenza":`Cod. ${this.patient.codice_clinica}`})`}return t+="</small>",t;default:return'<small class="text-muted">-</small>'}}renderTableRow(){const t=new f(this.patient).render(),n=e.profile?.role,i=this.options.showActions&&("admin"===n||"editor"===n)?new g(this.patient,{isTable:!0}).render():"",a=this.options.showPostOperativeDays&&this.patient.eventi_clinici?u(this.patient.eventi_clinici):null,s=a&&a.hasStatus?`<span class="badge bg-${a.statusClass}" title="${a.statusText}">${a.badgeText}</span>`:"-",o=this.getTransferInfo(),r=this.isPatientInfected(),l=r?'<span class="badge bg-warning text-dark ms-1" title="Paziente infetto">\n                 <span class="material-icons" style="font-size: 0.8em;">warning</span> Infetto\n               </span>':"";return`\n            <tr class="${r?"table-warning":""}">\n                <td data-label="Cognome">${this.patient.cognome}</td>\n                <td data-label="Nome">${this.patient.nome}</td>\n                <td data-label="Data Nascita">${this.patient.data_nascita?p(this.patient.data_nascita):"-"}</td>\n                <td data-label="Data Ricovero">${p(this.patient.data_ricovero)}</td>\n                <td data-label="Diagnosi">${this.patient.diagnosi}</td>\n                <td data-label="Reparto">${this.patient.reparto_appartenenza}</td>\n                <td data-label="Post-Op">${s}</td>\n                <td data-label="Stato">${t}${l}</td>\n                <td data-label="Trasferimento">${o}</td>\n                <td class="text-nowrap">\n                    ${i}\n                </td>\n            </tr>\n        `}renderClinicalEventsTimeline(){if(!this.patient.eventi_clinici||0===this.patient.eventi_clinici.length)return'\n                <div class="clinical-events-section mt-3">\n                    <h6 class="clinical-events-title">Eventi Clinici</h6>\n                    <p class="text-muted small">Nessun evento clinico registrato</p>\n                </div>\n            ';const t=[...this.patient.eventi_clinici].sort((t,e)=>new Date(e.data_evento)-new Date(t.data_evento));return`\n            <div class="clinical-events-section mt-3">\n                <h6 class="clinical-events-title">Eventi Clinici Recenti</h6>\n                <div class="clinical-events-timeline">\n                    ${t.slice(0,3).map(t=>{const e=new Date(t.data_evento).toLocaleDateString();return`\n                <div class="clinical-event-item d-flex align-items-center mb-2">\n                    <span class="material-icons ${"intervento"===t.tipo_evento?"text-primary":"text-warning"} me-2" style="font-size: 16px;">${"intervento"===t.tipo_evento?"medical_services":"warning"}</span>\n                    <div class="flex-grow-1">\n                        <div class="event-type small fw-bold">${"intervento"===t.tipo_evento?"Intervento":"Infezione"}</div>\n                        <div class="event-details small text-muted">\n                            ${e} - ${t.tipo_intervento||t.agente_patogeno||"N/A"}\n                        </div>\n                    </div>\n                </div>\n            `}).join("")}\n                </div>\n                ${t.length>3?`<a href="#eventi-clinici?paziente=${this.patient.id}" class="small text-primary">Vedi tutti (${t.length})</a>`:""}\n            </div>\n        `}renderQuickActions(){return`\n            <div class="quick-actions-section mt-3">\n                <div class="btn-group btn-group-sm" role="group">\n                    <button type="button" class="btn btn-outline-primary btn-add-intervention" \n                            data-patient-id="${this.patient.id}" \n                            title="Aggiungi Intervento">\n                        <span class="material-icons" style="font-size: 14px;">medical_services</span>\n                        Intervento\n                    </button>\n                    <button type="button" class="btn btn-outline-warning btn-add-infection" \n                            data-patient-id="${this.patient.id}" \n                            title="Aggiungi Infezione">\n                        <span class="material-icons" style="font-size: 14px;">warning</span>\n                        Infezione\n                    </button>\n                    <button type="button" class="btn btn-outline-info btn-view-events" \n                            data-patient-id="${this.patient.id}" \n                            title="Vedi tutti gli eventi">\n                        <span class="material-icons" style="font-size: 14px;">timeline</span>\n                        Timeline\n                    </button>\n                </div>\n            </div>\n        `}}const y={};function $(){const t={reparto:y.repartoFilter?.value||"",diagnosi:y.diagnosiFilter?.value||"",stato:y.statoFilter?.value||"",infetto:y.infettoFilter?.value||"",trasferimento:y.trasferimentoFilter?.value||"",search:y.searchInput?.value||"",page:n.getFilters().page||0,sortColumn:n.getFilters().sortColumn||"data_ricovero",sortDirection:n.getFilters().sortDirection||"desc"};n.updateFilters(t)}function z(){return n.getFilters()}function w(t){!function(t,e){const i=n.getFilters();n.updateFilters({...i,[t]:e})}("page",t)}function E(t,e){n.updateFilters({...n.getFilters(),sortColumn:t,sortDirection:e})}function B(){const t=n.getFilters();return{column:t.sortColumn||"data_ricovero",direction:t.sortDirection||"desc"}}const x={get currentPage(){return n.getFilters().page||0},set currentPage(t){w(t)},get sortColumn(){return B().column},set sortColumn(t){E(t,B().direction)},get sortDirection(){return B().direction},set sortDirection(t){E(B().column,t)}};async function C(){i.log("📊 Iniziando fetchPazienti..."),i.log("📊 Stato corrente:",{currentPage:x.currentPage,sortColumn:x.sortColumn,sortDirection:x.sortDirection});const t=z(),e=x.currentPage||0;i.log("📊 Preparazione richiesta a patientService.getPatients",{page:e,limit:c,sortColumn:x.sortColumn,sortDirection:x.sortDirection,filters:t});const{patients:n,totalCount:s}=await d.getPatients(t,{page:e,limit:c,sortColumn:x.sortColumn,sortDirection:x.sortDirection});if(i.log("📊 Risposta da patientService.getPatients",{dataLength:n?.length,count:s}),n&&n.length>0){i.log("📊 Caricamento eventi clinici per i pazienti...");try{const t=n.map(t=>t.id),{data:e,error:s}=await a.from("eventi_clinici").select("*").in("paziente_id",t).order("data_evento",{ascending:!1});if(s)i.warn("⚠️ Errore nel caricamento eventi clinici:",s);else{const t={};e&&e.forEach(e=>{t[e.paziente_id]||(t[e.paziente_id]=[]),t[e.paziente_id].push(e)}),n.forEach(e=>{e.eventi_clinici=t[e.id]||[]}),i.log("✅ Eventi clinici caricati per",Object.keys(t).length,"pazienti")}}catch(o){i.warn("⚠️ Errore nel caricamento eventi clinici:",o),n.forEach(t=>{t.eventi_clinici=[]})}}return n&&n.length>0&&i.log("🔍 Data verification - First record:",{hasUserId:!!n[0].user_id,hasCreatedAt:!!n[0].created_at,hasEventiClinici:!!n[0].eventi_clinici,eventiCount:n[0].eventi_clinici?.length||0,tableName:"pazienti",sample:n[0]}),i.log("✅ fetchPazienti completato con successo"),{data:n,count:s}}async function M(){const t=y.exportCsvButton||y.exportCsvButtonMobile;if(!t)return;const e=t.innerHTML;t.disabled=!0,t.innerHTML=s('<span class="spinner-border spinner-border-sm"></span> Esportazione...');try{const t=z();await d.exportPatients(t)}catch(n){i.error("Errore catturato in list-api durante l'esportazione CSV:",n)}finally{t.disabled=!1,t.innerHTML=s(e)}}async function _(){const t=y.exportJsonButton||y.exportJsonButtonMobile;if(!t)return;const e=t.innerHTML;t.disabled=!0,t.innerHTML=s('<span class="spinner-border spinner-border-sm"></span> Esportazione...');try{const t=z();await d.exportPatientsJSON(t)}catch(n){i.error("Errore catturato in list-api durante l'esportazione JSON:",n)}finally{t.disabled=!1,t.innerHTML=s(e)}}async function F(t,e){try{e?await d.dischargePatient(t):await d.reactivatePatient(t)}catch(n){throw i.error(`❌ Errore durante l'aggiornamento dello stato del paziente ${t}:`,n),n}}function I(){y.tableHeaders&&0!==y.tableHeaders.length&&y.tableHeaders.forEach(t=>{if(!t)return;const e=t.querySelector(".sort-indicator");e&&(e.textContent=t.dataset.sort===x.sortColumn?"asc"===x.sortDirection?" ▲":" ▼":"")})}function D(t,e){!function(t){const e=document.getElementById("pazienti-table-body");if(!e)return;if(e.innerHTML="",0===t.length){const t=e.insertRow(),n=document.createElement("td");return n.colSpan=10,n.className="p-0",n.innerHTML=s('\n    <div class="empty-state">\n      <span class="material-icons" aria-hidden="true">group_off</span>\n      <p class="mb-1">Nessun paziente trovato per i filtri selezionati.</p>\n      <p class="text-muted mb-3">Aggiorna i filtri o reimposta la ricerca per visualizzare nuovi risultati.</p>\n      <button type="button" class="btn btn-outline-primary btn-sm" data-reset-filters>\n        <span class="material-icons me-1" style="vertical-align: text-bottom;">refresh</span>\n        Resetta filtri\n      </button>\n    </div>\n  '),t.appendChild(n),void 0}const n=t.map(t=>new h(t,{showActions:!0,showPostOperativeDays:!0}).renderTableRow()).join("");e.innerHTML=n}(t),function(t){const e=document.getElementById("pazienti-cards-container");if(!e)return;if(0===t.length)return e.innerHTML=s('\n    <div class="empty-state">\n      <span class="material-icons" aria-hidden="true">group_off</span>\n      <p class="mb-1">Nessun paziente trovato per i filtri selezionati.</p>\n      <p class="text-muted mb-3">Aggiorna i filtri o reimposta la ricerca per visualizzare nuovi risultati.</p>\n      <button type="button" class="btn btn-outline-primary btn-sm" data-reset-filters>\n        <span class="material-icons me-1" style="vertical-align: text-bottom;">refresh</span>\n        Resetta filtri\n      </button>\n    </div>\n  '),void 0;const n=t.map(t=>{const e=window.innerWidth<=767;return new h(t,{showActions:!0,showPostOperativeDays:!0,showClinicalEvents:!0,isMobile:e}).render()}).join("");e.innerHTML=s(n)}(t),function(t){const e=Math.ceil(t/c);y.pageInfo&&(y.pageInfo.textContent=`Pagina ${x.currentPage+1} di ${e||1}`);y.prevButton&&(y.prevButton.disabled=0===x.currentPage);y.nextButton&&(y.nextButton.disabled=x.currentPage>=e-1);y.pageInfoMobile&&(y.pageInfoMobile.textContent=`${x.currentPage+1} / ${e||1}`);y.prevButtonMobile&&(y.prevButtonMobile.disabled=0===x.currentPage);y.nextButtonMobile&&(y.nextButtonMobile.disabled=x.currentPage>=e-1)}(e),I(),L()}function P(t){i.error("Errore dettagliato durante il fetch dei pazienti:",t),y.tableBody&&(y.tableBody.innerHTML=s('<tr><td colspan="10" class="text-center text-danger"><strong>Errore nel caricamento dei dati.</strong><br>Controlla la console per i dettagli.</td></tr>'));const e=document.getElementById("pazienti-cards-container");e&&(e.innerHTML=s('<div class="text-center text-danger p-4"><strong>Errore nel caricamento dei dati.</strong></div>'))}function L(){const t=document.querySelector(".table-responsive"),e=document.getElementById("pazienti-cards-container");t&&e&&(window.innerWidth>=1200?(t.style.display="block",e.style.display="none"):(t.style.display="none",e.style.display="block"))}let T=[],k=0,A=!1;const S={search:"Ricerca",reparto:"Reparto",diagnosi:"Diagnosi",stato:"Stato",infetto:"Infetto",trasferimento:"Trasferimento"},R={true:"Infetto",false:"Non infetto"},O={dimissione:"Dimissione",trasferimento_interno:"Trasferimento interno",trasferimento_esterno:"Trasferimento esterno",decesso:"Decesso"},H=["search","reparto","diagnosi","stato","infetto","trasferimento"];let j=null,N=null,J=null,q=null;function V(t,e){if(!t)return e;const n=Array.from(t.options||[]).find(t=>t.value===e);return n?.text?.trim()||e}function W(t={}){return H.map(e=>{const n=t[e];if(null==n||""===n)return null;const i=function(t,e){if(null==e)return"";const n=String(e);return"search"===t?n.trim():"infetto"===t?R[n]||R["true"===n]||n:"stato"===t?"attivo"===n?"Attivo":"dimesso"===n?"Dimesso":n:"trasferimento"===t?O[n]||n:"reparto"===t?V(y.repartoFilter,n):"diagnosi"===t?V(y.diagnosiFilter,n):n}(e,n);return i?{key:e,label:S[e]||e,value:i}:null}).filter(Boolean)}function Q(t={}){const e=y.activeFiltersContainer,n=y.activeFiltersWrapper;if(!e)return;e.innerHTML="";const i=W(t);if(0===i.length)return e.classList.add("d-none"),e.setAttribute("aria-hidden","true"),n&&n.classList.add("d-none"),void 0;e.classList.remove("d-none"),e.removeAttribute("aria-hidden"),n&&n.classList.remove("d-none"),i.forEach(t=>{const n=document.createElement("span");n.className="active-filter-badge badge rounded-pill d-inline-flex align-items-center",n.setAttribute("role","listitem");const i=document.createElement("span");i.className="active-filter-badge__label",i.textContent=`${t.label}:`;const a=document.createElement("span");a.className="active-filter-badge__value",a.textContent=t.value;const s=document.createElement("button");s.type="button",s.className="active-filter-badge__clear",s.dataset.filterKey=t.key,s.setAttribute("aria-label",`Rimuovi filtro ${t.label}`),s.textContent="✕",n.appendChild(i),n.appendChild(a),n.appendChild(s),e.appendChild(n)})}function K(){Q(n.getFilters())}function U(t,e){t&&(t.value=e,t.customSelectInstance&&t.customSelectInstance.setValue(e))}function G(){const t=y.activeFiltersContainer;if(!t)return()=>{};const e=t=>{const e=t.target.closest("button[data-filter-key]");e&&(t.preventDefault(),function(t){switch(t){case"search":y.searchInput&&(y.searchInput.value="");break;case"reparto":U(y.repartoFilter,"");break;case"diagnosi":U(y.diagnosiFilter,"");break;case"stato":U(y.statoFilter,"");break;case"infetto":U(y.infettoFilter,"");break;case"trasferimento":U(y.trasferimentoFilter,"")}}(e.dataset.filterKey),Z())};return t.addEventListener("click",e),()=>t.removeEventListener("click",e)}function X(t){[y.exportToggle,y.exportCsvButton,y.exportJsonButton,y.exportCsvButtonMobile,y.exportJsonButtonMobile,y.exportToggleMobile].forEach(e=>{e&&(e.disabled=Boolean(t),e.setAttribute("aria-disabled",String(Boolean(t))))})}function Y(){var t;j&&j(),t=t=>{Q(t)},j=n.subscribe("listFilters",(e,n)=>{t(e.listFilters,n.listFilters)})}function Z(){x.currentPage=0,$(),K(),A=!0,et()}function tt(t){x.currentPage=t,$(),et()}async function et(){!function(){y.tableBody&&(y.tableBody.innerHTML=s('<tr><td colspan="10" class="text-center"><div class="spinner-border"></div></td></tr>'));const t=document.getElementById("pazienti-cards-container");t&&(t.innerHTML=s('<div class="text-center p-4"><div class="spinner-border"></div></div>'))}(),q&&(clearTimeout(q),q=null),q=setTimeout(()=>{l.warning("Caricamento più lento del previsto, attendi ancora qualche secondo...",{timeout:4e3,position:"top-center"}),q=null},6e3);try{const{data:t,count:e}=await C();if(T=t||[],k=e||0,D(T,e),A){const t="number"==typeof e?e:0;l.info(0===t?"Nessun paziente trovato":(1===t?"1 paziente":`${t} pazienti`)+" trovati",{timeout:2e3,position:"top-center"}),A=!1}}catch(t){i.error("❌ Errore in fetchAndRender:",t),l.error(`Errore nel caricamento pazienti: ${t.message}`),P(t),A=!1}finally{q&&(clearTimeout(q),q=null)}}function nt(){n.resetFilters(),y.repartoFilter&&(y.repartoFilter.value=""),y.diagnosiFilter&&(y.diagnosiFilter.value=""),y.statoFilter&&(y.statoFilter.value=""),y.infettoFilter&&(y.infettoFilter.value=""),y.trasferimentoFilter&&(y.trasferimentoFilter.value=""),y.searchInput&&(y.searchInput.value=""),void[y.repartoFilter,y.diagnosiFilter,y.statoFilter,y.infettoFilter,y.trasferimentoFilter].forEach(t=>{t?.customSelectInstance&&t.customSelectInstance.setValue("")}),x.currentPage=0,K(),A=!1,l.info("Filtri resettati",{timeout:1500,position:"top-center"}),et()}function it(){const e=()=>{Z()};let n,a;y.searchInput&&(n=o(()=>e(),300),y.searchInput.addEventListener("input",n)),y.filterContainer&&(y.filterContainer.addEventListener("change",t=>{t.target.matches('select, input[type="checkbox"], input[type="radio"]')&&e()}),y.filterContainer.addEventListener("submit",t=>{t.preventDefault(),e()})),y.resetButton.addEventListener("click",nt),y.resetButtonMobile&&y.resetButtonMobile.addEventListener("click",nt),y.exportCsvButton.addEventListener("click",M),y.exportJsonButton.addEventListener("click",_),y.exportCsvButtonMobile&&y.exportCsvButtonMobile.addEventListener("click",M),y.exportJsonButtonMobile&&y.exportJsonButtonMobile.addEventListener("click",_),y.viewContainer&&(a=t=>{t.target.closest("[data-reset-filters]")&&nt()},y.viewContainer.addEventListener("click",a)),y.prevButton&&y.prevButton.addEventListener("click",()=>{y.prevButton.disabled||x.currentPage<=0||tt(x.currentPage-1)}),y.nextButton&&y.nextButton.addEventListener("click",()=>{const t=Math.ceil(k/c);y.nextButton.disabled||x.currentPage>=t-1||tt(x.currentPage+1)}),y.prevButtonMobile&&y.prevButtonMobile.addEventListener("click",()=>{y.prevButtonMobile.disabled||x.currentPage<=0||tt(x.currentPage-1)}),y.nextButtonMobile&&y.nextButtonMobile.addEventListener("click",()=>{const t=Math.ceil(k/c);y.nextButtonMobile.disabled||x.currentPage>=t-1||tt(x.currentPage+1)}),y.tableHeaders.forEach(t=>{t.addEventListener("click",()=>{const e=t.dataset.sort;x.sortColumn===e?x.sortDirection="asc"===x.sortDirection?"desc":"asc":(x.sortColumn=e,x.sortDirection="asc"),x.currentPage=0,$(),et()})});const s=e=>{const n=e.target.closest("button[data-action]");if(n){const{action:e,id:a}=n.dataset;return!async function(e,n){try{switch(e){case"edit":sessionStorage.setItem("editPazienteId",n);const e=T.find(t=>t.id===n);l.info(`Modifica di ${e?`${e.nome} ${e.cognome}`:"il paziente"}`,{timeout:2e3,position:"top-center"}),r("inserimento");break;case"delete":const{ConfirmModal:a}=await t(async()=>{const{ConfirmModal:t}=await import("./ConfirmModal-5fYD63px.js");return{ConfirmModal:t}},__vite__mapDeps([0,1,2,3,4])),s=T.find(t=>t.id===n),o=s?`${s.nome} ${s.cognome}`:"questo paziente",c=a.forDeletion(o);await c.show()&&(await async function(t){try{await d.deletePatient(t),i.log("✅ Chiamata a patientService.deletePatient completata per ID:",t)}catch(e){throw i.error("❌ Errore eliminazione paziente:",e),i.error("Errore catturato in list-api durante la cancellazione del paziente:",e.message),e}}(n),l.success(`${o} eliminato con successo`),et());break;case"dimetti":const{ConfirmModal:p}=await t(async()=>{const{ConfirmModal:t}=await import("./ConfirmModal-5fYD63px.js");return{ConfirmModal:t}},__vite__mapDeps([0,1,2,3,4])),u=T.find(t=>t.id===n),m=u?`${u.nome} ${u.cognome}`:"il paziente",b=p.forDismissal(m);await b.show()&&(await F(n,!0),l.success(`${m} dimesso con successo`),await et());break;case"riattiva":const{ConfirmModal:v}=await t(async()=>{const{ConfirmModal:t}=await import("./ConfirmModal-5fYD63px.js");return{ConfirmModal:t}},__vite__mapDeps([0,1,2,3,4])),g=T.find(t=>t.id===n),f=g?`${g.nome} ${g.cognome}`:"il paziente",h=v.forReactivation(f);await h.show()&&(await F(n,!1),l.success(`${f} riattivato con successo`),await et())}}catch(a){i.error("❌ Errore in handlePatientAction:",a),l.error(`Errore nell'operazione: ${a.message}`)}}(e,a),void 0}const a=e.target.closest('button[class*="btn-add-"], button[class*="btn-view-"]');if(a){const t=a.dataset.patientId;a.classList.contains("btn-add-intervention")?at("add-intervention",t):a.classList.contains("btn-add-infection")?at("add-infection",t):a.classList.contains("btn-view-events")&&at("view-events",t)}};return document.getElementById("pazienti-table-body")?.addEventListener("click",s),document.getElementById("pazienti-cards-container")?.addEventListener("click",s),y.backButton.addEventListener("click",()=>{r("home")}),window.removeEventListener("resize",L),window.addEventListener("resize",L),()=>{y.searchInput&&n&&y.searchInput.removeEventListener("input",n),y.viewContainer&&a&&y.viewContainer.removeEventListener("click",a)}}async function at(t,e){try{const n=T.find(t=>t.id===e),i=n?`${n.nome} ${n.cognome}`:"Paziente";switch(t){case"add-intervention":l.info(`Creazione intervento per ${i}`,{timeout:2e3,position:"top-center"}),r(`eventi-clinici?action=add&type=intervento&paziente=${e}`);break;case"add-infection":l.info(`Creazione infezione per ${i}`,{timeout:2e3,position:"top-center"}),r(`eventi-clinici?action=add&type=infezione&paziente=${e}`);break;case"view-events":l.info(`Visualizzazione eventi clinici di ${i}`,{timeout:2e3,position:"top-center"}),r(`eventi-clinici?paziente=${e}`)}}catch(n){i.error("❌ Errore in handleClinicalEventAction:",n),l.error(`Errore nell'operazione clinica: ${n.message}`)}}async function st(){i.log("📡 Inizio caricamento dati per la vista lista...");try{!function(){const t=n.getFilters();y.repartoFilter&&t.reparto&&(y.repartoFilter.value=t.reparto),y.diagnosiFilter&&t.diagnosi&&(y.diagnosiFilter.value=t.diagnosi),y.statoFilter&&t.stato&&(y.statoFilter.value=t.stato),y.infettoFilter&&t.infetto&&(y.infettoFilter.value=t.infetto),y.trasferimentoFilter&&t.trasferimento&&(y.trasferimentoFilter.value=t.trasferimento),y.searchInput&&t.search&&(y.searchInput.value=t.search)}();const[t,e,a]=await Promise.all([C(),b("reparto_appartenenza"),b("diagnosi")]);return i.log("✅ Dati per la lista caricati con successo."),{pazienti:t.data,count:t.count,repartoOptions:e,diagnosiOptions:a}}catch(t){throw i.error("❌ Errore durante il caricamento dei dati per la lista:",t),t}}async function ot(t){if(i.log("🏗️ Inizializzazione vista lista pazienti con dati pre-caricati..."),!e.session)return i.log("❌ Accesso a #list bloccato: utente non autenticato."),void 0;x.currentPage=0;const a=document.querySelector("#view-container .view");if(!a)return i.error("❌ View container non trovato"),void 0;try{!function(t){i.log("🗂️ Caching DOM elements...",{viewContainer:t}),y.viewContainer=t,y.filterForm=document.getElementById("patients-filter-form"),y.repartoFilter=document.getElementById("list-filter-reparto"),y.diagnosiFilter=document.getElementById("list-filter-diagnosi"),y.statoFilter=document.getElementById("list-filter-stato"),y.infettoFilter=document.getElementById("list-filter-infetto"),y.trasferimentoFilter=document.getElementById("list-filter-trasferimento"),y.searchInput=document.getElementById("list-search"),y.filterContainer=t.querySelector(".filters-container"),y.activeFiltersWrapper=document.getElementById("patients-filter-badges-wrapper"),y.activeFiltersContainer=document.getElementById("active-filter-badges"),y.tableBody=document.getElementById("pazienti-table-body"),y.cardsContainer=document.getElementById("pazienti-cards-container"),y.tableHeaders=t.querySelectorAll("th[data-sort]"),y.prevButton=document.getElementById("prev-page-btn"),y.nextButton=document.getElementById("next-page-btn"),y.pageInfo=document.getElementById("page-info"),y.prevButtonMobile=document.getElementById("prev-page-btn-mobile"),y.nextButtonMobile=document.getElementById("next-page-btn-mobile"),y.pageInfoMobile=document.getElementById("page-info-mobile"),y.backButton=t.querySelector('button[data-view="home"]'),y.resetButton=document.getElementById("pazienti-reset-filters-btn"),y.resetButtonMobile=document.getElementById("pazienti-reset-filters-btn-mobile"),y.exportToggle=document.getElementById("pazienti-export-toggle"),y.exportCsvButton=document.getElementById("pazienti-export-csv-btn"),y.exportCsvButtonMobile=document.getElementById("pazienti-export-csv-btn-mobile"),y.exportToggleMobile=document.getElementById("pazienti-export-toggle-mobile"),y.exportJsonButton=document.getElementById("pazienti-export-json-btn"),y.exportJsonButtonMobile=document.getElementById("pazienti-export-json-btn-mobile"),i.log("🗂️ DOM elements cached:",{tableBody:!!y.tableBody,cardsContainer:!!y.cardsContainer,repartoFilter:!!y.repartoFilter,diagnosiFilter:!!y.diagnosiFilter,statoFilter:!!y.statoFilter,infettoFilter:!!y.infettoFilter,trasferimentoFilter:!!y.trasferimentoFilter,searchInput:!!y.searchInput,filterForm:!!y.filterForm,filterContainer:!!y.filterContainer,activeFiltersContainer:!!y.activeFiltersContainer,tableHeaders:y.tableHeaders?.length||0,prevButton:!!y.prevButton,nextButton:!!y.nextButton,pageInfo:!!y.pageInfo,prevButtonMobile:!!y.prevButtonMobile,nextButtonMobile:!!y.nextButtonMobile,pageInfoMobile:!!y.pageInfoMobile,backButton:!!y.backButton,resetButton:!!y.resetButton,resetButtonMobile:!!y.resetButtonMobile,exportToggle:!!y.exportToggle,exportCsvButton:!!y.exportCsvButton,exportCsvButtonMobile:!!y.exportCsvButtonMobile,exportJsonButton:!!y.exportJsonButton,exportJsonButtonMobile:!!y.exportJsonButtonMobile,exportToggleMobile:!!y.exportToggleMobile}),y.tableBody&&y.cardsContainer?i.log("✅ Elementi DOM critici trovati"):i.error("❌ Elementi DOM critici mancanti:",{tableBody:!!y.tableBody,cardsContainer:!!y.cardsContainer}),["tableBody","cardsContainer","repartoFilter","diagnosiFilter","statoFilter","infettoFilter"].forEach(t=>{y[t]||i.error(`Elemento DOM critico non trovato: ${t}`)}),["trasferimentoFilter"].forEach(t=>{y[t]||i.log(`Elemento DOM opzionale non trovato: ${t}`)})}(a);const{pazienti:e,count:s,repartoOptions:o,diagnosiOptions:r}=t;T=e||[],k=s||0,v(y.repartoFilter,o),v(y.diagnosiFilter,r);const l=n.getFilters();y.repartoFilter&&(y.repartoFilter.value=l.reparto||""),y.diagnosiFilter&&(y.diagnosiFilter.value=l.diagnosi||""),y.statoFilter&&(y.statoFilter.value=l.stato||""),y.infettoFilter&&(y.infettoFilter.value=l.infetto||""),y.trasferimentoFilter&&(y.trasferimentoFilter.value=l.trasferimento||""),y.searchInput&&(y.searchInput.value=l.search||""),m("#list-filter-reparto, #list-filter-diagnosi, #list-filter-stato, #list-filter-infetto, #list-filter-trasferimento");const c=it();return D(T,s),Q(l),J=G(),Y(),N&&N(),N=n.subscribe(["isLoading"],t=>{X(t.isLoading)}),X(n.getState("isLoading")),I(),window.removeEventListener("resize",L),window.addEventListener("resize",L),()=>{window.removeEventListener("resize",L),"function"==typeof c&&c(),J&&(J(),J=null),j&&(j(),j=null),N&&(N(),N=null)}}catch(s){i.error("Errore durante l'inizializzazione della vista lista:",s),P(s)}}export{st as fetchListData,ot as initListView};
