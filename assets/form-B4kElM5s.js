const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/ConfirmModal-B8U-QeN3.js","assets/index-A3eULIVo.js","assets/vendor-BU6HxVpN.js","assets/supabase-AmyKTmiY.js","assets/index-OT3WrwxL.css","assets/infectionDataManager-CzG54MIw.js","assets/index-DKR2DvA9.js","assets/lookupService-CfBKe3Av.js","assets/patientService-DqU4UNQ3.js"])))=>i.map(i=>d[i]);
import{_ as e}from"./supabase-AmyKTmiY.js";import{v as t,m as n,e as a,i as o}from"./infectionDataManager-CzG54MIw.js";import{s as i,l as r,n as s,a as c,c as l}from"./index-A3eULIVo.js";import{ResolveInfectionModal as d}from"./ResolveInfectionModal-BoZPkPnX.js";import{p as m}from"./post-operative-calculator-C3z7C_vm.js";import u from"./CustomDatepicker-6By5cdaM.js";import{i as p,C as v,u as g}from"./CustomSelect-rODcBPqn.js";import{Modal as f}from"./vendor-BU6HxVpN.js";import y from"./surgeryDataManager-CbtGeuzn.js";import{l as h}from"./lookupService-CfBKe3Av.js";import"./utils-BtSsRyB2.js";async function _(){const{data:e,error:t}=await i.from("diagnosi").select("nome").order("nome",{ascending:!0});if(t)throw r.error("Error loading diagnosi options:",t),new Error("Impossibile caricare le opzioni di diagnosi.");return e||[]}async function E(e){if(!e)return null;const{data:t,error:n}=await i.from("pazienti").select("*").eq("id",e).single();if(n)throw r.error("Error loading patient for editing:",n),new Error("Impossibile caricare i dati del paziente.");return t}async function I(e,a){const o={};let s;if(Object.keys(e).forEach(t=>{""!==e[t]&&null!=e[t]&&(o[t]=e[t])}),o.infetto=Boolean(o.infetto),t(o),s=a?await i.from("pazienti").update(o).eq("id",a).select().single():await i.from("pazienti").insert(o).select().single(),s.error){r.error("Error saving patient:",s.error);const e=n(s.error,{entity:"paziente",operation:"salvataggio"});throw new Error(e)}return s.data}let b=null,z=null,w=[],D=null;function S(e){D=e,function(){const e=document.getElementById("add-evento-btn");e&&e.addEventListener("click",B);[document.getElementById("cancel-evento-btn"),document.getElementById("cancel-evento-btn-2")].forEach(e=>{e&&e.addEventListener("click",k)});const t=document.getElementById("save-evento-btn");t&&t.addEventListener("click",T);const n=document.getElementById("evento-tipo");n&&n.addEventListener("change",e=>{x(e.target.value)});const a=document.getElementById("eventi-clinici-tab");a&&a.addEventListener("shown.bs.tab",()=>{L()})}(),function(){p("#evento-tipo");const e=document.getElementById("evento-tipo-intervento");e&&!e.customSelectInstance&&new v(e);b=new u("#evento-data",{dateFormat:"d/m/Y",allowInput:!0,maxDate:"today",onChange:function(e,t,n){if(e.length>0){const t=e[0],a=new Date;a.setHours(23,59,59,999),t>a&&(n.clear(),s.warning("La data dell'evento non può essere nel futuro"))}}})}()}function B(){const e=document.getElementById("nuovo-evento-form");e&&(e.style.display="block",$(),e.scrollIntoView({behavior:"smooth",block:"start"}))}function k(){const e=document.getElementById("nuovo-evento-form");e&&(e.style.display="none",$())}function $(){if(!document.getElementById("nuovo-evento-form"))return;document.getElementById("evento-id").value="",document.getElementById("evento-tipo").value="",document.getElementById("evento-data").value="",document.getElementById("evento-tipo-intervento").value="",document.getElementById("evento-agente-patogeno").value="",document.getElementById("evento-descrizione").value="",x("");const e=document.getElementById("evento-tipo");e?.customSelectInstance&&e.customSelectInstance.setValue("");const t=document.getElementById("evento-tipo-intervento");t?.customSelectInstance&&t.customSelectInstance.setValue("")}function x(e){const t=document.getElementById("tipo-intervento-container"),n=document.getElementById("agente-patogeno-container");t&&(t.style.display="none"),n&&(n.style.display="none");const a=document.getElementById("evento-tipo-intervento"),o=document.getElementById("evento-agente-patogeno");switch(a&&(a.value="",a.customSelectInstance&&a.customSelectInstance.setValue("")),o&&(o.value=""),e){case"intervento":t&&(t.style.display="block",console.log("Inizializzando CustomSelect per tipo intervento"),a&&!a.customSelectInstance&&new v(a));break;case"infezione":n&&(n.style.display="block")}}async function T(){try{const e=function(){const e=document.getElementById("evento-data").value;let t=null;if(e&&""!==e.trim())try{t=function(e){if(!e)return null;if(e.match(/^\d{4}-\d{2}-\d{2}$/))return e;if(!e.includes("/"))throw new Error("Formato data non valido. Utilizzare il formato gg/mm/aaaa");const t=e.split("/");if(3!==t.length)throw new Error("Formato data non valido. Utilizzare il formato gg/mm/aaaa");const[n,a,o]=t,i=parseInt(n,10),r=parseInt(a,10),s=parseInt(o,10);if(isNaN(i)||isNaN(r)||isNaN(s))throw new Error("Formato data non valido. Utilizzare numeri validi");if(i<1||i>31)throw new Error("Giorno non valido (1-31)");if(r<1||r>12)throw new Error("Mese non valido (1-12)");if(s<1900||s>2100)throw new Error("Anno non valido");const c=new Date(s,r-1,i);if(c.getDate()!==i||c.getMonth()!==r-1||c.getFullYear()!==s)throw new Error("Data non valida (es. 31/02/2025)");const l=a.padStart(2,"0"),d=n.padStart(2,"0");return`${o}-${l}-${d}`}(e.trim())}catch(a){throw new Error(a.message||"Formato data non valido. Utilizzare il formato gg/mm/aaaa")}const n={id:document.getElementById("evento-id").value||null,tipo_evento:document.getElementById("evento-tipo").value,data_evento:t,descrizione:document.getElementById("evento-descrizione").value,tipo_intervento:document.getElementById("evento-tipo-intervento").value||null,agente_patogeno:document.getElementById("evento-agente-patogeno").value||null};return Object.keys(n).forEach(e=>{""!==n[e]&&null!==n[e]||(n[e]=null)}),n}(),t=function(e){if(!e.tipo_evento)return{isValid:!1,message:"Seleziona il tipo di evento"};if(!e.data_evento)return{isValid:!1,message:"Inserisci la data dell'evento"};try{const t=new Date(e.data_evento+"T00:00:00");if(isNaN(t.getTime()))return{isValid:!1,message:"Formato data non valido"};const n=new Date,a=new Date(n.getFullYear(),n.getMonth(),n.getDate());if(new Date(t.getFullYear(),t.getMonth(),t.getDate())>a)return{isValid:!1,message:"La data dell'evento non può essere nel futuro"}}catch(t){return{isValid:!1,message:"Errore nella validazione della data: "+t.message}}if("intervento"===e.tipo_evento&&!e.tipo_intervento)return{isValid:!1,message:"Seleziona il tipo di intervento"};return{isValid:!0}}(e);if(!t.isValid)return s.error(t.message),void 0;if(!z)return!function(e){try{const t={...e,id:`temp_manual_${Date.now()}`,isTemporary:!0};w||(w=[]),w=w.filter(t=>!t.isTemporary||t.tipo_evento!==e.tipo_evento),w.push(t),P(w),k(),M(),s.success("Evento aggiunto temporaneamente. Verrà salvato quando salvi il paziente.")}catch(t){r.error("Errore nella gestione evento temporaneo:",t.message),s.error("Errore nell'aggiungere l'evento temporaneo")}}(e),void 0;e.paziente_id=z,e.id?await a.updateEvento(e.id,e):(delete e.id,await a.createEvento(e)),await L(),k(),M();const n=document.getElementById("eventi-list");n&&(n.style.opacity="0.7",setTimeout(()=>{n.style.opacity="1"},150))}catch(e){r.error("Errore catturato in handleSaveEvento:",e.message)}}function C(e){if(!e||!e.includes("-"))return e;const[t,n,a]=e.split("-");return`${a}/${n}/${t}`}async function L(){if(z)try{const e=await a.getEventiByPaziente(z);w=e,P(e),N(e),"function"==typeof D&&D(),M()}catch(e){r.error("Errore nel caricamento eventi clinici per il paziente:",e)}}function P(t){const n=document.getElementById("eventi-list"),o=document.getElementById("no-eventi-message");if(!t||0===t.length)return o&&(o.style.display="block"),n.innerHTML='<div class="text-center text-muted py-4">Nessun evento clinico registrato</div>',o&&n.appendChild(o),void 0;let i;o&&(o.style.display="none");try{i=t.map(e=>{const t=C(e.data_evento),n="intervento"===e.tipo_evento?"medical_services":"coronavirus",a="intervento"===e.tipo_evento?"primary":"warning";let o="";"infezione"===e.tipo_evento&&e.data_fine_evento&&(o=`<span class="badge bg-success ms-2">Risolto il ${C(e.data_fine_evento)}</span>`),e.isTemporary&&(o+='<span class="badge bg-info ms-2">\n                <span class="material-icons me-1" style="font-size: 12px;">schedule</span>Da salvare\n            </span>');const i=e.isTemporary;return`\n            <div class="card mb-3 evento-card" data-evento-id="${e.id}">\n                <div class="card-body">\n                    <div class="d-flex justify-content-between align-items-start">\n                        <div class="flex-grow-1">\n                            <div class="d-flex align-items-center mb-2">\n                                <span class="badge bg-${a} me-2">\n                                    <span class="material-icons me-1" style="font-size: 14px;">${n}</span>\n                                    ${"intervento"===e.tipo_evento?"Intervento":"Infezione"}\n                                </span>\n                                <small class="text-muted">${t}</small>\n                                ${o}\n                            </div>\n                            \n                            ${e.tipo_intervento?`<p class="mb-1"><strong>Tipo:</strong> ${e.tipo_intervento}</p>`:""}\n                            ${e.agente_patogeno?`<p class="mb-1"><strong>Agente:</strong> ${e.agente_patogeno}</p>`:""}\n                            ${e.descrizione?`<p class="mb-0 text-muted">${e.descrizione}</p>`:""}\n                        </div>\n                        \n                        <div class="dropdown">\n                            <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" ${i?"disabled":""}>\n                                <span class="material-icons" style="font-size: 16px;">more_vert</span>\n                            </button>\n                            ${i?'\n                            <ul class="dropdown-menu">\n                                <li><span class="dropdown-item-text text-muted">\n                                    <span class="material-icons me-2" style="font-size: 16px;">info</span>\n                                    Evento temporaneo - Salva il paziente per renderlo definitivo\n                                </span></li>\n                            </ul>\n                            ':`\n                            <ul class="dropdown-menu">\n                                <li><a class="dropdown-item edit-evento" href="#" data-evento-id="${e.id}">\n                                    <span class="material-icons me-2" style="font-size: 16px;">edit</span>Modifica\n                                </a></li>\n                                ${"infezione"!==e.tipo_evento||"infezione"===e.tipo_evento&&e.data_fine_evento?"":`\n                                <li><a class="dropdown-item resolve-infezione" href="#" data-evento-id="${e.id}" data-start-date="${e.data_evento}">\n                                    <span class="material-icons me-2" style="font-size: 16px;">check_circle</span>Risolvi\n                                </a></li>\n                                `}\n                                <li><a class="dropdown-item delete-evento text-danger" href="#" data-evento-id="${e.id}">\n                                    <span class="material-icons me-2" style="font-size: 16px;">delete</span>Elimina\n                                </a></li>\n                            </ul>\n                            `}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `}).join("")}catch(s){r.error("Errore durante generazione HTML eventi:",s),i='<div class="alert alert-danger">Errore nel caricamento eventi</div>'}n.innerHTML=c(i),n.querySelectorAll(".edit-evento").forEach(e=>{e.addEventListener("click",e=>{e.preventDefault();!function(e){const t=w.find(t=>t.id===e);if(!t)return;B(),setTimeout(()=>{document.getElementById("evento-id").value=t.id,document.getElementById("evento-data").value=C(t.data_evento),document.getElementById("evento-descrizione").value=t.descrizione||"",document.getElementById("evento-tipo-intervento").value=t.tipo_intervento||"",document.getElementById("evento-agente-patogeno").value=t.agente_patogeno||"";const e=document.getElementById("evento-tipo");e?.customSelectInstance&&t.tipo_evento?e.customSelectInstance.setValue(t.tipo_evento):document.getElementById("evento-tipo").value=t.tipo_evento,x(t.tipo_evento),setTimeout(()=>{const e=document.getElementById("evento-tipo-intervento");e?.customSelectInstance&&t.tipo_intervento&&e.customSelectInstance.setValue(t.tipo_intervento)},100)},50)}(e.currentTarget.dataset.eventoId)})}),n.querySelectorAll(".delete-evento").forEach(t=>{t.addEventListener("click",t=>{t.preventDefault();!async function(t){const{ConfirmModal:n}=await e(async()=>{const{ConfirmModal:e}=await import("./ConfirmModal-B8U-QeN3.js");return{ConfirmModal:e}},__vite__mapDeps([0,1,2,3,4])),o=n.forClinicalEventDeletion();if(!(await o.show()))return;try{await a.deleteEvento(t),await L(),M()}catch(s){r.error("Errore catturato in deleteEvento:",s.message)}}(t.currentTarget.dataset.eventoId)})}),n.querySelectorAll(".resolve-infezione").forEach(e=>{e.addEventListener("click",e=>{e.preventDefault();!async function(e,t){const n=new d({minDate:t}),o=await n.show();if(o)try{await a.resolveInfezione(e,o),await L()}catch(s){r.error("Errore catturato durante la risoluzione dell'infezione:",s)}}(e.currentTarget.dataset.eventoId,e.currentTarget.dataset.startDate)})})}function N(e){const t=document.getElementById("post-op-info"),n=document.getElementById("post-op-text");if(!e||0===e.length)return t.classList.add("d-none"),void 0;const a=m.calculatePostOperativeDays(e);a.hasInterventions?(t.classList.remove("d-none"),n.textContent=a.displayText,t.className="alert d-flex align-items-center",t.classList.add(a.postOperativeDays<=7?"alert-danger":a.postOperativeDays<=30?"alert-warning":"alert-info")):t.classList.add("d-none")}function V(){return!(!w||0===w.length)&&w.some(e=>"infezione"===e.tipo_evento&&!e.data_fine_evento)}function M(){const e=document.getElementById("infetto"),t=document.getElementById("ha_intervento");if(!e||!t)return;const n=V(),a=w&&w.some(e=>"intervento"===e.tipo_evento);if(n){e.checked=!0,e.disabled=!0;const t=document.getElementById("infetto-helper-text");t&&(t.textContent="Stato gestito dagli eventi di infezione attivi.",t.style.display="block")}else{e.disabled=!1;const t=document.getElementById("infetto-helper-text");t&&(t.style.display="none")}if(a){t.checked=!0,t.disabled=!0;const e=document.getElementById("intervento-helper-text");e&&(e.textContent="Stato gestito dagli eventi di intervento presenti.",e.style.display="block")}else{t.disabled=!1;const e=document.getElementById("intervento-helper-text");e&&(e.style.display="none")}"function"==typeof window.updateInfectionIndicator&&window.updateInfectionIndicator(),"function"==typeof window.updateSurgeryIndicator&&window.updateSurgeryIndicator()}function j(e){z=e;const t=document.getElementById("eventi-clinici-tab");t&&t.classList.contains("active")&&L()}function q(){b&&(b.destroy(),b=null),z=null,w=[]}const O=Object.freeze(Object.defineProperty({__proto__:null,cleanupEventiCliniciTab:q,createTemporaryEventsFromCheckboxes:function(){e(async()=>{const{default:e}=await import("./infectionDataManager-CzG54MIw.js").then(e=>e.b);return{default:e}},__vite__mapDeps([5,1,2,3,4])).then(({default:t})=>{e(async()=>{const{default:e}=await import("./surgeryDataManager-CbtGeuzn.js");return{default:e}},[]).then(({default:e})=>{const n=[];if(t.hasValidInfectionData()){const e=t.getInfectionData();n.push({id:"temp_infection",tipo_evento:"infezione",data_evento:e.data_evento,agente_patogeno:e.agente_patogeno,descrizione:e.descrizione,data_fine_evento:null,isTemporary:!0})}if(e.hasValidSurgeryData()){const t=e.getSurgeryData();n.push({id:"temp_surgery",tipo_evento:"intervento",data_evento:t.data_evento,tipo_intervento:t.tipo_intervento,descrizione:t.descrizione,isTemporary:!0}),t.has_infection&&t.data_infezione&&n.push({id:"temp_surgery_infection",tipo_evento:"infezione",data_evento:t.data_infezione,agente_patogeno:t.agente_patogeno,descrizione:t.descrizione_infezione,data_fine_evento:null,isTemporary:!0})}const a=[...w||[],...n];P(a),N(a)})})},getTemporaryEvents:function(){return w?w.filter(e=>e.isTemporary):[]},initEventiCliniciTab:S,isPatientCurrentlyInfected:V,loadEventiForCurrentPatient:L,setCurrentPatient:j,syncCheckboxesWithEvents:M},Symbol.toStringTag,{value:"Module"}));class A{constructor(e={}){this.options={title:"Registra Infezione",patientName:"",defaultDate:(new Date).toISOString().split("T")[0],...e},this.modalId=`infection-modal-${Date.now()}`,this.datepickerInstance=null}show(){return new Promise(e=>{const t=this.render();document.body.insertAdjacentHTML("beforeend",t);const n=document.getElementById(this.modalId),a=n.querySelector("form"),o=new f(n);this.datepickerInstance=new u(`#${this.modalId} [data-datepicker]`,{defaultDate:this.options.defaultDate,maxDate:"today"});a.addEventListener("submit",t=>{t.preventDefault();const i=new FormData(a),r=this.datepickerInstance.instances[0]?.selectedDates[0],c={data_evento:r?r.toISOString().split("T")[0]:null,agente_patogeno:i.get("agente_patogeno"),descrizione:i.get("descrizione")};return c.agente_patogeno?c.data_evento?(this._defocus(n),o.hide(),e(c),void 0):(s.error("La data di infezione è obbligatoria."),void 0):(s.error("L'agente patogeno è obbligatorio."),void 0)}),n.addEventListener("hide.bs.modal",()=>{this._defocus(n)}),n.addEventListener("hidden.bs.modal",()=>{this.datepickerInstance&&this.datepickerInstance.destroy(),n.remove(),e(null)}),o.show()})}render(){const e=this.options.patientName?`${this.options.title} per <strong>${c(this.options.patientName)}</strong>`:this.options.title;return`\n            <div class="modal fade" id="${this.modalId}" tabindex="-1" aria-labelledby="infectionModalLabel" aria-hidden="true">\n                <div class="modal-dialog modal-dialog-centered">\n                    <div class="modal-content">\n                        <form>\n                            <div class="modal-header">\n                                <h5 class="modal-title" id="infectionModalLabel">${e}</h5>\n                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>\n                            </div>\n                            <div class="modal-body">\n                                <div class="mb-3">\n                                    <label for="data_evento" class="form-label">Data Infezione</label>\n                                    <div class="input-group-icon">\n                                        <input type="text" class="form-control" id="data_evento" name="data_evento" data-datepicker placeholder="gg/mm/aaaa" required>\n                                        <span class="material-icons input-icon">calendar_today</span>\n                                    </div>\n                                </div>\n                                <div class="mb-3">\n                                    <label for="agente_patogeno" class="form-label">Agente Patogeno</label>\n                                    <input type="text" class="form-control" id="agente_patogeno" name="agente_patogeno" placeholder="Es. Staphylococcus aureus" required>\n                                </div>\n                                <div class="mb-3">\n                                    <label for="descrizione" class="form-label">Descrizione (opzionale)</label>\n                                    <textarea class="form-control" id="descrizione" name="descrizione" rows="3" placeholder="Dettagli aggiuntivi sull'infezione..."></textarea>\n                                </div>\n                            </div>\n                            <div class="modal-footer">\n                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annulla</button>\n                                <button type="submit" class="btn btn-primary">Salva Evento</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        `}_defocus(e){try{const t=document.activeElement;t&&e.contains(t)&&"function"==typeof t.blur&&t.blur()}catch{}}}class F{constructor(e={}){this.options={title:"Dati Intervento Chirurgico",patientName:"",defaultDate:(new Date).toISOString().split("T")[0],...e},this.modal=null,this.datepicker=null,this.resolve=null,this.reject=null}show(){return new Promise((e,t)=>{this.resolve=e,this.reject=t,this.createModal(),this.showModal()})}createModal(){const e="surgery-event-modal",t=document.getElementById(e);t&&t.remove();const n=`\n            <div class="modal fade" id="${e}" tabindex="-1" aria-labelledby="${e}-label" aria-hidden="true">\n                <div class="modal-dialog modal-lg">\n                    <div class="modal-content">\n                        <div class="modal-header bg-primary text-white">\n                            <h5 class="modal-title" id="${e}-label">\n                                <span class="material-icons me-2">medical_services</span>\n                                ${c(this.options.title)}\n                            </h5>\n                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Chiudi"></button>\n                        </div>\n                        <div class="modal-body">\n                            ${this.options.patientName?`\n                                <div class="alert alert-info d-flex align-items-center mb-3">\n                                    <span class="material-icons me-2">person</span>\n                                    <span><strong>Paziente:</strong> ${c(this.options.patientName)}</span>\n                                </div>\n                            `:""}\n                            \n                            <form id="surgery-event-form">\n                                <div class="row g-3">\n                                    <div class="col-md-6">\n                                        <label for="surgery-data-evento" class="form-label">\n                                            Data Intervento <span class="text-danger">*</span>\n                                        </label>\n                                        <div class="input-group-icon">\n                                            <input\n                                                type="text"\n                                                class="form-control"\n                                                id="surgery-data-evento"\n                                                name="data_evento"\n                                                data-datepicker\n                                                placeholder="gg/mm/aaaa"\n                                                required\n                                            />\n                                            <span class="material-icons input-icon">calendar_today</span>\n                                        </div>\n                                        <small class="form-text text-muted">\n                                            Data in cui è stato eseguito l'intervento\n                                        </small>\n                                    </div>\n\n                                    <div class="col-md-6">\n                                        <label for="surgery-tipo-intervento" class="form-label">\n                                            Tipo Intervento <span class="text-danger">*</span>\n                                        </label>\n                                        <select\n                                            class="form-select"\n                                            id="surgery-tipo-intervento"\n                                            name="tipo_intervento"\n                                            data-custom="true"\n                                            required\n                                        >\n                                            <option value="">Seleziona tipo...</option>\n                                            <option value="Chirurgia Ortopedica">Chirurgia Ortopedica</option>\n                                            <option value="Chirurgia Plastica">Chirurgia Plastica</option>\n                                            <option value="Chirurgia Vascolare">Chirurgia Vascolare</option>\n                                            <option value="Chirurgia Generale">Chirurgia Generale</option>\n                                            <option value="Chirurgia Cardiaca">Chirurgia Cardiaca</option>\n                                            <option value="Neurochirurgia">Neurochirurgia</option>\n                                            <option value="Chirurgia Toracica">Chirurgia Toracica</option>\n                                            <option value="Altro">Altro</option>\n                                        </select>\n                                    </div>\n\n                                    <div class="col-12">\n                                        <label for="surgery-descrizione" class="form-label">\n                                            Descrizione Intervento\n                                        </label>\n                                        <textarea\n                                            class="form-control"\n                                            id="surgery-descrizione"\n                                            name="descrizione"\n                                            rows="3"\n                                            placeholder="Descrizione dettagliata dell'intervento eseguito..."\n                                        ></textarea>\n                                        <small class="form-text text-muted">\n                                            Descrizione opzionale dell'intervento\n                                        </small>\n                                    </div>\n\n                                    \x3c!-- Sezione Infezione Post-Operatoria --\x3e\n                                    <div class="col-12">\n                                        <hr class="my-3">\n                                        <h6 class="mb-3">\n                                            <span class="material-icons me-2">coronavirus</span>\n                                            Infezione Post-Operatoria\n                                        </h6>\n                                        \n                                        <div class="form-check form-switch mb-3">\n                                            <input\n                                                class="form-check-input"\n                                                type="checkbox"\n                                                id="surgery-has-infection"\n                                                name="has_infection"\n                                            />\n                                            <label class="form-check-label" for="surgery-has-infection">\n                                                Paziente ha sviluppato infezione post-operatoria\n                                            </label>\n                                        </div>\n\n                                        \x3c!-- Campi Infezione (nascosti di default) --\x3e\n                                        <div id="surgery-infection-fields" class="d-none">\n                                            <div class="row g-3">\n                                                <div class="col-md-6">\n                                                    <label for="surgery-data-infezione" class="form-label">\n                                                        Data Inizio Infezione\n                                                    </label>\n                                                    <div class="input-group-icon">\n                                                        <input\n                                                            type="text"\n                                                            class="form-control"\n                                                            id="surgery-data-infezione"\n                                                            name="data_infezione"\n                                                            data-datepicker\n                                                            placeholder="gg/mm/aaaa"\n                                                        />\n                                                        <span class="material-icons input-icon">calendar_today</span>\n                                                    </div>\n                                                </div>\n\n                                                <div class="col-md-6">\n                                                    <label for="surgery-agente-patogeno" class="form-label">\n                                                        Agente Patogeno\n                                                    </label>\n                                                    <input\n                                                        type="text"\n                                                        class="form-control"\n                                                        id="surgery-agente-patogeno"\n                                                        name="agente_patogeno"\n                                                        placeholder="Es. Staphylococcus aureus"\n                                                    />\n                                                </div>\n\n                                                <div class="col-12">\n                                                    <label for="surgery-descrizione-infezione" class="form-label">\n                                                        Descrizione Infezione\n                                                    </label>\n                                                    <textarea\n                                                        class="form-control"\n                                                        id="surgery-descrizione-infezione"\n                                                        name="descrizione_infezione"\n                                                        rows="2"\n                                                        placeholder="Descrizione dell'infezione post-operatoria..."\n                                                    ></textarea>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class="modal-footer">\n                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">\n                                <span class="material-icons me-1">cancel</span>\n                                Annulla\n                            </button>\n                            <button type="button" class="btn btn-primary" id="surgery-save-btn">\n                                <span class="material-icons me-1">save</span>\n                                Salva Dati\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `;document.body.insertAdjacentHTML("beforeend",n),this.modal=document.getElementById(e),this.setupEventListeners(),this.initializeComponents()}setupEventListeners(){this.modal.querySelector("#surgery-save-btn").addEventListener("click",()=>this.handleSave());this.modal.querySelector("#surgery-has-infection").addEventListener("change",e=>{this.toggleInfectionFields(e.target.checked)}),this.modal.addEventListener("hidden.bs.modal",()=>{this.resolve&&this.resolve(null),this.cleanup()});this.modal.querySelector("#surgery-event-form").addEventListener("submit",e=>{e.preventDefault(),this.handleSave()})}initializeComponents(){this.datepicker=new u("#surgery-data-evento, #surgery-data-infezione",{dateFormat:"d/m/Y",allowInput:!0,maxDate:"today"}),p("#surgery-tipo-intervento");const e=this.modal.querySelector("#surgery-data-evento");if(this.options.defaultDate){const[t,n,a]=this.options.defaultDate.split("-");e.value=`${a}/${n}/${t}`}}toggleInfectionFields(e){const t=this.modal.querySelector("#surgery-infection-fields");if(e){t.classList.remove("d-none");const e=this.modal.querySelector("#surgery-data-evento"),n=this.modal.querySelector("#surgery-data-infezione");e.value&&!n.value&&(n.value=e.value)}else t.classList.add("d-none"),this.modal.querySelector("#surgery-data-infezione").value="",this.modal.querySelector("#surgery-agente-patogeno").value="",this.modal.querySelector("#surgery-descrizione-infezione").value=""}showModal(){new bootstrap.Modal(this.modal,{backdrop:"static",keyboard:!1}).show()}handleSave(){const e=this.getFormData(),t=this.validateData(e);if(!t.isValid)return this.showValidationErrors(t.errors),void 0;bootstrap.Modal.getInstance(this.modal).hide(),this.resolve&&(this.resolve(e),this.resolve=null)}getFormData(){const e=this.modal.querySelector("#surgery-event-form"),t=new FormData(e),n=Object.fromEntries(t.entries());if(n.data_evento&&n.data_evento.includes("/")){const[e,t,a]=n.data_evento.split("/");n.data_evento=`${a}-${t.padStart(2,"0")}-${e.padStart(2,"0")}`}if(this.modal.querySelector("#surgery-has-infection").checked){if(n.has_infection=!0,n.data_infezione&&n.data_infezione.includes("/")){const[e,t,a]=n.data_infezione.split("/");n.data_infezione=`${a}-${t.padStart(2,"0")}-${e.padStart(2,"0")}`}}else n.has_infection=!1,delete n.data_infezione,delete n.agente_patogeno,delete n.descrizione_infezione;return n}validateData(e){const t=[];if(e.data_evento||t.push("La data dell'intervento è obbligatoria"),e.tipo_intervento||t.push("Il tipo di intervento è obbligatorio"),e.data_evento){const n=new Date(e.data_evento),a=new Date;a.setHours(23,59,59,999),isNaN(n.getTime())?t.push("Data intervento non valida"):n>a&&t.push("La data dell'intervento non può essere nel futuro")}if(e.has_infection)if(e.data_infezione){const n=new Date(e.data_infezione),a=new Date(e.data_evento);isNaN(n.getTime())?t.push("Data infezione non valida"):n<a&&t.push("La data dell'infezione non può essere precedente all'intervento")}else t.push("La data di inizio infezione è obbligatoria se si indica un'infezione");return{isValid:0===t.length,errors:t}}showValidationErrors(e){this.modal.querySelectorAll(".validation-error").forEach(e=>e.remove());const t=document.createElement("div");t.className="alert alert-danger validation-error";const n=document.createElement("strong");n.textContent="Errori di validazione:",t.appendChild(n);const a=document.createElement("ul");a.className="mb-0 mt-2",e.forEach(e=>{const t=document.createElement("li");t.textContent=String(e),a.appendChild(t)}),t.appendChild(a);this.modal.querySelector(".modal-body").prepend(t)}cleanup(){this.datepicker&&(this.datepicker.destroy(),this.datepicker=null),this.modal&&(this.modal.remove(),this.modal=null),this.resolve=null,this.reject=null}}let R=null;async function H(){await async function(){try{const e=[],t=document.getElementById("codice_dimissione");t&&e.push(h.populateCodiciDimissioneSelect(t));const n=document.getElementById("reparto_destinazione");n&&e.push(h.populateRepartiSelect(n,null,"interno"));const a=document.getElementById("codice_clinica");a&&e.push(h.populateClinicheSelect(a)),await Promise.all(e)}catch(e){console.error("Errore nel caricamento dati lookup:",e),s.error("Errore nel caricamento delle opzioni del form")}}(),p('#form-inserimento [data-custom="true"]'),R=new u("[data-datepicker]",{dateFormat:"d/m/Y",allowInput:!0}),function(){const e=document.getElementById("tipo_dimissione");e&&e.addEventListener("change",e=>{W(e.target.value)});const t=document.getElementById("nome"),n=document.getElementById("cognome");t&&n&&[t,n].forEach(e=>{e.addEventListener("input",U)})}(),function(){const e=document.getElementById("infetto"),t=document.querySelector('label[for="infetto"]');if(!e||!t)return;e.addEventListener("change",async e=>{if(e.target.checked){const t=await J();t?(o.setInfectionData(t),Q(),X()):(e.target.checked=!1,o.clearInfectionData(),Q(),X())}else!function(){o.clearInfectionData(),Q();const e=document.getElementById("infetto");e&&e.checked&&(e.checked=!1);X()}(),X()}),Q()}(),function(){const e=document.getElementById("ha_intervento"),t=document.querySelector('label[for="ha_intervento"]');if(!e||!t)return;e.addEventListener("change",async e=>{if(e.target.checked){const t=await G();t?(y.setSurgeryData(t),K(),X()):(e.target.checked=!1,y.clearSurgeryData(),K(),X())}else!function(){y.clearSurgeryData(),K();const e=document.getElementById("ha_intervento");e&&e.checked&&(e.checked=!1);X()}(),X()}),K()}(),S(Y)}function W(e){const t=document.getElementById("reparto-destinazione-container"),n=document.getElementById("clinica-destinazione-container"),a=document.getElementById("codice-clinica-container");switch(t.style.display="none",n.style.display="none",a.style.display="none",document.getElementById("reparto_destinazione").value="",document.getElementById("clinica_destinazione").value="",document.getElementById("codice_clinica").value="",e){case"trasferimento_interno":t.style.display="block";break;case"trasferimento_esterno":n.style.display="block",a.style.display="block"}setTimeout(()=>{if("trasferimento_interno"===e){const e=document.getElementById("reparto_destinazione");e&&!e.customSelectInstance&&p("#reparto_destinazione")}else if("trasferimento_esterno"===e){const e=document.getElementById("codice_clinica");e&&!e.customSelectInstance&&p("#codice_clinica")}},50)}function Y(){const e=document.getElementById("infetto"),t=document.getElementById("infetto-helper-text");if(!e||!t)return;const n=V(),a=o.hasValidInfectionData();n?(e.checked=!0,e.disabled=!0,t.textContent="Stato gestito dagli eventi di infezione attivi.",t.style.display="block",a&&(o.clearInfectionData(),Q())):(e.disabled=!1,e.checked=a,t.style.display="none",Q())}function U(){const e=document.getElementById("inserimento-title");if(!e)return;const t=document.getElementById("nome"),n=document.getElementById("cognome"),a=document.getElementById("paziente-id");if(a&&a.value){const a=`${t?t.value.trim():""} ${n?n.value.trim():""}`.trim();e.innerHTML=c(a?`<span class="material-icons text-primary me-2">person</span><span class="patient-name fw-bold">${a}</span>`:'<span class="material-icons text-primary me-2">person</span>Nome Cognome')}else e.innerHTML=c('<span class="material-icons me-2">person_add</span>Inserimento Nuovo Paziente')}async function G(){const e=document.getElementById("nome"),t=document.getElementById("cognome"),n=e&&t?`${e.value.trim()} ${t.value.trim()}`.trim():"",a=y.getSurgeryData(),o=new F({title:"Dati Intervento Chirurgico",patientName:n||"Nuovo Paziente",defaultDate:a?.data_evento||(new Date).toISOString().split("T")[0]});try{return await o.show()}catch(i){return console.error("Errore nella modal di intervento:",i),s.error("Errore nell'apertura della modal di intervento"),null}}async function J(){const e=document.getElementById("nome"),t=document.getElementById("cognome"),n=e&&t?`${e.value.trim()} ${t.value.trim()}`.trim():"",a=o.getInfectionData(),i=new A({title:"Dati Infezione Paziente",patientName:n||"Nuovo Paziente",defaultDate:a?.data_evento||(new Date).toISOString().split("T")[0]});try{return await i.show()}catch(r){return console.error("Errore nella modal di infezione:",r),s.error("Errore nell'apertura della modal di infezione"),null}}function K(){const e=document.querySelector('label[for="ha_intervento"]'),t=document.getElementById("ha_intervento");if(!e||!t)return;const n=e.querySelector(".surgery-data-badge");if(n&&n.remove(),y.hasSurgeryData()){const t=y.hasValidSurgeryData(),n=document.createElement("span");n.className="badge ms-2 surgery-data-badge "+(t?"bg-success":"bg-warning"),n.innerHTML=t?'<span class="material-icons" style="font-size: 12px;">check_circle</span> Dati inseriti':'<span class="material-icons" style="font-size: 12px;">warning</span> Dati incompleti',e.appendChild(n);const a=y.getSurgeryData();if(a){n.title=`Data: ${a.data_evento||"Non specificata"}\nTipo: ${a.tipo_intervento||"Non specificato"}${a.has_infection?" + Infezione":""}`}n.style.cursor="pointer",n.addEventListener("click",async e=>{e.preventDefault(),e.stopPropagation();const t=await G();t&&(y.setSurgeryData(t),K())})}}function Q(){const e=document.querySelector('label[for="infetto"]'),t=document.getElementById("infetto");if(!e||!t)return;const n=e.querySelector(".infection-data-badge");if(n&&n.remove(),o.hasInfectionData()){const t=o.hasValidInfectionData(),n=document.createElement("span");n.className="badge ms-2 infection-data-badge "+(t?"bg-success":"bg-warning"),n.innerHTML=t?'<span class="material-icons" style="font-size: 12px;">check_circle</span> Dati inseriti':'<span class="material-icons" style="font-size: 12px;">warning</span> Dati incompleti',e.appendChild(n);const a=o.getInfectionData();a&&(n.title=`Data: ${a.data_evento||"Non specificata"}\nAgente: ${a.agente_patogeno||"Non specificato"}`),n.style.cursor="pointer",n.addEventListener("click",async e=>{e.preventDefault(),e.stopPropagation();const t=await J();t&&(o.setInfectionData(t),Q())})}}function X(){e(async()=>{const{createTemporaryEventsFromCheckboxes:e}=await Promise.resolve().then(()=>O);return{createTemporaryEventsFromCheckboxes:e}},void 0).then(({createTemporaryEventsFromCheckboxes:e})=>{e()}).catch(e=>{console.warn("Impossibile aggiornare la tab eventi clinici:",e)})}async function Z(){const t=document.getElementById("form-inserimento"),n=new FormData(t),a=Object.fromEntries(n.entries()),i=V(),r=o.hasValidInfectionData(),s=y.hasValidSurgeryData(),c=s&&y.hasAssociatedInfection();if(a.infetto=i||r||c,r&&!i){const e=o.getInfectionData();a._hasInfectionData=!0,a._infectionData=e,a._requiresInfectionEvent=!0}if(s){const e=y.getSurgeryData();a._hasSurgeryData=!0,a._surgeryData=e,a._requiresSurgeryEvent=!0}["data_nascita","data_ricovero","data_dimissione","data_infezione","data_evento"].forEach(e=>{if(a[e]&&a[e].includes("/")){const[t,n,o]=a[e].split("/");a[e]=`${o}-${n.padStart(2,"0")}-${t.padStart(2,"0")}`}else a[e]?console.log(`Data ${e} già in formato corretto: ${a[e]}`):console.log(`Data ${e} vuota o non presente`)}),Object.keys(a).forEach(e=>{""!==a[e]&&null!=a[e]||(a[e]=null)});const l=a.tipo_dimissione;"trasferimento_interno"!==l&&(a.reparto_destinazione=null,a.reparto_destinazione_id=null),"trasferimento_esterno"!==l&&(a.clinica_destinazione=null,a.codice_clinica=null,a.clinica_destinazione_id=null),delete a.ha_intervento;return["nome","cognome","data_ricovero"].forEach(e=>{a[e]&&""!==a[e].toString().trim()||console.error(`Campo obbligatorio mancante: ${e}`,a)}),await async function(t){try{const{codiciDimissioneService:n,repartiService:a,clinicheService:o}=await e(async()=>{const{codiciDimissioneService:e,repartiService:t,clinicheService:n}=await import("./index-DKR2DvA9.js");return{codiciDimissioneService:e,repartiService:t,clinicheService:n}},__vite__mapDeps([6,7,1,2,3,4]));if(t.codice_dimissione&&!isNaN(t.codice_dimissione)){const e=await n.getById(parseInt(t.codice_dimissione));e&&(t.codice_dimissione_id=parseInt(t.codice_dimissione),t.codice_dimissione=e.codice)}if(t.reparto_destinazione&&!isNaN(t.reparto_destinazione)){const e=await a.getById(parseInt(t.reparto_destinazione));e&&(t.reparto_destinazione_id=parseInt(t.reparto_destinazione),t.reparto_destinazione=e.nome)}if(t.codice_clinica&&!isNaN(t.codice_clinica)){const e=await o.getById(parseInt(t.codice_clinica));e&&(t.clinica_destinazione_id=parseInt(t.codice_clinica),t.codice_clinica=e.codice)}}catch(n){console.error("Errore nella conversione campi normalizzati:",n)}}(a),a}function ee(e,t){const n=String(t||"info").toLowerCase();switch(console.log("🔍 [showFeedbackMessage] Input:",{message:e,type:n}),n){case"success":case"ok":case"successo":s.success(e);break;case"error":case"danger":case"errore":s.error(e);break;case"warning":case"warn":case"avviso":case"alert":s.warning(e);break;default:r.debug("[showFeedbackMessage] Calling notificationService.info with:",e);const t=s.info(e);r.debug("[showFeedbackMessage] notificationService.info result:",t)}}async function te(){const t=document.getElementById("form-inserimento");if(!t)return console.error("Elemento form #form-inserimento non trovato!"),void 0;const n=function(){const e=sessionStorage.getItem("editPazienteId");return e?{mode:"edit",patientId:e}:{mode:"create",patientId:null}}(),a=t=>async function(t,n){t.preventDefault();const a=await Z();try{ee("Salvataggio in corso...","info");const t={},o={};let i;if(Object.keys(a).forEach(e=>{e.startsWith("_")?o[e]=a[e]:t[e]=a[e]}),"edit"===n.mode){if(i=await I(t,n.patientId),o._hasInfectionData&&o._infectionData){const{patientService:t}=await e(async()=>{const{patientService:e}=await import("./patientService-DqU4UNQ3.js");return{patientService:e}},__vite__mapDeps([8,3,5,1,2,4]));await t.handleInfectionEventCreation(n.patientId,o._infectionData)}const{getTemporaryEvents:a}=await e(async()=>{const{getTemporaryEvents:e}=await Promise.resolve().then(()=>O);return{getTemporaryEvents:e}},void 0),r=a();if(r&&r.length>0){const{patientService:t}=await e(async()=>{const{patientService:e}=await import("./patientService-DqU4UNQ3.js");return{patientService:e}},__vite__mapDeps([8,3,5,1,2,4]));await t.handleTemporaryEventsCreation(n.patientId,r)}}else{const n=o._hasInfectionData&&o._infectionData,a=o._hasSurgeryData&&o._surgeryData;if(n||a){const{patientService:r}=await e(async()=>{const{patientService:e}=await import("./patientService-DqU4UNQ3.js");return{patientService:e}},__vite__mapDeps([8,3,5,1,2,4]));n&&a?i=(await r.createPatientWithSurgeryAndInfection(t,o._surgeryData,o._infectionData)).patient:a?i=(await r.createPatientWithSurgery(t,o._surgeryData)).patient:n&&(i=(await r.createPatientWithInfection(t,o._infectionData)).patient)}else{const{getTemporaryEvents:n}=await e(async()=>{const{getTemporaryEvents:e}=await Promise.resolve().then(()=>O);return{getTemporaryEvents:e}},void 0),a=n();if(a&&a.length>0){const{patientService:n}=await e(async()=>{const{patientService:e}=await import("./patientService-DqU4UNQ3.js");return{patientService:e}},__vite__mapDeps([8,3,5,1,2,4]));i=(await n.createPatientWithTemporaryEvents(t,a)).patient}else i=await I(t,null)}}if(i&&i.id){const{setCurrentPatient:t}=await e(async()=>{const{setCurrentPatient:e}=await Promise.resolve().then(()=>O);return{setCurrentPatient:e}},void 0);t(i.id)}ee(`Paziente ${"edit"===n.mode?"aggiornato":"inserito"} con successo!`,"success"),setTimeout(()=>l("list"),1500)}catch(o){ee(o.message,"danger")}}(t,n);try{const[i,r]=await Promise.all([_(),"edit"===n.mode?E(n.patientId):Promise.resolve(null)]);!function(e){const t=document.getElementById("diagnosi");t&&(t.innerHTML=c('<option value="">Seleziona diagnosi...</option>'),e.forEach(e=>{const n=document.createElement("option");n.value=e.nome,n.textContent=e.nome,t.appendChild(n)}),g("#diagnosi"))}(i);const s=document.getElementById("inserimento-title");if(s&&(r?(s.innerHTML=`\n          <span class="patient-name fw-bold">${r.nome} ${r.cognome}</span>\n        `,function(e){if(!e)return;const t=(e,t)=>{const n=document.getElementById(e);n?"checkbox"===n.type?n.checked=Boolean(t):n.value=t||"":console.warn(`Elemento con ID '${e}' non trovato durante populateForm`)},n=e=>{if(!e)return"";if(e.includes("-")){const[t,n,a]=e.split("-");return`${a}/${n}/${t}`}return e};t("paziente-id",e.id),t("nome",e.nome),t("cognome",e.cognome),t("data_nascita",n(e.data_nascita)),t("data_ricovero",n(e.data_ricovero)),t("data_dimissione",n(e.data_dimissione)),t("diagnosi",e.diagnosi),t("reparto_appartenenza",e.reparto_appartenenza),t("reparto_provenienza",e.reparto_provenienza),t("livello_assistenza",e.livello_assistenza),t("codice_rad",e.codice_rad),t("infetto",e.infetto),t("tipo_dimissione",e.tipo_dimissione),t("clinica_destinazione",e.clinica_destinazione),t("reparto_destinazione",e.reparto_destinazione_id||e.reparto_destinazione),t("codice_clinica",e.clinica_destinazione_id||e.codice_clinica),t("codice_dimissione",e.codice_dimissione_id||e.codice_dimissione),W(e.tipo_dimissione||""),o.clearInfectionData(),y.clearSurgeryData(),Q(),K(),j(e.id);const a=`${e.nome||""} ${e.cognome||""}`.trim(),i=a?`<span class="patient-name fw-bold">${a}</span>`:'<span class="patient-name fw-bold">Nome Cognome</span>';document.getElementById("inserimento-title").innerHTML=c(i),document.getElementById("save-patient-btn").innerHTML=c('<span class="material-icons me-1" style="vertical-align: middle;">save</span>Aggiorna Paziente'),g('#form-inserimento [data-custom="true"]')}(r)):s.innerHTML='\n          <span class="material-icons text-primary me-2">person_add</span>Inserimento Nuovo Paziente\n        '),H(),"edit"===n.mode&&n.patientId){const{setCurrentPatient:t}=await e(async()=>{const{setCurrentPatient:e}=await Promise.resolve().then(()=>O);return{setCurrentPatient:e}},void 0);t(n.patientId)}t.addEventListener("submit",a)}catch(i){ee(i.message,"danger")}return()=>{R&&(R.destroy(),R=null),o.clearInfectionData(),y.clearSurgeryData(),void q(),sessionStorage.removeItem("editPazienteId"),t.removeEventListener("submit",a)}}export{te as initInserimentoView};
