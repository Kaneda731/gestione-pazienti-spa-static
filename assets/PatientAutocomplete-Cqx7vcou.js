import{l as t,n as e,p as i,e as n,a as s}from"./index-CeCqGCeL.js";import{p as r}from"./patientService-DecWM_V_.js";class o{constructor(t={}){this.options={title:"Nessun dato trovato",description:"",icon:"inbox",actionText:"",actionCallback:null,...t}}render(){const t=this.options.actionText?this.renderActionButton():"";return`\n            <div class="text-center text-muted py-5">\n                <span class="material-icons mb-3" style="font-size: 4rem; opacity: 0.5;">${this.options.icon}</span>\n                <h5>${this.options.title}</h5>\n                ${this.options.description?`<p>${this.options.description}</p>`:""}\n                ${t}\n            </div>\n        `}renderForTable(t=7){return`\n            <tr>\n                <td colspan="${t}" class="text-center text-muted py-4">\n                    <div class="d-flex align-items-center justify-content-center flex-column">\n                        <span class="material-icons mb-2" style="font-size: 2rem; opacity: 0.5;">${this.options.icon}</span>\n                        <div>${this.options.title}</div>\n                        ${this.options.description?`<small>${this.options.description}</small>`:""}\n                    </div>\n                </td>\n            </tr>\n        `}renderForCards(){const t=this.options.actionText?this.renderActionButton():"";return`\n            <div class="text-center text-muted p-4">\n                <div class="d-flex align-items-center justify-content-center flex-column">\n                    <span class="material-icons mb-3" style="font-size: 3rem; opacity: 0.5;">${this.options.icon}</span>\n                    <h6>${this.options.title}</h6>\n                    ${this.options.description?`<p class="small">${this.options.description}</p>`:""}\n                    ${t}\n                </div>\n            </div>\n        `}renderCompact(){return`\n            <div class="text-center text-muted py-3">\n                <span class="material-icons me-2" style="font-size: 1.5rem; opacity: 0.5;">${this.options.icon}</span>\n                <span>${this.options.title}</span>\n            </div>\n        `}renderActionButton(){return`\n            <button class="btn btn-primary mt-3" onclick="this.dispatchEvent(new CustomEvent('action'))">\n                ${this.options.actionText}\n            </button>\n        `}static forNoPatients(){return new o({title:"Nessun paziente trovato",description:"Non ci sono pazienti che corrispondono ai criteri di ricerca.",icon:"person_off",actionText:"Aggiungi nuovo paziente"})}static forNoDiagnosis(){return new o({title:"Nessuna diagnosi trovata",description:"Non ci sono diagnosi disponibili nel sistema.",icon:"medical_services",actionText:"Aggiungi diagnosi"})}static forSearchResults(t){return new o({title:"Nessun risultato",description:`Nessun paziente corrisponde alla ricerca "${t}".`,icon:"search_off"})}static forFilteredResults(){return new o({title:"Nessun risultato",description:"Nessun paziente corrisponde ai filtri applicati.",icon:"filter_list_off",actionText:"Rimuovi filtri"})}}const a=new Map,c={hits:0,misses:0,evictions:0};function l(){a.clear(),c.hits=0,c.misses=0,c.evictions=0}function u(t=[]){return t.map(t=>({id:t.id,nome:t.nome,cognome:t.cognome,codice_rad:t.codice_rad,stato:t.stato??t.status??null,data_ricovero:t.data_ricovero,data_dimissione:t.data_dimissione,reparto:t.reparto??null,nomeCompleto:[t.cognome,t.nome].filter(Boolean).join(" ")}))}async function d(i,n={}){try{const e=function(t,e={}){const i=(t||"").trim();if(i.length<2)throw new Error("Search term must be at least 2 characters");if(i.length>100)throw new Error("Search term must be at most 100 characters");const n=e.limit??50;if(n<1||n>100)throw new Error("Limit must be between 1 and 100");const s=["nome","cognome","codice_rad","reparto"],r=e.fields??["nome","cognome","codice_rad"];for(const o of r)if(!s.includes(o))throw new Error(`Invalid search field: ${o}`);return{term:i,...e,limit:n,fields:r}}(i,n),{term:s,activeOnly:o=!0,limit:l=50,fields:d,includeArchived:p=!1}=e,h=function(t,e={}){return`${(t||"").trim().toLowerCase()}::${JSON.stringify({activeOnly:e.activeOnly??!1,limit:e.limit??20,fields:e.fields??["nome","cognome","codice_rad"],includeArchived:e.includeArchived??!1})}`}(s,{activeOnly:o,limit:l,fields:d,includeArchived:p}),m=function(t){const e=a.get(t);return e?Date.now()>e.expiresAt?(a.delete(t),c.misses++,null):(a.delete(t),a.set(t,{...e,accessCount:(e.accessCount||0)+1}),c.hits++,e.data):(c.misses++,null)}(h);if(m)return t?.log?.("🔍 patientSearchService cache HIT",{term:s,count:m.length}),m;t?.log?.("🔍 patientSearchService cache MISS",{term:s,activeOnly:o,limit:l});const v=await r.searchPatients(s,o,l),f=u(Array.isArray(v)?v:[]);return!function(e,i,n=3e5){if(a.size>=100){const e=a.keys().next().value;a.delete(e),c.evictions++,t?.debug?.(`LRU cache eviction: removed ${e}`)}a.set(e,{data:i,expiresAt:Date.now()+n,accessCount:0,createdAt:Date.now()})}(h,f),f}catch(s){throw t?.error?.("❌ patientSearchService.search error",s),e?.error?.(`Errore ricerca pazienti: ${s.message||s}`),s}}const p={search:d,searchRealtime:function(t,{activeOnly:e=!1,debounceMs:i=250,onUpdate:n,onError:s,limit:r=20}={}){let o=!1;const a=setTimeout(async()=>{if(!o)try{const i=await d(t,{activeOnly:e,limit:r});o||n?.(i)}catch(i){o||s?.(i)}},Math.max(0,i));return{cancel(){o=!0,clearTimeout(a)}}},resetCache:l,clearCache:l,getCacheStats:function(){const t=Array.from(a.values()),e=t.length>0?Math.min(...t.map(t=>t.createdAt)):null,i=c.hits+c.misses;return{size:a.size,maxSize:100,hitRate:i>0?c.hits/i:0,totalHits:c.hits,totalMisses:c.misses,totalEvictions:c.evictions,oldestEntry:e}},_normalize:u};function h(t=""){return t.replaceAll("&","&amp;").replaceAll("<","&lt;").replaceAll(">","&gt;").replaceAll('"',"&quot;").replaceAll("'","&#039;")}function m(t="",e=""){const n=e.trim();if(!n)return h(t);try{const e=n.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),s=new RegExp(`(${e})`,"ig"),r=h(t).replace(s,"<mark>$1</mark>");return i.sanitize(r,{ALLOWED_TAGS:["mark"]})}catch{return h(t)}}class v{constructor({input:t,resultsContainer:e,onSelect:i,activeOnly:n=!1,minChars:s=2,debounceMs:r=250}={}){this.input=t,this.results=e,this.onSelect=i,this.activeOnly=!!n,this.minChars=Math.max(0,s),this.debounceMs=Math.max(0,r),this._cleanup=[],this._currentCancel=null}attach(){if(!this.input||!this.results)return{destroy:()=>{}};this.results.style.display="none",this.input.setAttribute("autocomplete","off"),this.input.setAttribute("aria-autocomplete","list");const e=n(async e=>{const i=(e.target.value||"").trim();if(i.length<this.minChars)return this._clearResults(),void 0;this._showLoading();try{const t=await p.search(i,{activeOnly:this.activeOnly});this._renderList(t,i)}catch(n){t.error("PatientAutocomplete search error",n),this._renderEmpty("Errore durante la ricerca.")}},this.debounceMs),i=()=>{this.results.childElementCount>0&&this._open()},s=t=>{"Escape"===t.key&&this._close()},r=t=>{setTimeout(()=>this._close(),100)};return this.input.addEventListener("input",e),this.input.addEventListener("focus",i),this.input.addEventListener("keydown",s),this.input.addEventListener("blur",r),this._cleanup.push(()=>this.input.removeEventListener("input",e)),this._cleanup.push(()=>this.input.removeEventListener("focus",i)),this._cleanup.push(()=>this.input.removeEventListener("keydown",s)),this._cleanup.push(()=>this.input.removeEventListener("blur",r)),{destroy:()=>this.destroy()}}destroy(){this._cleanup.forEach(t=>t()),this._cleanup=[],this._clearResults()}_clearResults(){this.results.innerHTML="",this.results.style.display="none"}_open(){this.results.style.display="block"}_close(){this.results.style.display="none"}_showLoading(){this.results.innerHTML=s('\n      <div class="px-3 py-2 text-muted small d-flex align-items-center">\n        <div class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></div>\n        <span>Ricerca in corso...</span>\n      </div>'),this._open()}_renderEmpty(t="Nessun risultato"){const e=o.forSearchResults(this.input.value||"");e.options.description=t||e.options.description,this.results.innerHTML=s(`<div class="px-2">${e.render()}</div>`),this._open()}_renderList(t=[],e=""){if(!t.length)return this._renderEmpty(),void 0;const i=t.map((t,i)=>{const n=m(`${t.cognome||""} ${t.nome||""}`.trim(),e),s=t.codice_rad?m(`RAD: ${t.codice_rad}`,e):"";return`\n        <button type="button" class="dropdown-item d-flex flex-column" data-id="${t.id}">\n          <span>${n}</span>\n          ${s?`<small class="text-muted">${s}</small>`:""}\n        </button>`}).join("");this.results.innerHTML=s(i),this._open(),Array.from(this.results.querySelectorAll(".dropdown-item")).forEach(e=>{const i=i=>{i.preventDefault(),i.stopPropagation();const n=e.getAttribute("data-id"),s=t.find(t=>String(t.id)===String(n));if(s){const t=`${s.cognome||""} ${s.nome||""}`.trim();this.input.value=t,this.input.dataset.patientId=s.id,this._close(),this.onSelect?.(s)}};e.addEventListener("mousedown",i),e.addEventListener("click",i)})}}function f(t){return new v(t).attach()}export{f as a,p};
