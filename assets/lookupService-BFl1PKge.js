import{s as e,l as r}from"./index-Cgf9e1ls.js";const i=new class{async getAll(){try{const{data:i,error:c}=await e.from("codice_clinica").select("*").eq("attivo",!0).order("codice");if(c)throw r.error("Errore nel recupero codici clinica:",c),c;return i||[]}catch(i){throw r.error("Errore nel servizio codici clinica:",i),i}}async getById(i){try{const{data:c,error:o}=await e.from("codice_clinica").select("*").eq("id",i).single();if(o)throw r.error("Errore nel recupero codice clinica:",o),o;return c}catch(c){throw r.error("Errore nel servizio codice clinica:",c),c}}async getByCodice(i){try{const{data:c,error:o}=await e.from("codice_clinica").select("*").eq("codice",i).eq("attivo",!0).single();if(o)throw r.error("Errore nel recupero codice clinica:",o),o;return c}catch(c){throw r.error("Errore nel servizio codice clinica:",c),c}}};const c=new class{async getAll(){try{const{data:i,error:c}=await e.from("codici_dimissione").select("*").eq("attivo",!0).order("codice");if(c)throw r.error("Errore nel recupero codici dimissione:",c),c;return i||[]}catch(i){throw r.error("Errore nel servizio codici dimissione:",i),i}}async getById(i){try{const{data:c,error:o}=await e.from("codici_dimissione").select("*").eq("id",i).single();if(o)throw r.error("Errore nel recupero codice dimissione:",o),o;return c}catch(c){throw r.error("Errore nel servizio codice dimissione:",c),c}}async getByCodice(i){try{const{data:c,error:o}=await e.from("codici_dimissione").select("*").eq("codice",i).eq("attivo",!0).single();if(o)throw r.error("Errore nel recupero codice dimissione:",o),o;return c}catch(c){throw r.error("Errore nel servizio codice dimissione:",c),c}}};const o=new class{async getAll(i=null){try{let c=e.from("reparti").select("*").eq("attivo",!0).order("nome");i&&(c=c.eq("tipo",i));const{data:o,error:t}=await c;if(t)throw r.error("Errore nel recupero reparti:",t),t;return o||[]}catch(c){throw r.error("Errore nel servizio reparti:",c),c}}async getRepartiInterni(){return this.getAll("interno")}async getById(i){try{const{data:c,error:o}=await e.from("reparti").select("*").eq("id",i).single();if(o)throw r.error("Errore nel recupero reparto:",o),o;return c}catch(c){throw r.error("Errore nel servizio reparto:",c),c}}async getByNome(i){try{const{data:c,error:o}=await e.from("reparti").select("*").eq("nome",i).eq("attivo",!0).single();if(o)throw r.error("Errore nel recupero reparto:",o),o;return c}catch(c){throw r.error("Errore nel servizio reparto:",c),c}}};const t=new class{constructor(){this.cache={codiciDimissione:null,reparti:null,cliniche:null,lastUpdate:null},this.cacheTimeout=3e5}isCacheValid(){return this.cache.lastUpdate&&Date.now()-this.cache.lastUpdate<this.cacheTimeout}async loadAll(e=!1){try{if(!e&&this.isCacheValid())return{codiciDimissione:this.cache.codiciDimissione,reparti:this.cache.reparti,cliniche:this.cache.cliniche};r.info("Caricamento dati di lookup...");const[t,a,n]=await Promise.all([c.getAll(),o.getAll(),i.getAll()]);return this.cache={codiciDimissione:t,reparti:a,cliniche:n,lastUpdate:Date.now()},r.info("Dati di lookup caricati con successo"),{codiciDimissione:t,reparti:a,cliniche:n}}catch(t){throw r.error("Errore nel caricamento dati di lookup:",t),t}}async populateCodiciDimissioneSelect(e,i=null){try{const{codiciDimissione:r}=await this.loadAll(),c=e.querySelector('option[value=""]');c?e.replaceChildren(c):e.replaceChildren(),r.forEach(r=>{const c=document.createElement("option");c.value=r.id,c.textContent=`${r.codice} - ${r.descrizione}`,c.dataset.codice=r.codice,!i||i!=r.id&&i!=r.codice||(c.selected=!0),e.appendChild(c)}),e.dispatchEvent(new Event("change"))}catch(c){r.error("Errore nel popolare select codici dimissione:",c)}}async populateRepartiSelect(e,i=null,c="interno"){try{const r=c?await o.getAll(c):(await this.loadAll()).reparti,t=e.querySelector('option[value=""]');t?e.replaceChildren(t):e.replaceChildren(),r.forEach(r=>{const c=document.createElement("option");c.value=r.id,c.textContent=r.nome,c.dataset.nome=r.nome,!i||i!=r.id&&i!=r.nome||(c.selected=!0),e.appendChild(c)}),e.dispatchEvent(new Event("change"))}catch(t){r.error("Errore nel popolare select reparti:",t)}}async populateClinicheSelect(e,i=null){try{const{cliniche:r}=await this.loadAll(),c=e.querySelector('option[value=""]');c?e.replaceChildren(c):e.replaceChildren(),r.forEach(r=>{const c=document.createElement("option");c.value=r.id,c.textContent=`${r.codice} - ${r.nome}`,c.dataset.codice=r.codice,!i||i!=r.id&&i!=r.codice||(c.selected=!0),e.appendChild(c)}),e.dispatchEvent(new Event("change"))}catch(c){r.error("Errore nel popolare select cliniche:",c)}}invalidateCache(){this.cache={codiciDimissione:null,reparti:null,cliniche:null,lastUpdate:null}}};export{i as a,c,t as l,o as r};
