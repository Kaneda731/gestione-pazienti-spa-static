const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/CustomDatepicker-6By5cdaM.js","assets/utils-BtSsRyB2.js","assets/ConfirmModal-Cfb9NCKT.js","assets/index-jnyeON0Y.js","assets/vendor-CQCqr9ER.js","assets/supabase-B8WzuNbi.js","assets/index-CuzmHIce.css","assets/ResolveInfectionModal-mGmbDoNZ.js"])))=>i.map(i=>d[i]);
import{_ as e}from"./supabase-B8WzuNbi.js";import{l as t,a as n,n as i,b as a}from"./index-jnyeON0Y.js";import{f as o}from"./formatting-C7G90sDQ.js";import{e as r}from"./infectionDataManager-Bhrjdo6k.js";import{d as s,a as l}from"./patientService-CRgw__x3.js";import{p as c,a as d}from"./PatientAutocomplete-DVy7QeXp.js";import{g as m}from"./helpers-BGw4FIrU.js";import{c as v}from"./date-CcL_Wp-e.js";import{initCustomDatepickers as u}from"./CustomDatepicker-6By5cdaM.js";import{i as p}from"./CustomSelect-BcCV6-Xf.js";import"./vendor-CQCqr9ER.js";import"./utils-BtSsRyB2.js";class g{constructor(e,t){this.domElements=e,this.callbacks=t}renderTable(e){try{if(t.log("üé® Rendering tabella eventi:",e),!this.domElements.tableBody)return t.error("‚ùå Container table body non trovato"),void 0;if(this.clearTable(),!e.eventi||0===e.eventi.length)return this.renderEmptyState(),this.updatePaginationControls(e),void 0;const n=this.createTableRows(e.eventi);if(t.debug("üîç [TABLE RENDERER DEBUG]",{tableBody:!!this.domElements.tableBody,tableBodyId:this.domElements.tableBody?.id,rowsHtmlLength:n.length,eventsCount:e.eventi.length}),this.domElements.tableBody){this.domElements.tableBody.innerHTML=n;if(this.domElements.tableBody&&null!=this.domElements.tableBody.children){const n=this.domElements.tableBody.children.length;t.debug("üîç [TABLE RENDERER DEBUG] Righe aggiunte:",n),0===n&&e.eventi.length>0&&t.error("‚ùå [TABLE RENDERER DEBUG] Righe non aggiunte nonostante ci siano eventi!")}}else t.error("‚ùå [TABLE RENDERER DEBUG] tableBody √® null!");this.updatePaginationControls(e),t.log("‚úÖ Tabella renderizzata con successo")}catch(n){t.error("‚ùå Errore rendering tabella:",n),this.callbacks.showError&&this.callbacks.showError("Errore nel rendering della tabella")}}clearTable(){this.domElements.tableBody&&(this.domElements.tableBody.innerHTML=n(""))}renderEmptyState(){if(!this.domElements.tableBody)return;const e=document.createElement("tr"),t=document.createElement("td");t.colSpan=8,t.className="text-center text-muted",t.textContent="Nessun evento trovato",e.appendChild(t),this.domElements.tableBody.appendChild(e)}createTableRows(e){return e.map(e=>this.createTableRow(e)).join("")}createTableRow(e){const t=e.pazienteInfo,i=this.getEventDetails(e),a=this.getStatusBadge(e),r=this.getActionButtons(e),s=this.getTipoBadge(e);return`\n      <tr data-evento-id="${e.id}" class="evento-row">\n        <td>${e.dataEventoFormatted||o(e.data_evento)}</td>\n        <td>${s}</td>\n        <td>${t?n(t.nomeCompleto):"-"}</td>\n        <td>${t?n(t.reparto):"-"}</td>\n        <td><span class="clamp-3">${n(i)}</span></td>\n        <td><span class="clamp-3">${e.descrizione?n(e.descrizione):"-"}</span></td>\n        <td>${a}</td>\n        <td>${r}</td>\n      </tr>\n    `}getEventDetails(e){return"intervento"===e.tipo_evento?e.tipo_intervento||"-":e.agente_patogeno||"-"}getStatusBadge(e){return"infezione"===e.tipo_evento?e.data_fine_evento?`<span class="badge bg-success" title="Risolta il ${e.dataFineEventoFormatted}">Risolta</span>`:'<span class="badge bg-danger" title="Infezione attiva">Attiva</span>':""}getTipoBadge(e){let t,n;e.tipoEventoColor&&e.tipoEventoLabel?(t=e.tipoEventoColor,n=e.tipoEventoLabel):"intervento"===e.tipo_evento?(t="primary",n="Intervento"):"infezione"===e.tipo_evento?(t="warning",n="Infezione"):e.tipo_evento?(t="secondary",n=`Tipo: ${e.tipo_evento}`):(t="secondary",n="Sconosciuto");return`\n      <span class="badge bg-${t}">\n        ${this.renderEventIcon(e.tipoEventoIcon,e.tipo_evento,"white","me-1 align-middle fs-6")}\n        ${n}\n      </span>\n    `.trim()}getActionButtons(e){return`\n      <div class="btn-group btn-group-sm" role="group">\n        <button class="btn btn-sm btn-outline-primary event-detail-btn" data-evento-id="${e.id}" title="Apri dettagli evento" aria-label="Apri dettagli evento">\n          <span class="material-icons align-middle me-1">visibility</span>\n          <span class="btn-text align-middle">Dettagli</span>\n        </button>\n        ${"infezione"!==e.tipo_evento||e.data_fine_evento?"":`\n      <button class="btn btn-sm btn-outline-success event-resolve-btn" data-evento-id="${e.id}" title="Risolvi infezione" aria-label="Risolvi infezione">\n        <span class="material-icons align-middle me-1">check_circle</span>\n        <span class="btn-text align-middle">Risolvi</span>\n      </button>\n    `}\n      </div>\n    `}renderEventIcon(e,t,n="",i=""){(!e||e.includes("fa-")||e.includes("fas "))&&(e="intervento"===t?"medical_services":"warning");return`<span class="material-icons ${[n?`text-${n}`:"",i].filter(Boolean).join(" ")}">${e}</span>`}updatePaginationControls(e){const t=e?.pagination||e||{},n="number"==typeof t.pageSize?t.pageSize:10,i="number"==typeof t.currentPage?t.currentPage:0,a="number"==typeof t.totalPages?t.totalPages:1,o="number"==typeof t.totalCount?t.totalCount:0,r=Boolean(t.hasNextPage),s=Boolean(t.hasPrevPage);if(this.domElements.prevPageBtn&&(this.domElements.prevPageBtn.disabled=!s),this.domElements.nextPageBtn&&(this.domElements.nextPageBtn.disabled=!r),this.domElements.pageInfo){const e=0===o?0:i*n+1,t=0===o?0:Math.min((i+1)*n,o);this.domElements.pageInfo.textContent=`${e}-${t} di ${o} eventi (Pagina ${i+1} di ${a})`}this.domElements.paginationControls&&(this.domElements.paginationControls.style.display=a>1?"flex":"none")}updateTableRow(e){try{const n=this.domElements.tableBody.querySelector(`[data-evento-id="${e.id}"]`);if(!n)return t.warn(`‚ö†Ô∏è Riga evento ${e.id} non trovata nella tabella`),void 0;const i=this.createTableRow(e),a=document.createElement("div");a.innerHTML=i;n.replaceWith(a.firstElementChild),t.log(`‚úÖ Riga evento ${e.id} aggiornata nella tabella`)}catch(n){t.error("‚ùå Errore aggiornamento riga tabella:",n)}}}class h{constructor(e,t){this.domElements=e,this.callbacks=t}renderTimeline(e){try{t.log("üé® Rendering timeline eventi:",e);const n=this.domElements.timelineContainer;if(!n)return t.error("‚ùå Container timeline non trovato"),void 0;if(this.clearTimeline(),!e.eventi||0===e.eventi.length)return this.renderEmptyState(),void 0;const i=this.createTimelineElement(),a=this.groupEventsByDate(e.eventi);Object.keys(a).sort((e,t)=>new Date(t)-new Date(e)).forEach(e=>{const t=this.createDateGroup(e,a[e]);i.appendChild(t)}),n.appendChild(i),this.callbacks.updatePaginationControls&&this.callbacks.updatePaginationControls(e),t.log("‚úÖ Timeline renderizzata con successo")}catch(n){t.error("‚ùå Errore rendering timeline:",n),this.callbacks.showError&&this.callbacks.showError("Errore nel rendering della timeline")}}updateTimelineItem(e){try{const n=this.domElements.timelineContainer.querySelector(`[data-evento-id="${e.id}"]`);if(!n)return t.warn(`‚ö†Ô∏è Evento ${e.id} non trovato nella timeline`),void 0;const i=this.createEventCard(e);n.replaceWith(i),t.log(`‚úÖ Evento ${e.id} aggiornato nella timeline`)}catch(n){t.error("‚ùå Errore aggiornamento timeline item:",n)}}clearTimeline(){const e=this.domElements.timelineContainer;e&&(e.innerHTML=n(""))}createTimelineElement(){const e=document.createElement("div");return e.className="eventi-timeline",e.innerHTML=n('\n      <div class="timeline-line"></div>\n    '),e}groupEventsByDate(e){return e.reduce((e,t)=>{const n=t.data_evento;return e[n]||(e[n]=[]),e[n].push(t),e},{})}createDateGroup(e,t){const n=document.createElement("div");n.className="timeline-date-group";const i=document.createElement("div");i.className="timeline-date-header";const a=document.createElement("div");a.className="timeline-date-marker";const r=document.createElement("h5");return r.className="timeline-date-title",r.textContent=o(e),i.appendChild(a),i.appendChild(r),n.appendChild(i),t.sort((e,t)=>new Date(t.created_at||0)-new Date(e.created_at||0)),t.forEach(e=>{const t=this.createEventCard(e);n.appendChild(t)}),n}createEventCard(e){const t=document.createElement("div"),i="infezione"===e.tipo_evento;t.className=`card card-list-compact timeline-event-card ${i?i&&!e.data_fine_evento?"status-infected":"status-error":"status-success"} evento-${e.tipo_evento}`,t.dataset.eventoId=e.id;const a=e.tipoEventoIcon||("intervento"===e.tipo_evento?"medical_services":"warning"),r=e.tipoEventoColor||("intervento"===e.tipo_evento?"primary":"warning"),s=e.tipoEventoLabel||("intervento"===e.tipo_evento?"Intervento":"Infezione"),l=i?e.data_fine_evento?'<span class="badge bg-success ms-1" style="font-size:0.7em;">Risolta</span>':'<span class="badge bg-warning text-dark ms-1" style="font-size:0.7em;"><span class="material-icons" style="font-size:0.8em;vertical-align:middle;">warning</span> Attiva</span>':"",c="intervento"===e.tipo_evento?e.tipo_intervento||"-":e.agente_patogeno||(e.data_fine_evento?"Infezione risolta":"Infezione attiva"),d=e.pazienteInfo?`\n          <div class="card-meta mobile-text-sm mt-1">\n            <div class="d-flex align-items-center">\n              <span class="material-icons me-1" style="font-size:1em;vertical-align:middle;">person</span>\n              <span class="patient-name">${n(e.pazienteInfo.nomeCompleto)}</span>\n            </div>\n            <div class="mt-1">\n              <span class="badge bg-secondary">${n(e.pazienteInfo.reparto)}</span>\n            </div>\n          </div>\n        `:"",m=this.renderEventCardDetails(e),v=`\n        <div class="card-body">\n          <div class="card-info">\n            <div class="card-title d-flex align-items-center gap-2">\n              ${this.renderEventIcon(a,e.tipo_evento,r)}\n              <span class="fw-bold">${s}</span>\n              ${l}\n            </div>\n            <div class="card-meta mobile-text-sm">\n              ${o(e.data_evento)} ‚Ä¢ ${n(c)}\n            </div>\n            ${d}\n          </div>\n          <div class="event-card-body mt-2 mobile-text-sm text-muted">\n            ${m}\n          </div>\n          <div class="mt-2 text-end">\n            <div class="btn-group btn-group-sm" role="group">\n              <button class="btn btn-outline-primary event-detail-btn" data-evento-id="${e.id}" title="Apri dettagli evento" aria-label="Apri dettagli evento">\n                <span class="material-icons align-middle me-1">visibility</span>\n                <span class="btn-text align-middle">Dettagli</span>\n              </button>\n            </div>\n          </div>\n        </div>\n    `;return t.innerHTML=n(v),t}renderEventCardDetails(e){let t="";return e.descrizione&&(t+=`<p class="event-description">${n(e.descrizione)}</p>`),"intervento"===e.tipo_evento?e.tipo_intervento&&(t+=`\n          <div class="event-detail-item">\n            <strong>Tipo Intervento:</strong> ${n(e.tipo_intervento)}\n          </div>\n        `):"infezione"===e.tipo_evento&&e.agente_patogeno&&(t+=`\n          <div class="event-detail-item">\n            <strong>Agente Patogeno:</strong> ${n(e.agente_patogeno)}\n          </div>\n        `),t||'<p class="text-muted">Nessun dettaglio aggiuntivo</p>'}renderEventIcon(e,t,n,i=""){return`<span class="material-icons text-${n||("intervento"===t?"primary":"warning")} ${i}">${e||("intervento"===t?"medical_services":"warning")}</span>`}renderEmptyState(){const e=this.domElements.timelineContainer;if(!e)return;e.innerHTML=n("");const t=document.createElement("div");t.className="empty-state text-center py-5";const i=document.createElement("div");i.className="empty-state-icon mb-3",i.innerHTML=n('<span class="material-icons text-muted" style="font-size:48px;">event_busy</span>'),t.appendChild(i);const a=document.createElement("h4");a.className="text-muted",a.textContent="Nessun evento trovato",t.appendChild(a);const o=document.createElement("p");o.className="text-muted",o.textContent="Non ci sono eventi clinici che corrispondono ai filtri selezionati.",t.appendChild(o);const r=document.createElement("button");r.className="btn btn-primary",r.id="add-first-event-btn",r.innerHTML=n('<span class="material-icons me-1">add</span> Aggiungi primo evento'),t.appendChild(r),e.appendChild(t),r.addEventListener("click",()=>{const e=this.domElements.addEventBtn;e&&e.click()})}}function f(e,t,i){let a=document.getElementById("search-results-info");if(!a){a=document.createElement("div"),a.id="search-results-info",a.className="search-results-info text-muted mb-3";const e=document.getElementById("eventi-timeline-container");e&&e.parentNode&&e.parentNode.insertBefore(a,e)}Object.values(i||{}).some(e=>e&&""!==e.toString().trim())?(a.innerHTML=n(`\n      <span class="material-icons me-1">filter_list</span>\n      Trovati <strong>${e}</strong> eventi su ${t} totali\n      ${i.paziente_search?`per "${n(i.paziente_search)}"`:""}\n    `),a.style.display="block"):a&&(a.style.display="none")}let E=null,y=null,b=null;function z(e){E=e}function _(){y?y.domElements=E:y=new g(E,{showError:S,updatePaginationControls:()=>{}}),b?b.domElements=E:b=new h(E,{showError:S,updatePaginationControls:()=>{}})}function w(e){if(t.log("üé® renderEventsResponsive chiamata con:",e),!E||0===Object.keys(E).length)return t.error("‚ùå domElements non inizializzati in renderEventsResponsive"),void 0;const n=window.innerWidth>=1200;t.log("üì± useTable:",n,"window.innerWidth:",window.innerWidth),E.tableContainer?E.tableContainer.style.display=n?"block":"none":t.warn("‚ö†Ô∏è tableContainer non trovato"),E.timelineContainer?E.timelineContainer.style.display=n?"none":"block":t.warn("‚ö†Ô∏è timelineContainer non trovato"),_(),n?(t.log("üîß Rendering tabella (renderer)"),y.renderTable(e)):(t.log("üîß Rendering timeline (renderer)"),b.renderTimeline(e));try{void("undefined"!=typeof window&&window.applyResponsiveDesign&&window.applyResponsiveDesign())}catch(i){t.warn("‚ö†Ô∏è applyResponsiveDesign fallita dopo renderEventsResponsive:",i)}}function F(e){try{if(!E||!E.timelineContainer)return t.error("‚ùå Container timeline non trovato"),void 0;t.log("üé® Rendering timeline (renderer):",e),_(),b.renderTimeline(e)}catch(n){t.error("‚ùå Errore rendering timeline:",n),S("Errore nel rendering della timeline")}}function C(e){try{t.log("üé® Rendering tabella (renderer):",e),_(),y.renderTable(e)}catch(n){t.error("‚ùå Errore rendering tabella eventi:",n),S("Errore nel rendering della tabella")}}function I(){E.timelineContainer&&(E.timelineContainer.innerHTML=n('\n      <div class="loading-state text-center py-5">\n        <div class="spinner-border text-primary mb-3" role="status">\n          <span class="visually-hidden">Caricamento...</span>\n        </div>\n        <p class="text-muted">Caricamento eventi clinici...</p>\n      </div>\n    ')),E.tableBody&&(E.tableBody.innerHTML=n('\n      <tr>\n        <td colspan="8" class="text-center">\n          <div class="spinner-border text-primary" role="status">\n            <span class="visually-hidden">Caricamento...</span>\n          </div>\n        </td>\n      </tr>\n    '))}function S(e="Errore nel caricamento dei dati"){E.timelineContainer&&(E.timelineContainer.innerHTML=n(`\n      <div class="error-state text-center py-5">\n        <div class="error-state-icon mb-3">\n          <span class="material-icons text-danger" style="font-size:48px;">warning</span>\n        </div>\n        <h4 class="text-danger">Errore</h4>\n        <p class="text-muted">${n(e)}</p>\n        <button class="btn btn-outline-primary" onclick="location.reload()">\n          <span class="material-icons me-1">refresh</span>\n          Riprova\n        </button>\n      </div>\n    `)),E.tableBody&&(E.tableBody.innerHTML=n(`\n      <tr>\n        <td colspan="8" class="text-center text-danger">\n          <strong>${n(e)}</strong>\n        </td>\n      </tr>\n    `))}function D(){if(!E.timelineContainer)return;const e=E.timelineContainer;if(e.querySelector(".searching-state"))return;const t=document.createElement("div");t.className="searching-state text-center py-4";const n=document.createElement("div");n.className="spinner-border spinner-border-sm text-primary me-2",n.setAttribute("role","status");const i=document.createElement("span");i.className="visually-hidden",i.textContent="Ricerca in corso...",n.appendChild(i);const a=document.createElement("span");a.className="text-muted",a.textContent="Ricerca in corso...",t.append(n,a),e.prepend(t)}function T(){const e=document.querySelector(".searching-state");e&&e.remove()}function B(e,t){const i=document.getElementById(t);if(!i)return;if(!e||0===e.length)return i.style.display="none",void 0;const a=e.map(e=>function(e){const t=e.nomeCompleto||`${e.nome||""} ${e.cognome||""}`.trim(),i=e.reparto_appartenenza||e.reparto||"",a=e.dataRicoveroFormatted||"",o="boolean"==typeof e.isActive?e.isActive:"Attivo"===e.status,r=o?"badge bg-success":"badge bg-secondary";return`\n    <div class="dropdown-item patient-search-result" data-patient-id="${n(e.id)}">\n      <div class="d-flex align-items-center w-100">\n        <div class="flex-grow-1">\n          <div class="fw-bold">${n(t)}</div>\n          <div class="text-muted small">\n            ${n(i)}${a?` ‚Ä¢ ${n(a)}`:""}\n          </div>\n        </div>\n        <span class="${r}">${o?"Attivo":"Dimesso"}</span>\n      </div>\n    </div>\n  `}(e)).join("");i.innerHTML=n(a),i.style.display="block",function(e,t){const n=e.querySelectorAll(".patient-search-result");n.forEach(n=>{n.addEventListener("click",function(){const n=this.dataset.patientId,i=this.querySelector(".fw-bold").textContent;if("patient-search-results"===t){const e=document.getElementById("paziente-nome");e&&(e.value=i,e.dataset.patientId=n)}e.style.display="none"})})}(i,t)}function L(e){if(!E||!E.detailContent)return;const i=function(e){const t="infezione"===e.tipo_evento,n=t&&!e.data_fine_evento,i="infezione"===e.tipo_evento?`<div class="col-md-6">\n         <strong>Stato:</strong>\n         <div class="mt-1">\n           ${e.data_fine_evento?`<span class="badge bg-success">Risolta il ${o(e.data_fine_evento)}</span>`:'<span class="badge bg-danger">Attiva</span>'}\n         </div>\n       </div>`:"",a=e.pazienteInfo?`<div class="col-12">\n         <strong>Paziente:</strong>\n         <div class="mt-1">\n           <span class="material-icons me-1">person</span>\n           ${e.pazienteInfo.nomeCompleto}\n           <span class="badge bg-secondary ms-2">${e.pazienteInfo.reparto}</span>\n         </div>\n       </div>`:"",r=e.descrizione?`<div class="col-12">\n         <strong>Descrizione:</strong>\n         <div class="mt-1">${e.descrizione}</div>\n       </div>`:"",s=function(e){if("intervento"===e.tipo_evento&&e.tipo_intervento)return`\n      <div class="col-12">\n        <strong>Tipo Intervento:</strong>\n        <div class="mt-1">${e.tipo_intervento}</div>\n      </div>\n    `;if("infezione"===e.tipo_evento&&e.agente_patogeno)return`\n      <div class="col-12">\n        <strong>Agente Patogeno:</strong>\n        <div class="mt-1">${e.agente_patogeno}</div>\n      </div>\n    `;return""}(e),l=function(e){const t=e.updated_at&&e.updated_at!==e.created_at?`<div class="col-md-6">\n         <strong>Modificato il:</strong>\n         <div class="mt-1 text-muted">${o(e.updated_at)}</div>\n       </div>`:"";return`\n    <div class="col-md-6">\n      <strong>Creato il:</strong>\n      <div class="mt-1 text-muted">${o(e.created_at)}</div>\n    </div>\n    ${t}\n  `}(e),c=n?`<button class="btn btn-success btn-sm event-resolve-btn" data-evento-id="${e.id}" title="Risolvi">\n         <span class="material-icons align-middle me-1">check_circle</span>\n         Risolvi\n       </button>`:"",d=`\n    <div class="event-detail-actions d-flex flex-wrap gap-2 justify-content-end mb-3">\n      <button class="btn btn-outline-secondary btn-sm event-edit-btn" data-evento-id="${e.id}" title="Modifica">\n        <span class="material-icons align-middle me-1">edit</span>\n        Modifica\n      </button>\n      <button class="btn btn-outline-danger btn-sm event-delete-btn" data-evento-id="${e.id}" title="Elimina">\n        <span class="material-icons align-middle me-1">delete</span>\n        Elimina\n      </button>\n      ${c}\n    </div>`;return`\n    <div class="event-details">\n      ${d}\n      <div class="row g-3">\n        <div class="col-md-6">\n          <strong>Tipo Evento:</strong>\n          <div class="d-flex align-items-center mt-1">\n            ${function(e,t,n,i=""){const a=e=>"intervento"===e?"local_hospital":"infezione"===e?"bug_report":"event",o="string"==typeof e&&/\bfa[srldb]?\b|fa-/.test(e)?a(t):e||a(t);return`<span class="${["material-icons","white"===n?"text-white":n?`text-${n}`:"",i].filter(Boolean).join(" ")}">${o}</span>`}(e.tipoEventoIcon,e.tipo_evento,e.tipoEventoColor,"me-2")}\n            ${e.tipoEventoLabel}\n          </div>\n        </div>\n        <div class="col-md-6">\n          <strong>Data Evento:</strong>\n          <div class="mt-1">${e.dataEventoFormatted}</div>\n        </div>\n        ${i}\n        ${a}\n        ${r}\n        ${s}\n        ${l}\n      </div>\n    </div>\n  `}(e);E.detailContent.innerHTML=n(i);try{const e=E.eventDetailModal;if(e){const t=e.querySelector(".modal-footer");t&&(t.querySelectorAll(".event-edit-btn, .event-delete-btn").forEach(e=>e.remove()),t.querySelector("*")&&""!==t.textContent.trim()||t.classList.add("d-none"))}}catch(a){t.warn("Footer cleanup dettagli evento non riuscito:",a)}}function M(e){const t=document.getElementById("active-filters-indicator");t&&(e>0?(t.innerHTML=n(`\n      <span class="badge bg-primary me-2">\n        <span class="material-icons" style="font-size: 14px;">filter_list</span>\n        ${e} filtri attivi\n      </span>\n    `),t.style.display="block"):t.style.display="none")}function P(e){const t=document.getElementById("filter-stats");if(!t)return;if(!e)return t.style.display="none",void 0;t.innerHTML=n(`\n    <div class="filter-stats-content">\n      <div class="stats-item">\n        <span class="material-icons">event</span>\n        <span>${e.totalEvents||0} eventi totali</span>\n      </div>\n      <div class="stats-item">\n        <span class="material-icons">visibility</span>\n        <span>${e.filteredEvents||0} eventi visualizzati</span>\n      </div>\n      <div class="stats-item">\n        <span class="material-icons">date_range</span>\n        <span>${e.dateRange||"Tutto il periodo"}</span>\n      </div>\n    </div>\n  `),t.style.display="block"}function R(e="Esportazione in corso..."){const t=document.getElementById("export-progress");t&&(t.innerHTML=n(`\n    <div class="export-progress-content">\n      <div class="spinner-border spinner-border-sm me-2" role="status">\n        <span class="visually-hidden">Esportazione...</span>\n      </div>\n      <span>${n(e)}</span>\n    </div>\n  `),t.style.display="block")}function $(t){const i=document.getElementById("export-progress");i&&(i.style.display="none");const a=document.createElement("div");a.className="toast align-items-center text-white bg-success border-0",a.setAttribute("role","alert"),a.innerHTML=n(`\n    <div class="d-flex">\n      <div class="toast-body">\n        <span class="material-icons me-2">download</span>\n        Esportati ${t.count} eventi in ${n(t.filename)}\n      </div>\n      <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>\n    </div>\n  `);let o=document.getElementById("toast-container");o||(o=document.createElement("div"),o.id="toast-container",o.className="toast-container position-fixed top-0 end-0 p-3",document.body.appendChild(o)),o.appendChild(a),e(async()=>{const{Toast:e}=await import("./vendor-CQCqr9ER.js");return{Toast:e}},[]).then(({Toast:e})=>{new e(a).show(),a.addEventListener("hidden.bs.toast",()=>{a.remove()})})}function x(e,t){if(!t||t.length<2)return e;const n=t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),i=new RegExp(`(${n})`,"gi");return e.replace(i,"<mark>$1</mark>")}const k=Object.freeze(Object.defineProperty({__proto__:null,hideSearchingState:T,highlightSearchTerms:x,initializeRenderer:z,renderEventDetails:L,renderEventsResponsive:w,renderEventsTable:C,renderEventsTimeline:F,renderPatientSearchResults:B,showActiveFiltersIndicator:M,showError:S,showExportProgress:R,showExportSuccess:$,showFilterStats:P,showLoading:I,showSearchingState:D,updateSearchResultsCount:f},Symbol.toStringTag,{value:"Module"}));let A=null;function O(e){A=e}function j(e){if(!e)return;const n=document.getElementById("evento-id"),i=document.getElementById("evento-tipo"),a=document.getElementById("evento-data"),o=document.getElementById("evento-descrizione"),r=document.getElementById("evento-tipo-intervento"),s=document.getElementById("evento-paziente"),l=document.getElementById("evento-paziente-id");if(n&&(n.value=e.id||""),i&&(i.value=e.tipo_evento||""),a&&(a.value=e.dataEventoFormatted||e.data_evento||""),o&&(o.value=e.descrizione||""),r&&(r.value=e.tipo_intervento||""),s){s.value=e.pazienteInfo?.nomeCompleto||""}if(l){l.value=e.pazienteInfo?.id||e.paziente_id||""}V(e.tipo_evento),t.log("üìù Form popolato con evento:",e.id)}function N(){A.eventForm&&(A.eventForm.reset(),A.patientNameInput&&delete A.patientNameInput.dataset.patientId,V(""),U(),t.log("üßπ Form evento resettato"))}function H(e,t="danger"){const i=document.getElementById("evento-messaggio-container");i&&(i.innerHTML=n(`\n    <div class="alert alert-${t} alert-dismissible fade show" role="alert">\n      ${n(e)}\n      <button type="button" class="btn-close" data-bs-dismiss="alert"></button>\n    </div>\n  `))}function U(){const e=document.getElementById("evento-messaggio-container");e&&(e.innerHTML="")}function q(e,t="add"){const n=document.getElementById("evento-modal-title"),i=document.getElementById("evento-modal-icon");n&&(n.textContent=e,i&&(i.textContent=t))}function V(e){const t=document.getElementById("discharge-fields"),n=document.getElementById("transfer-fields"),i=document.getElementById("intervento-fields"),a=document.getElementById("infezione-fields");t&&(t.style.display="none"),n&&(n.style.display="none"),i&&(i.style.display="none"),a&&(a.style.display="none");const o=document.getElementById("evento-tipo-intervento"),r=document.getElementById("evento-agente-patogeno");switch(o&&(o.value="",o.required=!1),r&&(r.value="",r.required=!1),e){case"dimissione":t&&(t.style.display="block");break;case"trasferimento":n&&(n.style.display="block");break;case"intervento":i&&(i.style.display="block"),o&&(o.required=!0);break;case"infezione":a&&(a.style.display="block"),r&&(r.required=!0)}}function W(){if(!A.eventForm)return{isValid:!1,errors:["Form non trovato"]};const e=[];if(A.eventTypeSelect?.value||e.push("Tipo evento √® obbligatorio"),A.eventDateInput?.value||e.push("Data evento √® obbligatoria"),A.eventDescriptionInput?.value?.trim()||e.push("Descrizione √® obbligatoria"),A.patientNameInput?.dataset?.patientId||e.push("Selezionare un paziente valido"),A.eventDateInput?.value){const t=new Date(A.eventDateInput.value),n=new Date;n.setHours(23,59,59,999),t>n&&e.push("La data evento non pu√≤ essere nel futuro")}const t=A.eventTypeSelect?.value;if("dimissione"===t&&(A.dischargeCodeSelect?.value||e.push("Codice dimissione √® obbligatorio per le dimissioni"),A.dischargeDestinationSelect?.value||e.push("Destinazione dimissione √® obbligatoria per le dimissioni")),"trasferimento"===t&&(A.transferSourceInput?.value?.trim()||e.push("Provenienza √® obbligatoria per i trasferimenti"),A.transferDestinationInput?.value?.trim()||e.push("Destinazione √® obbligatoria per i trasferimenti")),"intervento"===t){const t=document.getElementById("evento-tipo-intervento");t?.value||e.push("Tipo intervento √® obbligatorio per gli interventi")}if("infezione"===t){const t=document.getElementById("evento-agente-patogeno");t?.value?.trim()||e.push("Agente patogeno √® obbligatorio per le infezioni")}return{isValid:0===e.length,errors:e}}function G(){if(!A.eventForm)return null;const e={tipo_evento:A.eventTypeSelect?.value||"",data_evento:A.eventDateInput?.value||"",descrizione:A.eventDescriptionInput?.value?.trim()||"",note:A.eventNotesInput?.value?.trim()||"",reparto:A.departmentSelect?.value||"",priorita:A.prioritySelect?.value||"",status:A.statusSelect?.value||"attivo",paziente_id:A.patientNameInput?.dataset?.patientId||null},t=e.tipo_evento;if("dimissione"===t&&(e.codice_dimissione=A.dischargeCodeSelect?.value||"",e.destinazione_dimissione=A.dischargeDestinationSelect?.value||""),"trasferimento"===t&&(e.provenienza_trasferimento=A.transferSourceInput?.value?.trim()||"",e.destinazione_trasferimento=A.transferDestinationInput?.value?.trim()||""),"intervento"===t){const t=document.getElementById("evento-tipo-intervento");e.tipo_intervento=t?.value||""}if("infezione"===t){const t=document.getElementById("evento-agente-patogeno");e.agente_patogeno=t?.value?.trim()||""}return e}function J(e){if(!A.eventForm)return;A.eventForm.querySelectorAll("input, select, textarea, button").forEach(t=>{t.disabled=!e}),t.log("üìù Form "+(e?"abilitato":"disabilitato"))}function K(e,t="Salvataggio in corso..."){const i=A.saveBtn;i&&(e?(i.disabled=!0,i.innerHTML=n(`\n      <span class="spinner-border spinner-border-sm me-2" role="status"></span>\n      ${n(t)}\n    `)):(i.disabled=!1,i.innerHTML=n('\n      <span class="material-icons me-1">save</span>\n      Salva\n    ')))}function Q(e){if(!Array.isArray(e))return;const t=A.eventForm?.querySelectorAll(".is-invalid");t?.forEach(e=>e.classList.remove("is-invalid"));const n={"Tipo evento √® obbligatorio":A.eventTypeSelect,"Data evento √® obbligatoria":A.eventDateInput,"Descrizione √® obbligatoria":A.eventDescriptionInput,"Selezionare un paziente valido":A.patientNameInput,"Codice dimissione √® obbligatorio per le dimissioni":A.dischargeCodeSelect,"Destinazione dimissione √® obbligatoria per le dimissioni":A.dischargeDestinationSelect,"Provenienza √® obbligatoria per i trasferimenti":A.transferSourceInput,"Destinazione √® obbligatoria per i trasferimenti":A.transferDestinationInput};e.forEach(e=>{const t=n[e];t&&t.classList.add("is-invalid")})}let X=null;function Y(e,n=3e3){if(!A.eventForm)return;const i=()=>{X&&clearTimeout(X),X=setTimeout(()=>{const n=G();W().isValid&&n.descrizione&&(e(n,!0),t.log("üíæ Auto-save eseguito"))},n)};A.eventForm.querySelectorAll("input, select, textarea").forEach(e=>{e.addEventListener("input",i),e.addEventListener("change",i)}),t.log("üíæ Auto-save abilitato con delay di",n,"ms")}function Z(){X&&(clearTimeout(X),X=null),t.log("üíæ Auto-save disabilitato")}const ee=Object.freeze(Object.defineProperty({__proto__:null,clearFormMessages:U,disableAutoSave:Z,enableAutoSave:Y,getFormData:G,highlightFormErrors:Q,initializeForms:O,populateEventForm:j,resetEventForm:N,setFormEnabled:J,setFormLoading:K,showFormMessage:H,toggleEventTypeFields:V,updateModalTitle:q,validateEventForm:W},Symbol.toStringTag,{value:"Module"}));const te={paziente_search:"",paziente_id:"",tipo_evento:"",data_da:"",data_a:"",reparto:"",stato:"",agente_patogeno:"",sortColumn:"",sortDirection:"desc"};let ne={...te};const ie=new Set;function ae(){const e={...ne};ie.forEach(t=>{try{t(e)}catch(n){}})}function oe(){return{...ne}}function re(e={}){return ne={...te,...e},ae(),oe()}const se={get:oe,set:function(e={}){return ne={...ne,...e},ae(),oe()},replace:re,reset:function(){return ne={...te},ae(),oe()},subscribe:function(e){return"function"==typeof e?(ie.add(e),()=>ie.delete(e)):()=>{}},getDefault:function(){return{...te}},loadFromState:function(e,t="eventiCliniciFilters"){try{const n=e?.getState?.(t);if(n&&"object"==typeof n)return re(n)}catch(n){}return oe()},saveToState:function(e,t="eventiCliniciFilters"){try{e?.setState?.(t,ne)}catch(n){}}};let le=null,ce=null;function de(e){le=e,t.log("üéõÔ∏è Modulo Filters inizializzato");try{ve(se.get())}catch(n){}try{"function"==typeof ce&&ce(),ce=se.subscribe(e=>{ve(e)})}catch(n){}}function me(){if(!le)return t.warn("‚ö†Ô∏è DOM elements non inizializzati per resetFiltersUI"),void 0;le.filterType&&(le.filterType.value=""),le.filterDateFrom&&(le.filterDateFrom.value=""),le.filterDateTo&&(le.filterDateTo.value=""),le.filterReparto&&(le.filterReparto.value=""),le.filterStato&&(le.filterStato.value=""),le.filterSortColumn&&(le.filterSortColumn.value=""),le.filterSortDirection&&(le.filterSortDirection.value="desc"),le.filterStatus&&(le.filterStatus.value=""),le.searchPatientInput&&(le.searchPatientInput.value=""),le.filterPriorityFrom&&(le.filterPriorityFrom.value=""),le.filterPriorityTo&&(le.filterPriorityTo.value=""),le.filterCreatedBy&&(le.filterCreatedBy.value=""),le.filterHasAllegati&&(le.filterHasAllegati.checked=!1),t.log("üßπ Filtri UI resettati")}function ve(e){return le?e?(le.filterType&&e.tipo_evento&&(le.filterType.value=e.tipo_evento),le.filterDateFrom&&e.data_da&&(le.filterDateFrom.value=e.data_da),le.filterDateTo&&e.data_a&&(le.filterDateTo.value=e.data_a),le.filterReparto&&e.reparto&&(le.filterReparto.value=e.reparto),le.filterStato&&e.stato&&(le.filterStato.value=e.stato),le.filterSortColumn&&e.sortColumn&&(le.filterSortColumn.value=e.sortColumn),le.filterSortDirection&&e.sortDirection&&(le.filterSortDirection.value=e.sortDirection),le.filterStatus&&e.status&&(le.filterStatus.value=e.status),le.searchPatientInput&&e.paziente&&(le.searchPatientInput.value=e.paziente),le.filterPriorityFrom&&e.priorita_da&&(le.filterPriorityFrom.value=e.priorita_da),le.filterPriorityTo&&e.priorita_a&&(le.filterPriorityTo.value=e.priorita_a),le.filterCreatedBy&&e.creato_da&&(le.filterCreatedBy.value=e.creato_da),le.filterHasAllegati&&"boolean"==typeof e.ha_allegati&&(le.filterHasAllegati.checked=e.ha_allegati),t.log("üéõÔ∏è Filtri applicati all'UI:",e),void 0):(t.warn("‚ö†Ô∏è Nessun filtro fornito per applyFiltersToUI"),void 0):(t.warn("‚ö†Ô∏è DOM elements non inizializzati per applyFiltersToUI"),void 0)}function ue(){if(!le)return t.warn("‚ö†Ô∏è DOM elements non inizializzati per getFiltersFromUI"),{};const e={paziente_search:le.searchPatientInput?.value||"",tipo_evento:le.filterType?.value||"",data_da:le.filterDateFrom?.value||"",data_a:le.filterDateTo?.value||"",reparto:le.filterReparto?.value||"",stato:le.filterStato?.value||"",sortColumn:le.filterSortColumn?.value||"",sortDirection:le.filterSortDirection?.value||"desc"};return t.log("üìä Filtri raccolti dalla UI:",e),e}function pe(e){return le.filterReparto?e&&Array.isArray(e)?async function(e,t,n){if(!e)return n&&n.warn("‚ö†Ô∏è Elemento filterReparto non trovato"),void 0;try{const i=e.customSelectInstance;if(i){n&&n.log("üîß Popolamento CustomSelect reparto con",t.length,"opzioni");const a=e.querySelector('option[value=""]');e.innerHTML="",a&&e.appendChild(a),t.forEach(t=>{const n=document.createElement("option");n.value=t,n.textContent=t,e.appendChild(n)}),"function"==typeof i.updateOptions?(i.updateOptions(),n&&n.log("üîß CustomSelect options updated")):"function"==typeof i.refresh&&(i.refresh(),n&&n.log("üîß CustomSelect refreshed"))}else{n&&n.log("üîß Popolamento select standard reparto con",t.length,"opzioni");const i=e.querySelector('option[value=""]');e.innerHTML="",i&&e.appendChild(i),t.forEach(t=>{const n=document.createElement("option");n.value=t,n.textContent=t,e.appendChild(n)})}n&&n.log("‚úÖ Filtro reparti popolato con",t.length,"opzioni")}catch(i){n&&n.error("‚ùå Errore popolamento filtro reparti:",i)}}(le.filterReparto,e,t):(t.warn("‚ö†Ô∏è Lista departments non valida:",e),void 0):(t.warn("‚ö†Ô∏è DOM elements non inizializzati per populateDepartmentFilter"),void 0)}function ge(e){if(!le)return t.warn("‚ö†Ô∏è DOM elements non inizializzati per populateAdvancedFilters"),void 0;t.log("üîß Popolamento filtri avanzati:",e)}function he(){const e=ue(),n=[];if(e.data_da&&e.data_a){new Date(e.data_da)>new Date(e.data_a)&&n.push("La data di inizio deve essere precedente alla data di fine")}if(e.priorita_da&&e.priorita_a){parseInt(e.priorita_da)>parseInt(e.priorita_a)&&n.push("La priorit√† minima deve essere inferiore alla priorit√† massima")}const i=0===n.length;return t.log(i?"‚úÖ Filtri validi":"‚ùå Errori validazione filtri:",n),{isValid:i,errors:n}}function fe(){const e=ue();let n=0;return e.tipo_evento&&n++,e.data_da&&n++,e.data_a&&n++,e.reparto&&n++,e.status&&n++,e.paziente&&n++,e.priorita_da&&n++,e.priorita_a&&n++,e.creato_da&&n++,e.ha_allegati&&n++,t.log(`üìä Filtri attivi: ${n}`),n}function Ee(e="eventi-clinici-filters"){try{const n=ue();localStorage.setItem(e,JSON.stringify(n)),t.log("üíæ Filtri salvati nel localStorage:",e)}catch(n){t.error("‚ùå Errore salvataggio filtri:",n)}}function ye(e="eventi-clinici-filters"){try{const n=localStorage.getItem(e);if(n){const i=JSON.parse(n);return t.log("üìÇ Filtri caricati dal localStorage:",e),i}}catch(n){t.error("‚ùå Errore caricamento filtri:",n)}return null}function be(e="eventi-clinici-filters"){const n=ye(e);if(n){ve(n);try{se.set(n)}catch(i){}t.log("üîÑ Filtri salvati ripristinati")}}function ze(e="eventi-clinici-filters"){try{localStorage.removeItem(e),t.log("üßπ Filtri salvati rimossi:",e)}catch(n){t.error("‚ùå Errore rimozione filtri salvati:",n)}}const _e=Object.freeze(Object.defineProperty({__proto__:null,applyFiltersToUI:ve,clearSavedFilters:ze,getActiveFiltersCount:fe,getFiltersFromUI:ue,initializeFilters:de,loadFiltersFromStorage:ye,populateAdvancedFilters:ge,populateDepartmentFilter:pe,resetFiltersUI:me,restoreSavedFilters:be,saveFiltersToStorage:Ee,validateFilters:he},Symbol.toStringTag,{value:"Module"}));function we(e,t=150,n={}){const{leading:i=!1,trailing:a=!0}=n;let o,r,s=null,l=!1;function c(){s=null,a&&o&&(e.apply(r,o),o=r=void 0,l=!1)}function d(...n){o=n,r=this,s?(clearTimeout(s),s=setTimeout(c,t)):(i&&!l&&(e.apply(r,o),l=!0,o=r=void 0),s=setTimeout(c,t))}return d.cancel=()=>{s&&(clearTimeout(s),s=null),o=r=void 0,l=!1},d}let Fe={},Ce=null,Ie=null,Se=!1;function De(){t.log("üîÑ Inizializzazione DOM elements per eventi clinici..."),Fe={timelineContainer:document.getElementById("eventi-timeline-container"),tableContainer:document.getElementById("eventi-table-container"),tableBody:document.getElementById("eventi-table-body"),searchPatientInput:document.getElementById("eventi-search-patient"),patientSearchResults:document.getElementById("patient-search-results"),filterType:document.getElementById("eventi-filter-type"),filterDateFrom:document.getElementById("eventi-filter-date-from"),filterDateTo:document.getElementById("eventi-filter-date-to"),filterReparto:document.getElementById("eventi-filter-reparto"),filterStato:document.getElementById("eventi-filter-stato"),filterSortColumn:document.getElementById("eventi-sort-column"),filterSortDirection:document.getElementById("eventi-sort-direction"),addEventBtn:document.getElementById("eventi-add-btn"),resetFiltersBtn:document.getElementById("eventi-reset-filters-btn"),exportCsvBtn:document.getElementById("eventi-export-csv-btn"),exportJsonBtn:document.getElementById("eventi-export-json-btn"),paginationControls:document.getElementById("eventi-pagination-controls"),prevPageBtn:document.getElementById("eventi-prev-page-btn"),nextPageBtn:document.getElementById("eventi-next-page-btn"),pageInfo:document.getElementById("eventi-page-info"),eventFormModal:document.getElementById("evento-form-modal"),eventDetailModal:document.getElementById("evento-detail-modal"),modalTitle:document.getElementById("evento-modal-title"),modalIcon:document.getElementById("evento-modal-icon"),saveBtn:document.getElementById("evento-save-btn"),detailTitle:document.getElementById("evento-detail-title"),detailIcon:document.getElementById("evento-detail-icon"),detailContent:document.getElementById("evento-detail-content"),messageContainer:document.getElementById("evento-messaggio-container"),eventForm:document.getElementById("evento-form"),eventId:document.getElementById("evento-id"),eventPatientInput:document.getElementById("evento-paziente"),eventPatientId:document.getElementById("evento-paziente-id"),eventPatientSearchResults:document.getElementById("evento-patient-search-results"),eventType:document.getElementById("evento-tipo"),eventDate:document.getElementById("evento-data"),eventDescription:document.getElementById("evento-descrizione"),interventionFields:document.getElementById("intervento-fields"),interventionType:document.getElementById("evento-tipo-intervento"),infectionFields:document.getElementById("infezione-fields"),infectionAgent:document.getElementById("evento-agente-patogeno")};const n=Object.values(Fe).filter(e=>null!==e).length,i=Object.keys(Fe).length;t.log(`üéØ DOM elements inizializzati: ${n}/${i} elementi trovati`);const a=Object.entries(Fe).filter(([e,t])=>null===t).map(([e,t])=>e);return a.length>0&&t.warn("‚ö†Ô∏è Elementi DOM non trovati:",a),t.log("‚úÖ DOM elements inizializzati per eventi clinici UI"),async function(){try{const n=await e(()=>Promise.resolve().then(()=>k),void 0);n.initializeRenderer&&n.initializeRenderer(Fe);const i=await e(()=>Promise.resolve().then(()=>ee),void 0);i.initializeForms&&i.initializeForms(Fe);const a=await e(()=>Promise.resolve().then(()=>_e),void 0);a.initializeFilters&&a.initializeFilters(Fe),t.log("üîó Tutti i moduli UI inizializzati")}catch(n){t.error("‚ùå Errore inizializzazione moduli UI:",n)}}(),function(){if(Le(),"undefined"!=typeof window){const e=we(()=>Le(),150);window.addEventListener("resize",e)}}(),Se=!0,t.log("‚úÖ State Manager inizializzato completamente"),Fe}function Te(){return Se?Fe:(t.warn("‚ö†Ô∏è State Manager non inizializzato, chiamando initializeDOMElements()"),De())}function Be(){try{t.log("üßπ Resetting UI state..."),Ce=null,Ie=null,Fe={},Se=!1,t.log("‚úÖ UI state reset: renderers e domElements azzerati")}catch(e){t.warn("‚ö†Ô∏è Errore durante resetUIState:",e)}}function Le(){try{!function(e={}){const t=window.innerWidth<768,n=window.innerWidth>=768&&window.innerWidth<1200,i=window.innerWidth>=1200;e.tableContainer&&(e.tableContainer.style.display=i?"block":"none"),e.timelineContainer&&(e.timelineContainer.style.display=i?"none":"block",e.timelineContainer.classList.toggle("mobile-layout",t),e.timelineContainer.classList.toggle("tablet-layout",n)),document.querySelectorAll(".timeline-event-card").forEach(e=>{e.classList.toggle("mobile-card",t),e.classList.toggle("tablet-card",n)})}(),t.log("üì± Design responsive applicato")}catch(e){t.warn("‚ö†Ô∏è Errore applicazione design responsive:",e)}}function Me(e){const t=[["ID","Tipo Evento","Data Evento","Paziente","Reparto","Descrizione","Tipo Intervento","Agente Patogeno","Data Fine Evento","Stato","Data Creazione"].join(",")];return e.forEach(e=>{const n="infezione"===e.tipo_evento?e.data_fine_evento?"Risolta":"Attiva":"",i=[e.id||"",e.tipo_evento||"",e.data_evento||"",e.pazienti?`"${e.pazienti.nome} ${e.pazienti.cognome}"`:"",e.pazienti?.reparto_appartenenza||"",e.descrizione?`"${String(e.descrizione).replace(/"/g,'""')}"`:"",e.tipo_intervento||"",e.agente_patogeno||"",e.data_fine_evento||"",n,e.created_at||""];t.push(i.join(","))}),t.join("\n")}async function Pe(e={},n="csv"){t.log("üì§ Esportazione eventi filtrati:",{format:n,filters:e});const a=await r.getAllEventi(e,{page:0,limit:1e4});if(!a.eventi||0===a.eventi.length)throw new Error("Nessun evento da esportare con i filtri correnti");const o=function(e,t){const n=(new Date).toISOString().split("T")[0];switch(t){case"csv":return{data:Me(e),filename:`eventi_clinici_${n}.csv`,mimeType:"text/csv;charset=utf-8;"};case"json":return{data:JSON.stringify(e,null,2),filename:`eventi_clinici_${n}.json`,mimeType:"application/json;charset=utf-8;"};default:throw new Error(`Formato di esportazione non supportato: ${t}`)}}(a.eventi,n);return"csv"===n?s(o.data,o.filename):"json"===n&&l(o.data,o.filename),t.log("‚úÖ Esportazione completata:",{formato:n,eventi:a.eventi.length,filename:o.filename}),i.success(`Esportati ${a.eventi.length} eventi con successo!`),{success:!0,count:a.eventi.length,filename:o.filename}}const Re={intervento:{icon:"fas fa-scalpel",color:"primary",label:"Intervento"},infezione:{icon:"fas fa-virus",color:"warning",label:"Infezione"}};function $e(e){if(!e)return null;const t=function(e){const t=Re[e]||{};return{icon:t.icon||"fas fa-calendar-alt",color:t.color||"secondary",label:t.label||e}}(e.tipo_evento);return{...e,dataEventoFormatted:o(e.data_evento),dataFineEventoFormatted:e.data_fine_evento?o(e.data_fine_evento):null,isInfezione:"infezione"===e.tipo_evento,isRisolta:"infezione"===e.tipo_evento&&!!e.data_fine_evento,tipoEventoIcon:t.icon,tipoEventoColor:t.color,tipoEventoLabel:t.label,pazienteInfo:e.pazienti?{id:e.pazienti.id,nomeCompleto:`${e.pazienti.nome} ${e.pazienti.cognome}`,reparto:e.pazienti.reparto_appartenenza}:null}}function xe(e){return e?{...e,nomeCompleto:`${e.nome} ${e.cognome}`,dataRicoveroFormatted:o(e.data_ricovero),isActive:!e.data_dimissione}:null}function ke(e,t){const n=e?.message||t;e?.message?.includes("Errore nel")||i.error(n)}async function Ae(e={},n=0){try{t.log("üìä Caricamento eventi clinici:",{filters:e,page:n});const i={page:n,limit:10},a=await r.getAllEventi(e,i),o={...a,eventi:a.eventi.map($e)};return t.log("‚úÖ Eventi clinici caricati:",{count:o.eventi.length,totalCount:o.totalCount,currentPage:o.currentPage}),o}catch(i){throw t.error("‚ùå Errore caricamento eventi clinici:",i),ke(i,"Errore nel caricamento degli eventi clinici"),i}}async function Oe(e){try{t.log("‚ûï Creazione nuovo evento clinico:",e);const n=$e(await r.createEvento(e));return t.log("‚úÖ Evento clinico creato:",n),n}catch(n){throw t.error("‚ùå Errore creazione evento clinico:",n),ke(n,"Errore nella creazione dell'evento clinico"),n}}async function je(e,n){try{t.log("‚úèÔ∏è Aggiornamento evento clinico:",{eventoId:e,eventoData:n});const i=$e(await r.updateEvento(e,n));return t.log("‚úÖ Evento clinico aggiornato:",i),i}catch(i){throw t.error("‚ùå Errore aggiornamento evento clinico:",i),ke(i,"Errore nell'aggiornamento dell'evento clinico"),i}}async function Ne(e){try{return t.log("üóëÔ∏è Eliminazione evento clinico:",e),await r.deleteEvento(e),t.log("‚úÖ Evento clinico eliminato:",e),!0}catch(n){throw t.error("‚ùå Errore eliminazione evento clinico:",n),ke(n,"Errore nell'eliminazione dell'evento clinico"),n}}async function He(e,n){try{return t.log("ü©∫ Risoluzione infezione:",{eventoId:e,dataFine:n}),await r.resolveInfezione(e,n),t.log("‚úÖ Infezione risolta:",e),!0}catch(i){throw t.error("‚ùå Errore risoluzione infezione:",i),ke(i,"Errore nella risoluzione dell'infezione"),i}}async function Ue(e,n=!0){try{if(!e||e.trim().length<2)return[];t.log("üîç Ricerca pazienti (service):",{searchTerm:e,activeOnly:n});const i=(await c.search(e.trim(),{activeOnly:n})).map(xe);return t.log("‚úÖ Pazienti trovati:",i.length),i}catch(i){throw t.error("‚ùå Errore ricerca pazienti:",i),ke(i,"Errore nella ricerca pazienti"),i}}function qe(e,n){return new Promise((i,a)=>{if(!e||e.trim().length<2){return i([]),void 0}try{t.log("üîç Ricerca pazienti real-time (service):",e),c.searchRealtime(e.trim(),{activeOnly:!0,debounceMs:300,onUpdate:e=>{const t=e.map(xe);n,i(t)},onError:e=>{t.error("‚ùå Errore ricerca pazienti real-time:",e),a(e)}})}catch(o){t.error("‚ùå Errore inizializzazione ricerca real-time:",o),a(o)}})}async function Ve(e={}){try{const n={...se.get(),...e};!function(e){const t=[];if(e.data_da&&e.data_a){const n=new Date(e.data_da),i=new Date(e.data_a);n>i&&t.push("La data di inizio non pu√≤ essere successiva alla data di fine");const a=Math.abs(i-n);Math.ceil(a/864e5)>730&&t.push("Il range di date non pu√≤ superare i 2 anni")}const n=(new Date).toISOString().split("T")[0];if(e.data_da&&e.data_da>n&&t.push("La data di inizio non pu√≤ essere nel futuro"),e.data_a&&e.data_a>n&&t.push("La data di fine non pu√≤ essere nel futuro"),e.tipo_intervento&&"intervento"!==e.tipo_evento&&t.push("Il filtro tipo intervento pu√≤ essere usato solo con eventi di tipo intervento"),t.length>0)throw new Error(t.join(", "))}(n),("sortColumn"in e||"sortDirection"in e)&&function(e,t){if(!e)return;if(!["data_evento","tipo_evento","created_at","paziente_nome"].includes(e))throw new Error(`Colonna di ordinamento non valida: ${e}`);if(!["asc","desc"].includes(t))throw new Error(`Direzione di ordinamento non valida: ${t}`)}(n.sortColumn,n.sortDirection);const i=await Ae(n,0);return se.replace(n),t.log("‚úÖ Filtri applicati:",{filtri:Object.keys(e),risultati:i.eventi.length}),i}catch(n){throw t.error("‚ùå Errore applicazione filtri:",n),ke(n,"Errore nell'applicazione dei filtri"),n}}async function We(e){return Ve({tipo_evento:e})}async function Ge(e,t){return Ve({data_da:e||"",data_a:t||""})}async function Je(e){return Ve({stato:e||""})}async function Ke(e,t=""){return Ve({paziente_search:e||"",paziente_id:t||""})}async function Qe(e){return Ve(e)}async function Xe(e,t){return Ve({sortColumn:e,sortDirection:t})}function Ye(){se.reset(),t.log("üîß Filtri in memoria reimpostati ai default")}async function Ze(){try{t.log("üîÑ Reset completo filtri e stato"),se.reset(),a.setState("eventiCliniciFilters",null),rt();const e=await Ae(se.get(),0);return t.log("‚úÖ Reset completo completato:",{risultati:e.eventi.length}),i.success("Filtri resettati con successo"),e}catch(e){throw t.error("‚ùå Errore reset completo filtri:",e),ke(e,"Errore nel reset dei filtri"),e}}async function et(){try{se.saveToState(a,"eventiCliniciFilters"),t.log("üíæ Filtri salvati nello stato:",se.get()),i.success("Filtri salvati con successo")}catch(e){throw t.error("‚ùå Errore salvataggio filtri:",e),i.error("Impossibile salvare i filtri"),e}}async function tt(){try{return se.loadFromState(a,"eventiCliniciFilters"),t.log("üìÇ Filtri caricati dallo stato:",se.get()),se.get()}catch(e){return t.error("‚ùå Errore caricamento filtri:",e),se.get()}}async function nt(e="csv"){try{return await Pe(se.get(),e)}catch(n){throw t.error("‚ùå Errore esportazione eventi:",n),i.error(n.message||"Errore nell'esportazione degli eventi"),n}}async function it(){try{t.log("üìä Calcolo statistiche filtri");const e=(await r.getAllEventi({},{page:0,limit:1,countOnly:!0})).totalCount,n=(await r.getAllEventi(se.get(),{page:0,limit:1,countOnly:!0})).totalCount,i=Object.entries(se.get()).filter(([e,t])=>t&&""!==t.toString().trim()&&!["sortColumn","sortDirection"].includes(e)).map(([e,t])=>({key:e,value:t})),a={totalEvents:e,filteredEvents:n,activeFiltersCount:i.length,activeFilters:i,filterEfficiency:e>0?((e-n)/e*100).toFixed(1):0};return t.log("‚úÖ Statistiche filtri calcolate:",a),a}catch(e){return t.error("‚ùå Errore calcolo statistiche filtri:",e),{totalEvents:0,filteredEvents:0,activeFiltersCount:0,activeFilters:[],filterEfficiency:0}}}async function at(){try{t.log("üè• Caricamento lista reparti");const e=await m("reparto_appartenenza");return t.log("‚úÖ Lista reparti caricata:",e.length),e}catch(e){return t.error("‚ùå Errore caricamento reparti:",e),[]}}async function ot(){try{t.log("üí° Caricamento filtri suggeriti");const e=await r.getSuggestedFilters();return t.log("‚úÖ Filtri suggeriti caricati:",e),e}catch(e){return t.error("‚ùå Errore caricamento filtri suggeriti:",e),{tipiIntervento:[],agentiPatogeni:[],reparti:[]}}}function rt(){try{c.resetCache?.(),t.log("üßπ Cache ricerca pazienti pulita (service)")}catch(e){t.warn("‚ö†Ô∏è clearSearchCache: resetCache non disponibile sul service")}}const st=Object.freeze(Object.defineProperty({__proto__:null,applyCombinedFilters:Qe,applyDateRangeFilter:Ge,applyEventTypeFilter:We,applyFilters:Ve,applyPatientSearch:Ke,applyPatientStatusFilter:Je,applySorting:Xe,clearSearchCache:rt,createEventoClinico:Oe,deleteEventoClinico:Ne,exportFilteredEvents:nt,fetchEventiClinici:Ae,getDepartmentsList:at,getFilterStats:it,getSuggestedFilters:ot,loadFiltersFromState:tt,resetCurrentFiltersToDefaults:Ye,resetFiltersAndState:Ze,resolveInfezioneEvento:He,saveFiltersToState:et,searchPatientsRealTime:qe,searchPazientiForEvents:Ue,updateEventoClinico:je},Symbol.toStringTag,{value:"Module"})),lt=Object.freeze(Object.defineProperty({__proto__:null,applyFiltersToUI:ve,applyResponsiveDesign:Le,clearFormMessages:U,clearSavedFilters:ze,disableAutoSave:Z,enableAutoSave:Y,getActiveFiltersCount:fe,getDOMElements:Te,getFiltersFromUI:ue,getFormData:G,hideSearchingState:T,highlightFormErrors:Q,highlightSearchTerms:x,initializeDOMElements:De,initializeFilters:de,initializeForms:O,initializeRenderer:z,loadFiltersFromStorage:ye,populateAdvancedFilters:ge,populateDepartmentFilter:pe,populateEventForm:j,renderEventDetails:L,renderEventsResponsive:w,renderEventsTable:C,renderEventsTimeline:F,renderPatientSearchResults:B,resetCurrentFiltersToDefaults:Ye,resetEventForm:N,resetFiltersUI:me,resetUIState:Be,restoreSavedFilters:be,saveFiltersToStorage:Ee,setFormEnabled:J,setFormLoading:K,showActiveFiltersIndicator:M,showError:S,showExportProgress:R,showExportSuccess:$,showFilterStats:P,showFormMessage:H,showLoading:I,showSearchingState:D,toggleEventTypeFields:V,updateModalTitle:q,updateSearchResultsCount:f,validateEventForm:W,validateFilters:he},Symbol.toStringTag,{value:"Module"}));function ct(e){const t=document.getElementById(e);t&&(t.style.display="none")}function dt(){ct("patient-search-results"),ct("evento-patient-search-results")}class mt{constructor(e,t,n,i,a){this.state=e,this.domElements=t,this.filterManager=n,this.modalManager=i,this.dataManager=a,this.cleanupFunctions=[]}async setupEventListeners(){this.setupMainActionListeners(),this.setupFilterListeners(),this.setupPaginationListeners(),this.setupModalFormListeners(),this.setupSearchListeners(),await this.setupWindowListeners(),t.log("‚úÖ Event listeners configurati")}setupMainActionListeners(){if(this.domElements.addEventBtn){const e=()=>this.modalManager.openEventModal();this.domElements.addEventBtn.addEventListener("click",e),this.cleanupFunctions.push(()=>this.domElements.addEventBtn.removeEventListener("click",e))}if(this.domElements.resetFiltersBtn){const e=()=>this.filterManager.resetFilters();this.domElements.resetFiltersBtn.addEventListener("click",e),this.cleanupFunctions.push(()=>this.domElements.resetFiltersBtn.removeEventListener("click",e))}if(this.domElements.exportBtn){const e=()=>this.dataManager.exportEvents("csv");this.domElements.exportBtn.addEventListener("click",e),this.cleanupFunctions.push(()=>this.domElements.exportBtn.removeEventListener("click",e))}if(this.domElements.exportCsvBtn){const e=()=>this.dataManager.exportEvents("csv");this.domElements.exportCsvBtn.addEventListener("click",e),this.cleanupFunctions.push(()=>this.domElements.exportCsvBtn.removeEventListener("click",e))}if(this.domElements.exportJsonBtn){const e=()=>this.dataManager.exportEvents("json");this.domElements.exportJsonBtn.addEventListener("click",e),this.cleanupFunctions.push(()=>this.domElements.exportJsonBtn.removeEventListener("click",e))}if(this.domElements.saveFiltersBtn){const e=()=>this.filterManager.saveCurrentFilters();this.domElements.saveFiltersBtn.addEventListener("click",e),this.cleanupFunctions.push(()=>this.domElements.saveFiltersBtn.removeEventListener("click",e))}if(this.domElements.loadFiltersBtn){const e=()=>this.filterManager.loadSavedFilters();this.domElements.loadFiltersBtn.addEventListener("click",e),this.cleanupFunctions.push(()=>this.domElements.loadFiltersBtn.removeEventListener("click",e))}}setupFilterListeners(){if(this.domElements.filterType){const e=async()=>{await this.filterManager.handleEventTypeFilter(this.domElements.filterType.value)};this.domElements.filterType.addEventListener("change",e),this.cleanupFunctions.push(()=>this.domElements.filterType.removeEventListener("change",e))}if(this.domElements.filterDateFrom){const e=this.filterManager.createDebouncedFilterHandler(async()=>{await this.filterManager.handleDateRangeFilter(this.domElements)},500);this.domElements.filterDateFrom.addEventListener("change",e),this.cleanupFunctions.push(()=>this.domElements.filterDateFrom.removeEventListener("change",e))}if(this.domElements.filterDateTo){const e=this.filterManager.createDebouncedFilterHandler(async()=>{await this.filterManager.handleDateRangeFilter(this.domElements)},500);this.domElements.filterDateTo.addEventListener("change",e),this.cleanupFunctions.push(()=>this.domElements.filterDateTo.removeEventListener("change",e))}if(this.domElements.filterReparto){const e=async()=>{await this.filterManager.handleCombinedFiltersChange()};this.domElements.filterReparto.addEventListener("change",e),this.cleanupFunctions.push(()=>this.domElements.filterReparto.removeEventListener("change",e))}if(this.domElements.filterStato){const e=async()=>{await this.filterManager.handlePatientStatusFilter(this.domElements.filterStato.value)};this.domElements.filterStato.addEventListener("change",e),this.cleanupFunctions.push(()=>this.domElements.filterStato.removeEventListener("change",e))}if(this.domElements.filterTipoIntervento){const e=this.filterManager.createDebouncedFilterHandler(async()=>{await this.filterManager.handleCombinedFiltersChange()},500);this.domElements.filterTipoIntervento.addEventListener("input",e),this.cleanupFunctions.push(()=>this.domElements.filterTipoIntervento.removeEventListener("input",e))}if(this.domElements.filterSortColumn){const e=async()=>{await this.filterManager.handleSortingChange(this.domElements)};this.domElements.filterSortColumn.addEventListener("change",e),this.cleanupFunctions.push(()=>this.domElements.filterSortColumn.removeEventListener("change",e))}if(this.domElements.filterSortDirection){const e=async()=>{await this.filterManager.handleSortingChange(this.domElements)};this.domElements.filterSortDirection.addEventListener("change",e),this.cleanupFunctions.push(()=>this.domElements.filterSortDirection.removeEventListener("change",e))}this.setupAdvancedFiltersToggle()}setupAdvancedFiltersToggle(){if(this.domElements.advancedFiltersToggle&&this.domElements.advancedFiltersContainer){const e=e=>{e.preventDefault(),e.stopPropagation();const n=this.domElements.advancedFiltersContainer.classList.contains("show");n?(this.domElements.advancedFiltersContainer.classList.remove("show"),this.domElements.advancedFiltersToggle.setAttribute("aria-expanded","false")):(this.domElements.advancedFiltersContainer.classList.add("show"),this.domElements.advancedFiltersToggle.setAttribute("aria-expanded","true"));const i=this.domElements.advancedFiltersToggle.querySelector(".material-icons");i&&(i.style.transform=n?"rotate(0deg)":"rotate(180deg)"),t.log("üîß Filtri avanzati "+(n?"chiusi":"aperti"))};this.domElements.advancedFiltersToggle.removeAttribute("data-bs-toggle"),this.domElements.advancedFiltersToggle.removeAttribute("data-bs-target"),this.domElements.advancedFiltersToggle.addEventListener("click",e),this.cleanupFunctions.push(()=>this.domElements.advancedFiltersToggle.removeEventListener("click",e))}}setupPaginationListeners(){if(this.domElements.prevPageBtn){const e=()=>this.dataManager.changePage(this.state.currentPage-1);this.domElements.prevPageBtn.addEventListener("click",e),this.cleanupFunctions.push(()=>this.domElements.prevPageBtn.removeEventListener("click",e))}if(this.domElements.nextPageBtn){const e=()=>this.dataManager.changePage(this.state.currentPage+1);this.domElements.nextPageBtn.addEventListener("click",e),this.cleanupFunctions.push(()=>this.domElements.nextPageBtn.removeEventListener("click",e))}}setupModalFormListeners(){if(this.domElements.saveBtn){const e=()=>this.modalManager.handleSaveEvent(()=>this.dataManager.loadEventsData());this.domElements.saveBtn.addEventListener("click",e),this.cleanupFunctions.push(()=>this.domElements.saveBtn.removeEventListener("click",e))}if(this.domElements.eventType){const e=e=>V(e.target.value);this.domElements.eventType.addEventListener("change",e),this.cleanupFunctions.push(()=>this.domElements.eventType.removeEventListener("change",e))}if(this.domElements.editBtn){const e=()=>this.modalManager.handleEditEvent();this.domElements.editBtn.addEventListener("click",e),this.cleanupFunctions.push(()=>this.domElements.editBtn.removeEventListener("click",e))}if(this.domElements.deleteBtn){const e=()=>this.modalManager.handleDeleteEvent();this.domElements.deleteBtn.addEventListener("click",e),this.cleanupFunctions.push(()=>this.domElements.deleteBtn.removeEventListener("click",e))}}setupSearchListeners(){if(this.domElements.searchPatientInput&&this.domElements.patientSearchResults){const{destroy:e}=d({input:this.domElements.searchPatientInput,resultsContainer:this.domElements.patientSearchResults,activeOnly:!0,onSelect:e=>this.filterManager.handlePatientSearchFilter(this.domElements.searchPatientInput.value,e?.id)});this.cleanupFunctions.push(()=>e&&e())}if(this.domElements.eventPatientInput&&this.domElements.eventPatientSearchResults){const{destroy:e}=d({input:this.domElements.eventPatientInput,resultsContainer:this.domElements.eventPatientSearchResults,activeOnly:!0,onSelect:e=>{this.domElements.eventPatientId&&(this.domElements.eventPatientId.value=e.id)}});this.cleanupFunctions.push(()=>e&&e())}const e=e=>{e.target.closest(".position-relative")||dt()};document.addEventListener("click",e),this.cleanupFunctions.push(()=>document.removeEventListener("click",e))}async setupWindowListeners(){const{applyResponsiveDesign:t}=await e(async()=>{const{applyResponsiveDesign:e}=await Promise.resolve().then(()=>lt);return{applyResponsiveDesign:e}},void 0),n=()=>t();window.addEventListener("resize",n),this.cleanupFunctions.push(()=>window.removeEventListener("resize",n))}initializeAdvancedFiltersState(){if(this.domElements.advancedFiltersToggle&&this.domElements.advancedFiltersContainer){this.domElements.advancedFiltersContainer.classList.remove("show"),this.domElements.advancedFiltersToggle.setAttribute("aria-expanded","false");const e=this.domElements.advancedFiltersToggle.querySelector(".material-icons");e&&(e.style.transform="rotate(0deg)",e.style.transition="transform 0.3s ease"),t.log("‚úÖ Stato iniziale filtri avanzati impostato (nascosti)")}}cleanup(){t.log("üßπ Cleanup event listeners"),this.cleanupFunctions.forEach(e=>{try{e()}catch(n){t.error("‚ùå Errore durante cleanup listener:",n)}}),this.cleanupFunctions=[]}}class vt{constructor(e,t,n){this.state=e,this.setupEventCardListenersCallback=t,this.updateFilterStatsCallback=n}async handlePatientSearchFilter(e,n){try{D();const t=await Ke(e,n||"");w(t),this.setupEventCardListenersCallback(),f(t.eventi.length,t.totalCount,se.get()),M(se.get())}catch(i){t.error("‚ùå Errore filtro ricerca pazienti:",i)}finally{T()}}async handleDateRangeFilter(e){try{D();const t=e.filterDateFrom?.value||"",n=e.filterDateTo?.value||"",i=await Ge(t,n);w(i),this.setupEventCardListenersCallback(),f(i.eventi.length,i.totalCount,se.get()),M(se.get())}catch(n){t.error("‚ùå Errore filtro range date:",n),n.message.includes("data di inizio")&&i.error(n.message)}finally{T()}}async handleEventTypeFilter(e){try{D();const t=await We(e);w(t),this.setupEventCardListenersCallback(),f(t.eventi.length,t.totalCount,se.get()),M(se.get())}catch(n){t.error("‚ùå Errore applicazione filtro tipo evento:",n)}finally{T()}}async handlePatientStatusFilter(e){try{D();const t=await Je(e);w(t),this.setupEventCardListenersCallback(),f(t.eventi.length,t.totalCount,se.get()),M(se.get())}catch(n){t.error("‚ùå Errore applicazione filtro stato paziente:",n)}finally{T()}}async handleCombinedFiltersChange(){try{D();const e=ue(),t=await Qe(e);se.set(e),this.state.currentPage=0,w(t),this.setupEventCardListenersCallback(),f(t.eventi.length,t.totalCount,se.get()),M(se.get()),await this.updateFilterStatsCallback(),et()}catch(e){t.error("‚ùå Errore applicazione filtri combinati:",e)}finally{T()}}async handleSortingChange(e){try{D();const t=e.filterSortColumn?.value||"data_evento",n=e.filterSortDirection?.value||"desc",i=await Xe(t,n);this.state.filters.sortColumn=t,this.state.filters.sortDirection=n,w(i),this.setupEventCardListenersCallback(),f(i.eventi.length,i.totalCount,se.get()),await this.updateFilterStatsCallback(),et()}catch(n){t.error("‚ùå Errore applicazione ordinamento:",n)}finally{T()}}async handlePatientSearch(e,n){try{if(!e||e.length<2)return ct(n),void 0;B(await qe(e),n)}catch(i){t.error("‚ùå Errore ricerca pazienti:",i)}}async resetFilters(){try{D();const e=await Ze();me(),se.reset(),this.state.currentPage=0,this.state.selectedPatientId=null,dt(),w(e),this.setupEventCardListenersCallback(),f(e.eventi.length,e.totalCount,se.get()),M(se.get()),await this.updateFilterStatsCallback()}catch(e){t.error("‚ùå Errore reset filtri:",e)}finally{T()}}async saveCurrentFilters(){try{await et()}catch(e){t.error("‚ùå Errore salvataggio filtri:",e)}}async loadSavedFilters(){try{const e=await tt();return e&&(se.set(e),ve(e),t.log("‚úÖ Filtri caricati dallo stato:",e)),e}catch(e){return t.error("‚ùå Errore caricamento filtri salvati:",e),null}}createPatientSearchHandler(e,t){return we(async e=>{const n=e.target.value;n&&n.length>=2?await this.handlePatientSearch(n,"patient-search-results"):ct("patient-search-results"),t&&await t(n)},300)}createDebouncedFilterHandler(e,t=500){return we(e,t)}}class ut{constructor(e,t){this.state=e,this.domElements=t,this.eventFormModal=null,this.eventDetailModal=null}waitForModalHidden(e,t=500){return new Promise(n=>{if(!e)return n();const i=()=>{e.removeEventListener("hidden.bs.modal",a),clearTimeout(o),n()},a=()=>i();e.addEventListener("hidden.bs.modal",a,{once:!0});const o=setTimeout(()=>{i()},t)})}ensureSingleModalOpen(){try{const e=Array.from(document.querySelectorAll(".modal-backdrop"));e.length>1&&e.slice(0,-1).forEach(e=>e.parentNode&&e.parentNode.removeChild(e));document.querySelector(".modal.show")?document.body.classList.add("modal-open"):document.body.classList.remove("modal-open")}catch(e){}}async initializeModals(){try{const{Modal:n}=await e(async()=>{const{Modal:e}=await import("./vendor-CQCqr9ER.js");return{Modal:e}},[]),i=this.domElements.eventFormModal,a=this.domElements.eventDetailModal;i&&(this.eventFormModal=new n(i,{backdrop:"static",keyboard:!1}),i.addEventListener("hide.bs.modal",()=>{this._defocus(i)})),a&&(this.eventDetailModal=new n(a),a.addEventListener("hide.bs.modal",()=>{this._defocus(a)})),t.log("‚úÖ Modali inizializzati")}catch(n){t.error("‚ùå Errore inizializzazione modali:",n)}}openEventModal(n=null){try{N(),U(),n?(this.state.editingEventId=n.id,q("Modifica Evento Clinico","edit"),j(n)):(this.state.editingEventId=null,q("Nuovo Evento Clinico","add")),setTimeout(()=>{const t=document.getElementById("evento-data");t&&t._flatpickrInstance?t._flatpickrInstance.redraw():e(async()=>{const{initCustomDatepickers:e}=await import("./CustomDatepicker-6By5cdaM.js");return{initCustomDatepickers:e}},__vite__mapDeps([0,1])).then(({initCustomDatepickers:e})=>{e("[data-datepicker]",{maxDate:"today",allowInput:!0,locale:{firstDayOfWeek:1}})})},100),this.eventFormModal&&this.eventFormModal.show()}catch(a){t.error("‚ùå Errore apertura modal evento:",a),i.error("Errore nell'apertura del form")}}async handleSaveEvent(e){try{const t=function(e){const t=e.eventDate?.value||"";let n=null;if(t&&""!==t.trim())try{n=v(t.trim())}catch(i){throw new Error(i.message||"Formato data non valido. Utilizzare il formato gg/mm/aaaa")}return{paziente_id:e.eventPatientId?.value||"",tipo_evento:e.eventType?.value||"",data_evento:n,descrizione:e.eventDescription?.value||"",tipo_intervento:e.interventionType?.value||"",agente_patogeno:e.infectionAgent?.value||""}}(this.domElements),a=function(e){const t=[];return e.paziente_id||t.push("Seleziona un paziente"),e.tipo_evento||t.push("Seleziona il tipo di evento"),e.data_evento||t.push("Inserisci la data dell'evento"),"intervento"!==e.tipo_evento||e.tipo_intervento||t.push("Specifica il tipo di intervento"),t.length>0?{isValid:!1,errors:t.join("<br>")}:{isValid:!0,errors:null}}(t);if(!a.isValid)return H(a.errors),void 0;let o;this.domElements.saveBtn&&(this.domElements.saveBtn.disabled=!0,this.domElements.saveBtn.innerHTML=n('<span class="spinner-border spinner-border-sm me-1"></span>Salvando...')),o=this.state.editingEventId?await je(this.state.editingEventId,t):await Oe(t),this.eventFormModal&&this.eventFormModal.hide(),e&&await e();i.success(`Evento clinico ${this.state.editingEventId?"aggiornato":"creato"} con successo`)}catch(a){t.error("‚ùå Errore salvataggio evento:",a),H(a.message||"Errore nel salvataggio dell'evento")}finally{this.domElements.saveBtn&&(this.domElements.saveBtn.disabled=!1,this.domElements.saveBtn.innerHTML=n('<span class="material-icons me-1" style="vertical-align: middle;">save</span>Salva Evento'))}}async showEventDetail(e){try{let t=await Ae({...this.state.filters},this.state.currentPage||0),n=t.eventi.find(t=>t.id===e);if(!n)for(let i=0;i<10&&(t=await Ae({},i),n=t.eventi.find(t=>t.id===e),!n);i++);if(!n)return i.error("Evento non trovato"),void 0;L(n),this.state.editingEventId=e,this.eventDetailModal&&this.eventDetailModal.show()}catch(n){t.error("‚ùå Errore visualizzazione dettagli evento:",n),i.error("Errore: "+n.message)}}async editEvent(e){try{let t=await Ae({...this.state.filters},this.state.currentPage||0),n=t.eventi.find(t=>t.id===e);if(!n)for(let i=0;i<10&&(t=await Ae({},i),n=t.eventi.find(t=>t.id===e),!n);i++);if(!n)return i.error("Evento non trovato"),void 0;const a=this.domElements&&this.domElements.eventDetailModal;this.eventDetailModal&&(this._defocus(a),this.eventDetailModal.hide(),await this.waitForModalHidden(a)),this.openEventModal(n),this.ensureSingleModalOpen()}catch(n){t.error("‚ùå Errore modifica evento:",n)}}handleEditEvent(){this.state.editingEventId&&this.editEvent(this.state.editingEventId)}async confirmDeleteEvent(t){const{ConfirmModal:n}=await e(async()=>{const{ConfirmModal:e}=await import("./ConfirmModal-Cfb9NCKT.js");return{ConfirmModal:e}},__vite__mapDeps([2,3,4,5,6])),i=n.forClinicalEventDeletion();await i.show()&&await this.deleteEvent(t)}async handleDeleteEvent(){this.state.editingEventId&&await this.confirmDeleteEvent(this.state.editingEventId)}async deleteEvent(e,n){try{if(await Ne(e),this.eventDetailModal){this._defocus(this.domElements&&this.domElements.eventDetailModal),this.eventDetailModal.hide()}n&&await n()}catch(i){t.error("‚ùå Errore eliminazione evento:",i)}}async handleModalPatientSearch(e){try{if(!e||e.length<2)return ct("evento-patient-search-results"),void 0;B(await Ue(e),"evento-patient-search-results")}catch(n){t.error("‚ùå Errore ricerca pazienti modal:",n)}}createModalPatientSearchHandler(){return we(e=>this.handleModalPatientSearch(e.target.value),300)}cleanup(){if(this.eventFormModal&&(this.eventFormModal.hide(),this.eventFormModal=null),this.eventDetailModal){this._defocus(this.domElements&&this.domElements.eventDetailModal),this.eventDetailModal.hide(),this.eventDetailModal=null}}}ut.prototype._defocus=function(e){try{const t=document.activeElement;e&&t&&e.contains(t)&&"function"==typeof t.blur&&t.blur()}catch{}};class pt{constructor(e,t){this.state=e,this.setupEventCardListenersCallback=t,this._cardListenersAttached=!1}async loadEventsData(){if(!this.state.isLoading)try{this.state.isLoading=!0,I(),t.log("üìä Caricamento eventi con filtri:",se.get());const e=await Ae(se.get(),this.state.currentPage);return t.log("üîç Risultato fetchEventiClinici:",e),w(e),t.log("üé® renderEventsResponsive completato"),this.setupEventCardListeners(),f(e.eventi.length,e.totalCount,se.get()),M(se.get()),this.updateFilterStats().catch(e=>t.error("‚ùå Errore aggiornamento statistiche filtri (async):",e)),t.log("‚úÖ Eventi caricati:",e.eventi.length),e}catch(e){throw t.error("‚ùå Errore caricamento eventi:",e),S("Errore nel caricamento degli eventi clinici"),e}finally{this.state.isLoading=!1}}setupEventCardListeners(){this._cardListenersAttached||this.setupEventCardListenersCallback&&(this.setupEventCardListenersCallback(),this._cardListenersAttached=!0)}async changePage(e){e<0||this.state.isLoading||(this.state.currentPage=e,await this.loadEventsData())}async exportEvents(e="csv"){try{R(!0),await nt(e)}catch(n){t.error("‚ùå Errore export eventi catturato nel DataManager:",n)}finally{R(!1)}}async updateFilterStats(){try{const e=await it();this.state.filterStats=e,P(e)}catch(e){t.error("‚ùå Errore aggiornamento statistiche filtri:",e)}}clearCache(){rt()}onShowEventDetail(e){}onEditEvent(e){}onDeleteEvent(e){}}let gt={currentPage:0,filters:{paziente_search:"",tipo_evento:"",data_da:"",data_a:"",reparto:"",stato:"",sortColumn:"",sortDirection:"desc"},selectedPatientId:null,editingEventId:null,isLoading:!1,filterStats:null},ht={},ft=null,Et=null,yt=null,bt=null,zt=null,_t=null;async function wt(n){try{t.log("üöÄ Inizializzazione vista eventi clinici"),t.log("üìù Step 1: Inizializzazione DOM elements"),await async function(e=5,n=100){for(let a=0;a<e;a++)try{const i=["eventi-timeline-container","eventi-add-btn","eventi-reset-filters-btn"].filter(e=>!document.getElementById(e));if(0===i.length)return t.log(`‚úÖ Tutti gli elementi DOM critici trovati al tentativo ${a+1}`),De(),void 0;t.log(`‚ö†Ô∏è Tentativo ${a+1}: elementi DOM mancanti:`,i),a<e-1&&await new Promise(e=>setTimeout(e,n))}catch(i){t.error(`‚ùå Errore tentativo ${a+1} inizializzazione DOM:`,i),a<e-1&&await new Promise(e=>setTimeout(e,n))}throw t.error("‚ùå Impossibile trovare tutti gli elementi DOM critici dopo",e,"tentativi"),new Error("Template DOM non completamente caricato")}(),ht=Te(),t.log("‚úÖ DOM elements inizializzati"),t.log("üìù Step 2: Inizializzazione managers"),await async function(){try{const n=()=>{zt||(zt=async n=>{const i=n.target.closest&&n.target.closest(".event-detail-btn"),a=n.target.closest&&n.target.closest(".event-edit-btn"),o=n.target.closest&&n.target.closest(".event-delete-btn"),r=n.target.closest&&n.target.closest(".event-resolve-btn");if(!(i||a||o||r))return;n.stopPropagation();const s=i||a||o||r,l=s&&s.dataset&&s.dataset.eventoId;if(l)try{const t=document.getElementById("eventi-azioni-modal");if(t)try{const{Modal:n}=await e(async()=>{const{Modal:e}=await import("./vendor-CQCqr9ER.js");return{Modal:e}},[]);(n.getInstance(t)||n.getOrCreateInstance(t)).hide(),await new Promise(e=>{let n=!1;const i=setTimeout(()=>{n||(n=!0,e())},250);t.addEventListener("hidden.bs.modal",()=>{n||(n=!0,clearTimeout(i),e())},{once:!0})})}catch{t.classList.remove("show"),t.style.display="none",document.querySelectorAll(".modal-backdrop").forEach(e=>e.parentNode&&e.parentNode.removeChild(e)),document.body.classList.remove("modal-open")}if(i)return yt.showEventDetail(l),void 0;if(a)return yt.editEvent(l),void 0;if(o)return yt.confirmDeleteEvent(l),void 0;if(r){const{ResolveInfectionModal:t}=await e(async()=>{const{ResolveInfectionModal:e}=await import("./ResolveInfectionModal-mGmbDoNZ.js");return{ResolveInfectionModal:e}},__vite__mapDeps([7,3,4,5,6,0,1])),n=new t({eventoId:l}),i=await n.show();return i&&(await He(l,i),await ft.loadEventsData()),void 0}}catch(c){t.error("Errore gestione azione evento:",c)}},document.addEventListener("click",zt),_t=()=>{try{document.removeEventListener("click",zt)}catch(e){t.warn("Listener di delega non rimosso (forse gi√† rimosso)",e)}zt=null,_t=null})};ft=new pt(gt,n),Et=new vt(gt,n,()=>ft.updateFilterStats()),yt=new ut(gt,ht),await yt.initializeModals(),bt=new mt(gt,ht,Et,yt,ft),t.log("‚úÖ Manager inizializzati")}catch(n){t.error("‚ùå Errore inizializzazione manager:",n)}}(),t.log("‚úÖ Managers inizializzati"),t.log("ÔøΩ Stepi 3: Inizializzazione form components"),function(){try{p(),u("[data-datepicker]"),t.log("‚úÖ Componenti form inizializzati")}catch(e){t.error("‚ùå Errore inizializzazione componenti form:",e)}}(),t.log("‚úÖ Form components inizializzati"),t.log("üìù Step 4: Setup event handlers"),await async function(){try{await bt.setupEventListeners(),bt.initializeAdvancedFiltersState(),t.log("‚úÖ Event handlers configurati")}catch(e){t.error("‚ùå Errore setup event handlers:",e)}}(),t.log("‚úÖ Event handlers configurati"),t.log("üìù Step 5: Caricamento filtri suggeriti"),await async function(){try{await new Promise(e=>setTimeout(e,100));const[e,n]=await Promise.all([ot(),at()]);t.log("üîß Popolamento filtri con:",{reparti:n.length,tipiIntervento:e.tipiIntervento?.length||0,agentiPatogeni:e.agentiPatogeni?.length||0}),await pe(n),await ge(e),setTimeout(()=>{document.querySelectorAll('select[data-custom="true"]').forEach(e=>{t.log("üîß Checking CustomSelect:",e.id,"has instance?",!!e._customSelect);const n=e.customSelectInstance||e._customSelect;n&&("function"==typeof n.updateOptions?(t.log("üîß Updating CustomSelect options:",e.id),n.updateOptions()):"function"==typeof n.refresh&&(t.log("üîß Refreshing CustomSelect:",e.id),n.refresh()))})},50),setTimeout(()=>{const e=document.getElementById("eventi-filter-reparto");if(e){const n=e.customSelectInstance||e._customSelect;n&&(t.log("üîß Final update/refresh of reparto CustomSelect"),"function"==typeof n.updateOptions?n.updateOptions():"function"==typeof n.refresh&&n.refresh())}},500),t.log("‚úÖ Suggerimenti filtri caricati:",{suggestions:e,reparti:n.length})}catch(e){t.error("‚ùå Errore caricamento suggerimenti filtri:",e)}}(),t.log("‚úÖ Filtri suggeriti caricati"),t.log("üìù Step 6: Reset filtri"),Ye(),me(),t.log("‚úÖ Filtri resettati"),t.log("üìù Step 7: Caricamento dati iniziali");try{t.log("üß™ Test caricamento diretto...");const{fetchEventiClinici:n}=await e(async()=>{const{fetchEventiClinici:e}=await Promise.resolve().then(()=>st);return{fetchEventiClinici:e}},void 0),i=await n({},0);t.log("üß™ Test result:",i);const a=await ft.loadEventsData();t.log("‚úÖ Dati iniziali caricati:",a)}catch(i){throw t.error("‚ùå ERRORE caricamento dati iniziali:",i),i}return t.log("üìù Step 8: Applicazione responsive design"),Le(),t.log("‚úÖ Responsive design applicato"),t.log("üìù Step 9: Gestione parametri URL"),function(e){if(!e)return;const t=e.get("patient");t&&(gt.selectedPatientId=t,gt.filters.paziente_search=t);const n=e.get("type");n&&ht.filterType&&(ht.filterType.value=n,gt.filters.tipo_evento=n)}(n),t.log("‚úÖ Parametri URL gestiti"),t.log("‚úÖ Vista eventi clinici inizializzata con successo"),Ft}catch(i){t.error("üí• ERRORE CRITICO inizializzazione vista eventi clinici:",i);try{S("Errore nel caricamento della vista eventi clinici. Ricaricare la pagina.")}catch(a){t.error("‚ùå Impossibile mostrare errore UI:",a),alert("Errore critico nel caricamento. Ricaricare la pagina.")}throw i}}function Ft(){if(t.log("üßπ Cleanup vista eventi clinici"),bt&&"function"==typeof bt.cleanup&&bt.cleanup(),yt&&"function"==typeof yt.cleanup&&yt.cleanup(),ft&&"function"==typeof ft.clearCache&&ft.clearCache(),_t)try{_t()}catch(e){t.warn("‚ö†Ô∏è Errore durante la rimozione del listener di delega:",e)}try{Be()}catch(e){t.warn("‚ö†Ô∏è Errore durante resetUIState:",e)}gt={currentPage:0,filters:{paziente_search:"",tipo_evento:"",data_da:"",data_a:"",reparto:"",stato:"",agente_patogeno:"",sortColumn:"data_evento",sortDirection:"desc"},selectedPatientId:null,editingEventId:null,isLoading:!1,filterStats:null},ft=null,Et=null,yt=null,bt=null,zt=null,_t=null,ht={},t.log("‚úÖ Cleanup completato")}export{wt as initEventiCliniciView};
